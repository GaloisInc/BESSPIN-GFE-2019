//
// Generated by Bluespec Compiler, version 2017.07.A (build e1df8052c, 2017-07-21)
//
//
//
//
// Ports:
// Name                         I/O  size props
// RDY_set_verbosity              O     1 const
// tv_verifier_info_get_get       O   608 reg
// RDY_tv_verifier_info_get_get   O     1 reg
// to_raw_mem_request_get         O   353
// RDY_to_raw_mem_request_get     O     1
// RDY_to_raw_mem_response_put    O     1
// get_to_console_get             O     8 reg
// RDY_get_to_console_get         O     1 reg
// RDY_put_from_console_put       O     1 reg
// assert_soft_reset              O     1 reg
// RDY_assert_soft_reset          O     1 const
// RDY_set_watch_tohost           O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// set_verbosity_verbosity        I     4 unused
// set_verbosity_logdelay         I    64 unused
// to_raw_mem_response_put        I   256
// put_from_console_put           I     8 reg
// set_watch_tohost_watch_tohost  I     1 reg
// set_watch_tohost_tohost_addr   I    64 reg
// EN_set_verbosity               I     1 unused
// EN_to_raw_mem_response_put     I     1
// EN_put_from_console_put        I     1
// EN_set_watch_tohost            I     1
// EN_tv_verifier_info_get_get    I     1
// EN_to_raw_mem_request_get      I     1
// EN_get_to_console_get          I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkSoC_Top(CLK,
		 RST_N,

		 set_verbosity_verbosity,
		 set_verbosity_logdelay,
		 EN_set_verbosity,
		 RDY_set_verbosity,

		 EN_tv_verifier_info_get_get,
		 tv_verifier_info_get_get,
		 RDY_tv_verifier_info_get_get,

		 EN_to_raw_mem_request_get,
		 to_raw_mem_request_get,
		 RDY_to_raw_mem_request_get,

		 to_raw_mem_response_put,
		 EN_to_raw_mem_response_put,
		 RDY_to_raw_mem_response_put,

		 EN_get_to_console_get,
		 get_to_console_get,
		 RDY_get_to_console_get,

		 put_from_console_put,
		 EN_put_from_console_put,
		 RDY_put_from_console_put,

		 assert_soft_reset,
		 RDY_assert_soft_reset,

		 set_watch_tohost_watch_tohost,
		 set_watch_tohost_tohost_addr,
		 EN_set_watch_tohost,
		 RDY_set_watch_tohost);
  input  CLK;
  input  RST_N;

  // action method set_verbosity
  input  [3 : 0] set_verbosity_verbosity;
  input  [63 : 0] set_verbosity_logdelay;
  input  EN_set_verbosity;
  output RDY_set_verbosity;

  // actionvalue method tv_verifier_info_get_get
  input  EN_tv_verifier_info_get_get;
  output [607 : 0] tv_verifier_info_get_get;
  output RDY_tv_verifier_info_get_get;

  // actionvalue method to_raw_mem_request_get
  input  EN_to_raw_mem_request_get;
  output [352 : 0] to_raw_mem_request_get;
  output RDY_to_raw_mem_request_get;

  // action method to_raw_mem_response_put
  input  [255 : 0] to_raw_mem_response_put;
  input  EN_to_raw_mem_response_put;
  output RDY_to_raw_mem_response_put;

  // actionvalue method get_to_console_get
  input  EN_get_to_console_get;
  output [7 : 0] get_to_console_get;
  output RDY_get_to_console_get;

  // action method put_from_console_put
  input  [7 : 0] put_from_console_put;
  input  EN_put_from_console_put;
  output RDY_put_from_console_put;

  // value method assert_soft_reset
  output assert_soft_reset;
  output RDY_assert_soft_reset;

  // action method set_watch_tohost
  input  set_watch_tohost_watch_tohost;
  input  [63 : 0] set_watch_tohost_tohost_addr;
  input  EN_set_watch_tohost;
  output RDY_set_watch_tohost;

  // signals for module outputs
  wire [607 : 0] tv_verifier_info_get_get;
  wire [352 : 0] to_raw_mem_request_get;
  wire [7 : 0] get_to_console_get;
  wire RDY_assert_soft_reset,
       RDY_get_to_console_get,
       RDY_put_from_console_put,
       RDY_set_verbosity,
       RDY_set_watch_tohost,
       RDY_to_raw_mem_request_get,
       RDY_to_raw_mem_response_put,
       RDY_tv_verifier_info_get_get,
       assert_soft_reset;

  // register boot_rom_axi4_deburster_rg_ar_beat_count
  reg [7 : 0] boot_rom_axi4_deburster_rg_ar_beat_count;
  wire [7 : 0] boot_rom_axi4_deburster_rg_ar_beat_count$D_IN;
  wire boot_rom_axi4_deburster_rg_ar_beat_count$EN;

  // register boot_rom_axi4_deburster_rg_b_beat_count
  reg [7 : 0] boot_rom_axi4_deburster_rg_b_beat_count;
  wire [7 : 0] boot_rom_axi4_deburster_rg_b_beat_count$D_IN;
  wire boot_rom_axi4_deburster_rg_b_beat_count$EN;

  // register boot_rom_axi4_deburster_rg_b_resp
  reg [1 : 0] boot_rom_axi4_deburster_rg_b_resp;
  wire [1 : 0] boot_rom_axi4_deburster_rg_b_resp$D_IN;
  wire boot_rom_axi4_deburster_rg_b_resp$EN;

  // register boot_rom_axi4_deburster_rg_r_beat_count
  reg [7 : 0] boot_rom_axi4_deburster_rg_r_beat_count;
  wire [7 : 0] boot_rom_axi4_deburster_rg_r_beat_count$D_IN;
  wire boot_rom_axi4_deburster_rg_r_beat_count$EN;

  // register boot_rom_axi4_deburster_rg_reset
  reg boot_rom_axi4_deburster_rg_reset;
  wire boot_rom_axi4_deburster_rg_reset$D_IN,
       boot_rom_axi4_deburster_rg_reset$EN;

  // register boot_rom_axi4_deburster_rg_w_beat_count
  reg [7 : 0] boot_rom_axi4_deburster_rg_w_beat_count;
  wire [7 : 0] boot_rom_axi4_deburster_rg_w_beat_count$D_IN;
  wire boot_rom_axi4_deburster_rg_w_beat_count$EN;

  // register cpu_initial_reset
  reg cpu_initial_reset;
  wire cpu_initial_reset$D_IN, cpu_initial_reset$EN;

  // register flash_axi4_deburster_rg_ar_beat_count
  reg [7 : 0] flash_axi4_deburster_rg_ar_beat_count;
  wire [7 : 0] flash_axi4_deburster_rg_ar_beat_count$D_IN;
  wire flash_axi4_deburster_rg_ar_beat_count$EN;

  // register flash_axi4_deburster_rg_b_beat_count
  reg [7 : 0] flash_axi4_deburster_rg_b_beat_count;
  wire [7 : 0] flash_axi4_deburster_rg_b_beat_count$D_IN;
  wire flash_axi4_deburster_rg_b_beat_count$EN;

  // register flash_axi4_deburster_rg_b_resp
  reg [1 : 0] flash_axi4_deburster_rg_b_resp;
  wire [1 : 0] flash_axi4_deburster_rg_b_resp$D_IN;
  wire flash_axi4_deburster_rg_b_resp$EN;

  // register flash_axi4_deburster_rg_r_beat_count
  reg [7 : 0] flash_axi4_deburster_rg_r_beat_count;
  wire [7 : 0] flash_axi4_deburster_rg_r_beat_count$D_IN;
  wire flash_axi4_deburster_rg_r_beat_count$EN;

  // register flash_axi4_deburster_rg_reset
  reg flash_axi4_deburster_rg_reset;
  wire flash_axi4_deburster_rg_reset$D_IN, flash_axi4_deburster_rg_reset$EN;

  // register flash_axi4_deburster_rg_w_beat_count
  reg [7 : 0] flash_axi4_deburster_rg_w_beat_count;
  wire [7 : 0] flash_axi4_deburster_rg_w_beat_count$D_IN;
  wire flash_axi4_deburster_rg_w_beat_count$EN;

  // register mem0_controller_axi4_deburster_rg_ar_beat_count
  reg [7 : 0] mem0_controller_axi4_deburster_rg_ar_beat_count;
  wire [7 : 0] mem0_controller_axi4_deburster_rg_ar_beat_count$D_IN;
  wire mem0_controller_axi4_deburster_rg_ar_beat_count$EN;

  // register mem0_controller_axi4_deburster_rg_b_beat_count
  reg [7 : 0] mem0_controller_axi4_deburster_rg_b_beat_count;
  wire [7 : 0] mem0_controller_axi4_deburster_rg_b_beat_count$D_IN;
  wire mem0_controller_axi4_deburster_rg_b_beat_count$EN;

  // register mem0_controller_axi4_deburster_rg_b_resp
  reg [1 : 0] mem0_controller_axi4_deburster_rg_b_resp;
  wire [1 : 0] mem0_controller_axi4_deburster_rg_b_resp$D_IN;
  wire mem0_controller_axi4_deburster_rg_b_resp$EN;

  // register mem0_controller_axi4_deburster_rg_r_beat_count
  reg [7 : 0] mem0_controller_axi4_deburster_rg_r_beat_count;
  wire [7 : 0] mem0_controller_axi4_deburster_rg_r_beat_count$D_IN;
  wire mem0_controller_axi4_deburster_rg_r_beat_count$EN;

  // register mem0_controller_axi4_deburster_rg_reset
  reg mem0_controller_axi4_deburster_rg_reset;
  wire mem0_controller_axi4_deburster_rg_reset$D_IN,
       mem0_controller_axi4_deburster_rg_reset$EN;

  // register mem0_controller_axi4_deburster_rg_w_beat_count
  reg [7 : 0] mem0_controller_axi4_deburster_rg_w_beat_count;
  wire [7 : 0] mem0_controller_axi4_deburster_rg_w_beat_count$D_IN;
  wire mem0_controller_axi4_deburster_rg_w_beat_count$EN;

  // register rg_state
  reg [1 : 0] rg_state;
  wire [1 : 0] rg_state$D_IN;
  wire rg_state$EN;

  // ports of submodule boot_rom
  wire [63 : 0] boot_rom$set_addr_map_addr_base,
		boot_rom$set_addr_map_addr_lim,
		boot_rom$slave_araddr,
		boot_rom$slave_awaddr,
		boot_rom$slave_rdata,
		boot_rom$slave_wdata;
  wire [7 : 0] boot_rom$slave_arlen,
	       boot_rom$slave_awlen,
	       boot_rom$slave_wstrb;
  wire [3 : 0] boot_rom$slave_arcache,
	       boot_rom$slave_arid,
	       boot_rom$slave_arqos,
	       boot_rom$slave_arregion,
	       boot_rom$slave_awcache,
	       boot_rom$slave_awid,
	       boot_rom$slave_awqos,
	       boot_rom$slave_awregion,
	       boot_rom$slave_bid,
	       boot_rom$slave_rid;
  wire [2 : 0] boot_rom$slave_arprot,
	       boot_rom$slave_arsize,
	       boot_rom$slave_awprot,
	       boot_rom$slave_awsize;
  wire [1 : 0] boot_rom$slave_arburst,
	       boot_rom$slave_awburst,
	       boot_rom$slave_bresp,
	       boot_rom$slave_rresp;
  wire boot_rom$EN_set_addr_map,
       boot_rom$slave_arlock,
       boot_rom$slave_arready,
       boot_rom$slave_arvalid,
       boot_rom$slave_awlock,
       boot_rom$slave_awready,
       boot_rom$slave_awvalid,
       boot_rom$slave_bready,
       boot_rom$slave_bvalid,
       boot_rom$slave_rlast,
       boot_rom$slave_rready,
       boot_rom$slave_rvalid,
       boot_rom$slave_wlast,
       boot_rom$slave_wready,
       boot_rom$slave_wvalid;

  // ports of submodule boot_rom_axi4_deburster_f_r_arlen
  wire [7 : 0] boot_rom_axi4_deburster_f_r_arlen$D_IN,
	       boot_rom_axi4_deburster_f_r_arlen$D_OUT;
  wire boot_rom_axi4_deburster_f_r_arlen$CLR,
       boot_rom_axi4_deburster_f_r_arlen$DEQ,
       boot_rom_axi4_deburster_f_r_arlen$EMPTY_N,
       boot_rom_axi4_deburster_f_r_arlen$ENQ,
       boot_rom_axi4_deburster_f_r_arlen$FULL_N;

  // ports of submodule boot_rom_axi4_deburster_f_w_awlen
  wire [7 : 0] boot_rom_axi4_deburster_f_w_awlen$D_IN,
	       boot_rom_axi4_deburster_f_w_awlen$D_OUT;
  wire boot_rom_axi4_deburster_f_w_awlen$CLR,
       boot_rom_axi4_deburster_f_w_awlen$DEQ,
       boot_rom_axi4_deburster_f_w_awlen$EMPTY_N,
       boot_rom_axi4_deburster_f_w_awlen$ENQ,
       boot_rom_axi4_deburster_f_w_awlen$FULL_N;

  // ports of submodule boot_rom_axi4_deburster_xactor_from_master_f_rd_addr
  wire [96 : 0] boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$D_IN,
		boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT;
  wire boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$CLR,
       boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$DEQ,
       boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$EMPTY_N,
       boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$ENQ,
       boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$FULL_N;

  // ports of submodule boot_rom_axi4_deburster_xactor_from_master_f_rd_data
  wire [70 : 0] boot_rom_axi4_deburster_xactor_from_master_f_rd_data$D_IN,
		boot_rom_axi4_deburster_xactor_from_master_f_rd_data$D_OUT;
  wire boot_rom_axi4_deburster_xactor_from_master_f_rd_data$CLR,
       boot_rom_axi4_deburster_xactor_from_master_f_rd_data$DEQ,
       boot_rom_axi4_deburster_xactor_from_master_f_rd_data$EMPTY_N,
       boot_rom_axi4_deburster_xactor_from_master_f_rd_data$ENQ,
       boot_rom_axi4_deburster_xactor_from_master_f_rd_data$FULL_N;

  // ports of submodule boot_rom_axi4_deburster_xactor_from_master_f_wr_addr
  wire [96 : 0] boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$D_IN,
		boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT;
  wire boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$CLR,
       boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$DEQ,
       boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$EMPTY_N,
       boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$ENQ,
       boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$FULL_N;

  // ports of submodule boot_rom_axi4_deburster_xactor_from_master_f_wr_data
  wire [72 : 0] boot_rom_axi4_deburster_xactor_from_master_f_wr_data$D_IN,
		boot_rom_axi4_deburster_xactor_from_master_f_wr_data$D_OUT;
  wire boot_rom_axi4_deburster_xactor_from_master_f_wr_data$CLR,
       boot_rom_axi4_deburster_xactor_from_master_f_wr_data$DEQ,
       boot_rom_axi4_deburster_xactor_from_master_f_wr_data$EMPTY_N,
       boot_rom_axi4_deburster_xactor_from_master_f_wr_data$ENQ,
       boot_rom_axi4_deburster_xactor_from_master_f_wr_data$FULL_N;

  // ports of submodule boot_rom_axi4_deburster_xactor_from_master_f_wr_resp
  wire [5 : 0] boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$D_IN,
	       boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$D_OUT;
  wire boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$CLR,
       boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$DEQ,
       boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$EMPTY_N,
       boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$ENQ,
       boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$FULL_N;

  // ports of submodule boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr
  wire [96 : 0] boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$D_IN,
		boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT;
  wire boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$CLR,
       boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$DEQ,
       boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$EMPTY_N,
       boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$ENQ,
       boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$FULL_N;

  // ports of submodule boot_rom_axi4_deburster_xactor_to_slave_f_rd_data
  wire [70 : 0] boot_rom_axi4_deburster_xactor_to_slave_f_rd_data$D_IN,
		boot_rom_axi4_deburster_xactor_to_slave_f_rd_data$D_OUT;
  wire boot_rom_axi4_deburster_xactor_to_slave_f_rd_data$CLR,
       boot_rom_axi4_deburster_xactor_to_slave_f_rd_data$DEQ,
       boot_rom_axi4_deburster_xactor_to_slave_f_rd_data$EMPTY_N,
       boot_rom_axi4_deburster_xactor_to_slave_f_rd_data$ENQ,
       boot_rom_axi4_deburster_xactor_to_slave_f_rd_data$FULL_N;

  // ports of submodule boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr
  wire [96 : 0] boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$D_IN,
		boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT;
  wire boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$CLR,
       boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$DEQ,
       boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$EMPTY_N,
       boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$ENQ,
       boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$FULL_N;

  // ports of submodule boot_rom_axi4_deburster_xactor_to_slave_f_wr_data
  wire [72 : 0] boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$D_IN,
		boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$D_OUT;
  wire boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$CLR,
       boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$DEQ,
       boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$EMPTY_N,
       boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$ENQ,
       boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$FULL_N;

  // ports of submodule boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp
  wire [5 : 0] boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$D_IN,
	       boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$D_OUT;
  wire boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$CLR,
       boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$DEQ,
       boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$EMPTY_N,
       boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$ENQ,
       boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$FULL_N;

  // ports of submodule core
  wire [607 : 0] core$tv_verifier_info_tx_tdata;
  wire [75 : 0] core$tv_verifier_info_tx_tkeep,
		core$tv_verifier_info_tx_tstrb;
  wire [63 : 0] core$master0_araddr,
		core$master0_awaddr,
		core$master0_rdata,
		core$master0_wdata,
		core$master1_araddr,
		core$master1_awaddr,
		core$master1_rdata,
		core$master1_wdata;
  wire [15 : 0] core$cpu_external_interrupt_req;
  wire [7 : 0] core$master0_arlen,
	       core$master0_awlen,
	       core$master0_wstrb,
	       core$master1_arlen,
	       core$master1_awlen,
	       core$master1_wstrb;
  wire [3 : 0] core$master0_arcache,
	       core$master0_arid,
	       core$master0_arqos,
	       core$master0_arregion,
	       core$master0_awcache,
	       core$master0_awid,
	       core$master0_awqos,
	       core$master0_awregion,
	       core$master0_bid,
	       core$master0_rid,
	       core$master1_arcache,
	       core$master1_arid,
	       core$master1_arqos,
	       core$master1_arregion,
	       core$master1_awcache,
	       core$master1_awid,
	       core$master1_awqos,
	       core$master1_awregion,
	       core$master1_bid,
	       core$master1_rid;
  wire [2 : 0] core$master0_arprot,
	       core$master0_arsize,
	       core$master0_awprot,
	       core$master0_awsize,
	       core$master1_arprot,
	       core$master1_arsize,
	       core$master1_awprot,
	       core$master1_awsize;
  wire [1 : 0] core$master0_arburst,
	       core$master0_awburst,
	       core$master0_bresp,
	       core$master0_rresp,
	       core$master1_arburst,
	       core$master1_awburst,
	       core$master1_bresp,
	       core$master1_rresp;
  wire core$CLK_jtag_tclk_out,
       core$jtag_tclk,
       core$jtag_tdi,
       core$jtag_tdo,
       core$jtag_tms,
       core$master0_arlock,
       core$master0_arready,
       core$master0_arvalid,
       core$master0_awlock,
       core$master0_awready,
       core$master0_awvalid,
       core$master0_bready,
       core$master0_bvalid,
       core$master0_rlast,
       core$master0_rready,
       core$master0_rvalid,
       core$master0_wlast,
       core$master0_wready,
       core$master0_wvalid,
       core$master1_arlock,
       core$master1_arready,
       core$master1_arvalid,
       core$master1_awlock,
       core$master1_awready,
       core$master1_awvalid,
       core$master1_bready,
       core$master1_bvalid,
       core$master1_rlast,
       core$master1_rready,
       core$master1_rvalid,
       core$master1_wlast,
       core$master1_wready,
       core$master1_wvalid,
       core$tv_verifier_info_tx_tlast,
       core$tv_verifier_info_tx_tready,
       core$tv_verifier_info_tx_tvalid;

  // ports of submodule cpu_reset
  wire cpu_reset$ASSERT_IN, cpu_reset$OUT_RST;

  // ports of submodule fabric
  wire [63 : 0] fabric$v_from_masters_0_araddr,
		fabric$v_from_masters_0_awaddr,
		fabric$v_from_masters_0_rdata,
		fabric$v_from_masters_0_wdata,
		fabric$v_from_masters_1_araddr,
		fabric$v_from_masters_1_awaddr,
		fabric$v_from_masters_1_rdata,
		fabric$v_from_masters_1_wdata,
		fabric$v_to_slaves_0_araddr,
		fabric$v_to_slaves_0_awaddr,
		fabric$v_to_slaves_0_rdata,
		fabric$v_to_slaves_0_wdata,
		fabric$v_to_slaves_1_araddr,
		fabric$v_to_slaves_1_awaddr,
		fabric$v_to_slaves_1_rdata,
		fabric$v_to_slaves_1_wdata,
		fabric$v_to_slaves_2_araddr,
		fabric$v_to_slaves_2_awaddr,
		fabric$v_to_slaves_2_rdata,
		fabric$v_to_slaves_2_wdata,
		fabric$v_to_slaves_3_araddr,
		fabric$v_to_slaves_3_awaddr,
		fabric$v_to_slaves_3_rdata,
		fabric$v_to_slaves_3_wdata,
		fabric$v_to_slaves_4_araddr,
		fabric$v_to_slaves_4_awaddr,
		fabric$v_to_slaves_4_rdata,
		fabric$v_to_slaves_4_wdata;
  wire [7 : 0] fabric$v_from_masters_0_arlen,
	       fabric$v_from_masters_0_awlen,
	       fabric$v_from_masters_0_wstrb,
	       fabric$v_from_masters_1_arlen,
	       fabric$v_from_masters_1_awlen,
	       fabric$v_from_masters_1_wstrb,
	       fabric$v_to_slaves_0_arlen,
	       fabric$v_to_slaves_0_awlen,
	       fabric$v_to_slaves_0_wstrb,
	       fabric$v_to_slaves_1_arlen,
	       fabric$v_to_slaves_1_awlen,
	       fabric$v_to_slaves_1_wstrb,
	       fabric$v_to_slaves_2_arlen,
	       fabric$v_to_slaves_2_awlen,
	       fabric$v_to_slaves_2_wstrb,
	       fabric$v_to_slaves_3_arlen,
	       fabric$v_to_slaves_3_awlen,
	       fabric$v_to_slaves_3_wstrb,
	       fabric$v_to_slaves_4_arlen,
	       fabric$v_to_slaves_4_awlen,
	       fabric$v_to_slaves_4_wstrb;
  wire [3 : 0] fabric$set_verbosity_verbosity,
	       fabric$v_from_masters_0_arcache,
	       fabric$v_from_masters_0_arid,
	       fabric$v_from_masters_0_arqos,
	       fabric$v_from_masters_0_arregion,
	       fabric$v_from_masters_0_awcache,
	       fabric$v_from_masters_0_awid,
	       fabric$v_from_masters_0_awqos,
	       fabric$v_from_masters_0_awregion,
	       fabric$v_from_masters_0_bid,
	       fabric$v_from_masters_0_rid,
	       fabric$v_from_masters_1_arcache,
	       fabric$v_from_masters_1_arid,
	       fabric$v_from_masters_1_arqos,
	       fabric$v_from_masters_1_arregion,
	       fabric$v_from_masters_1_awcache,
	       fabric$v_from_masters_1_awid,
	       fabric$v_from_masters_1_awqos,
	       fabric$v_from_masters_1_awregion,
	       fabric$v_from_masters_1_bid,
	       fabric$v_from_masters_1_rid,
	       fabric$v_to_slaves_0_arcache,
	       fabric$v_to_slaves_0_arid,
	       fabric$v_to_slaves_0_arqos,
	       fabric$v_to_slaves_0_arregion,
	       fabric$v_to_slaves_0_awcache,
	       fabric$v_to_slaves_0_awid,
	       fabric$v_to_slaves_0_awqos,
	       fabric$v_to_slaves_0_awregion,
	       fabric$v_to_slaves_0_bid,
	       fabric$v_to_slaves_0_rid,
	       fabric$v_to_slaves_1_arcache,
	       fabric$v_to_slaves_1_arid,
	       fabric$v_to_slaves_1_arqos,
	       fabric$v_to_slaves_1_arregion,
	       fabric$v_to_slaves_1_awcache,
	       fabric$v_to_slaves_1_awid,
	       fabric$v_to_slaves_1_awqos,
	       fabric$v_to_slaves_1_awregion,
	       fabric$v_to_slaves_1_bid,
	       fabric$v_to_slaves_1_rid,
	       fabric$v_to_slaves_2_arcache,
	       fabric$v_to_slaves_2_arid,
	       fabric$v_to_slaves_2_arqos,
	       fabric$v_to_slaves_2_arregion,
	       fabric$v_to_slaves_2_awcache,
	       fabric$v_to_slaves_2_awid,
	       fabric$v_to_slaves_2_awqos,
	       fabric$v_to_slaves_2_awregion,
	       fabric$v_to_slaves_2_bid,
	       fabric$v_to_slaves_2_rid,
	       fabric$v_to_slaves_3_arcache,
	       fabric$v_to_slaves_3_arid,
	       fabric$v_to_slaves_3_arqos,
	       fabric$v_to_slaves_3_arregion,
	       fabric$v_to_slaves_3_awcache,
	       fabric$v_to_slaves_3_awid,
	       fabric$v_to_slaves_3_awqos,
	       fabric$v_to_slaves_3_awregion,
	       fabric$v_to_slaves_3_bid,
	       fabric$v_to_slaves_3_rid,
	       fabric$v_to_slaves_4_arcache,
	       fabric$v_to_slaves_4_arid,
	       fabric$v_to_slaves_4_arqos,
	       fabric$v_to_slaves_4_arregion,
	       fabric$v_to_slaves_4_awcache,
	       fabric$v_to_slaves_4_awid,
	       fabric$v_to_slaves_4_awqos,
	       fabric$v_to_slaves_4_awregion,
	       fabric$v_to_slaves_4_bid,
	       fabric$v_to_slaves_4_rid;
  wire [2 : 0] fabric$v_from_masters_0_arprot,
	       fabric$v_from_masters_0_arsize,
	       fabric$v_from_masters_0_awprot,
	       fabric$v_from_masters_0_awsize,
	       fabric$v_from_masters_1_arprot,
	       fabric$v_from_masters_1_arsize,
	       fabric$v_from_masters_1_awprot,
	       fabric$v_from_masters_1_awsize,
	       fabric$v_to_slaves_0_arprot,
	       fabric$v_to_slaves_0_arsize,
	       fabric$v_to_slaves_0_awprot,
	       fabric$v_to_slaves_0_awsize,
	       fabric$v_to_slaves_1_arprot,
	       fabric$v_to_slaves_1_arsize,
	       fabric$v_to_slaves_1_awprot,
	       fabric$v_to_slaves_1_awsize,
	       fabric$v_to_slaves_2_arprot,
	       fabric$v_to_slaves_2_arsize,
	       fabric$v_to_slaves_2_awprot,
	       fabric$v_to_slaves_2_awsize,
	       fabric$v_to_slaves_3_arprot,
	       fabric$v_to_slaves_3_arsize,
	       fabric$v_to_slaves_3_awprot,
	       fabric$v_to_slaves_3_awsize,
	       fabric$v_to_slaves_4_arprot,
	       fabric$v_to_slaves_4_arsize,
	       fabric$v_to_slaves_4_awprot,
	       fabric$v_to_slaves_4_awsize;
  wire [1 : 0] fabric$v_from_masters_0_arburst,
	       fabric$v_from_masters_0_awburst,
	       fabric$v_from_masters_0_bresp,
	       fabric$v_from_masters_0_rresp,
	       fabric$v_from_masters_1_arburst,
	       fabric$v_from_masters_1_awburst,
	       fabric$v_from_masters_1_bresp,
	       fabric$v_from_masters_1_rresp,
	       fabric$v_to_slaves_0_arburst,
	       fabric$v_to_slaves_0_awburst,
	       fabric$v_to_slaves_0_bresp,
	       fabric$v_to_slaves_0_rresp,
	       fabric$v_to_slaves_1_arburst,
	       fabric$v_to_slaves_1_awburst,
	       fabric$v_to_slaves_1_bresp,
	       fabric$v_to_slaves_1_rresp,
	       fabric$v_to_slaves_2_arburst,
	       fabric$v_to_slaves_2_awburst,
	       fabric$v_to_slaves_2_bresp,
	       fabric$v_to_slaves_2_rresp,
	       fabric$v_to_slaves_3_arburst,
	       fabric$v_to_slaves_3_awburst,
	       fabric$v_to_slaves_3_bresp,
	       fabric$v_to_slaves_3_rresp,
	       fabric$v_to_slaves_4_arburst,
	       fabric$v_to_slaves_4_awburst,
	       fabric$v_to_slaves_4_bresp,
	       fabric$v_to_slaves_4_rresp;
  wire fabric$EN_reset,
       fabric$EN_set_verbosity,
       fabric$RDY_reset,
       fabric$v_from_masters_0_arlock,
       fabric$v_from_masters_0_arready,
       fabric$v_from_masters_0_arvalid,
       fabric$v_from_masters_0_awlock,
       fabric$v_from_masters_0_awready,
       fabric$v_from_masters_0_awvalid,
       fabric$v_from_masters_0_bready,
       fabric$v_from_masters_0_bvalid,
       fabric$v_from_masters_0_rlast,
       fabric$v_from_masters_0_rready,
       fabric$v_from_masters_0_rvalid,
       fabric$v_from_masters_0_wlast,
       fabric$v_from_masters_0_wready,
       fabric$v_from_masters_0_wvalid,
       fabric$v_from_masters_1_arlock,
       fabric$v_from_masters_1_arready,
       fabric$v_from_masters_1_arvalid,
       fabric$v_from_masters_1_awlock,
       fabric$v_from_masters_1_awready,
       fabric$v_from_masters_1_awvalid,
       fabric$v_from_masters_1_bready,
       fabric$v_from_masters_1_bvalid,
       fabric$v_from_masters_1_rlast,
       fabric$v_from_masters_1_rready,
       fabric$v_from_masters_1_rvalid,
       fabric$v_from_masters_1_wlast,
       fabric$v_from_masters_1_wready,
       fabric$v_from_masters_1_wvalid,
       fabric$v_to_slaves_0_arlock,
       fabric$v_to_slaves_0_arready,
       fabric$v_to_slaves_0_arvalid,
       fabric$v_to_slaves_0_awlock,
       fabric$v_to_slaves_0_awready,
       fabric$v_to_slaves_0_awvalid,
       fabric$v_to_slaves_0_bready,
       fabric$v_to_slaves_0_bvalid,
       fabric$v_to_slaves_0_rlast,
       fabric$v_to_slaves_0_rready,
       fabric$v_to_slaves_0_rvalid,
       fabric$v_to_slaves_0_wlast,
       fabric$v_to_slaves_0_wready,
       fabric$v_to_slaves_0_wvalid,
       fabric$v_to_slaves_1_arlock,
       fabric$v_to_slaves_1_arready,
       fabric$v_to_slaves_1_arvalid,
       fabric$v_to_slaves_1_awlock,
       fabric$v_to_slaves_1_awready,
       fabric$v_to_slaves_1_awvalid,
       fabric$v_to_slaves_1_bready,
       fabric$v_to_slaves_1_bvalid,
       fabric$v_to_slaves_1_rlast,
       fabric$v_to_slaves_1_rready,
       fabric$v_to_slaves_1_rvalid,
       fabric$v_to_slaves_1_wlast,
       fabric$v_to_slaves_1_wready,
       fabric$v_to_slaves_1_wvalid,
       fabric$v_to_slaves_2_arlock,
       fabric$v_to_slaves_2_arready,
       fabric$v_to_slaves_2_arvalid,
       fabric$v_to_slaves_2_awlock,
       fabric$v_to_slaves_2_awready,
       fabric$v_to_slaves_2_awvalid,
       fabric$v_to_slaves_2_bready,
       fabric$v_to_slaves_2_bvalid,
       fabric$v_to_slaves_2_rlast,
       fabric$v_to_slaves_2_rready,
       fabric$v_to_slaves_2_rvalid,
       fabric$v_to_slaves_2_wlast,
       fabric$v_to_slaves_2_wready,
       fabric$v_to_slaves_2_wvalid,
       fabric$v_to_slaves_3_arlock,
       fabric$v_to_slaves_3_arready,
       fabric$v_to_slaves_3_arvalid,
       fabric$v_to_slaves_3_awlock,
       fabric$v_to_slaves_3_awready,
       fabric$v_to_slaves_3_awvalid,
       fabric$v_to_slaves_3_bready,
       fabric$v_to_slaves_3_bvalid,
       fabric$v_to_slaves_3_rlast,
       fabric$v_to_slaves_3_rready,
       fabric$v_to_slaves_3_rvalid,
       fabric$v_to_slaves_3_wlast,
       fabric$v_to_slaves_3_wready,
       fabric$v_to_slaves_3_wvalid,
       fabric$v_to_slaves_4_arlock,
       fabric$v_to_slaves_4_arready,
       fabric$v_to_slaves_4_arvalid,
       fabric$v_to_slaves_4_awlock,
       fabric$v_to_slaves_4_awready,
       fabric$v_to_slaves_4_awvalid,
       fabric$v_to_slaves_4_bready,
       fabric$v_to_slaves_4_bvalid,
       fabric$v_to_slaves_4_rlast,
       fabric$v_to_slaves_4_rready,
       fabric$v_to_slaves_4_rvalid,
       fabric$v_to_slaves_4_wlast,
       fabric$v_to_slaves_4_wready,
       fabric$v_to_slaves_4_wvalid;

  // ports of submodule flash
  wire [63 : 0] flash$set_addr_map_addr_base,
		flash$set_addr_map_addr_lim,
		flash$slave_araddr,
		flash$slave_awaddr,
		flash$slave_rdata,
		flash$slave_wdata;
  wire [7 : 0] flash$slave_arlen, flash$slave_awlen, flash$slave_wstrb;
  wire [3 : 0] flash$slave_arcache,
	       flash$slave_arid,
	       flash$slave_arqos,
	       flash$slave_arregion,
	       flash$slave_awcache,
	       flash$slave_awid,
	       flash$slave_awqos,
	       flash$slave_awregion,
	       flash$slave_bid,
	       flash$slave_rid;
  wire [2 : 0] flash$slave_arprot,
	       flash$slave_arsize,
	       flash$slave_awprot,
	       flash$slave_awsize;
  wire [1 : 0] flash$slave_arburst,
	       flash$slave_awburst,
	       flash$slave_bresp,
	       flash$slave_rresp;
  wire flash$EN_set_addr_map,
       flash$slave_arlock,
       flash$slave_arready,
       flash$slave_arvalid,
       flash$slave_awlock,
       flash$slave_awready,
       flash$slave_awvalid,
       flash$slave_bready,
       flash$slave_bvalid,
       flash$slave_rlast,
       flash$slave_rready,
       flash$slave_rvalid,
       flash$slave_wlast,
       flash$slave_wready,
       flash$slave_wvalid;

  // ports of submodule flash_axi4_deburster_f_r_arlen
  wire [7 : 0] flash_axi4_deburster_f_r_arlen$D_IN,
	       flash_axi4_deburster_f_r_arlen$D_OUT;
  wire flash_axi4_deburster_f_r_arlen$CLR,
       flash_axi4_deburster_f_r_arlen$DEQ,
       flash_axi4_deburster_f_r_arlen$EMPTY_N,
       flash_axi4_deburster_f_r_arlen$ENQ,
       flash_axi4_deburster_f_r_arlen$FULL_N;

  // ports of submodule flash_axi4_deburster_f_w_awlen
  wire [7 : 0] flash_axi4_deburster_f_w_awlen$D_IN,
	       flash_axi4_deburster_f_w_awlen$D_OUT;
  wire flash_axi4_deburster_f_w_awlen$CLR,
       flash_axi4_deburster_f_w_awlen$DEQ,
       flash_axi4_deburster_f_w_awlen$EMPTY_N,
       flash_axi4_deburster_f_w_awlen$ENQ,
       flash_axi4_deburster_f_w_awlen$FULL_N;

  // ports of submodule flash_axi4_deburster_xactor_from_master_f_rd_addr
  wire [96 : 0] flash_axi4_deburster_xactor_from_master_f_rd_addr$D_IN,
		flash_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT;
  wire flash_axi4_deburster_xactor_from_master_f_rd_addr$CLR,
       flash_axi4_deburster_xactor_from_master_f_rd_addr$DEQ,
       flash_axi4_deburster_xactor_from_master_f_rd_addr$EMPTY_N,
       flash_axi4_deburster_xactor_from_master_f_rd_addr$ENQ,
       flash_axi4_deburster_xactor_from_master_f_rd_addr$FULL_N;

  // ports of submodule flash_axi4_deburster_xactor_from_master_f_rd_data
  wire [70 : 0] flash_axi4_deburster_xactor_from_master_f_rd_data$D_IN,
		flash_axi4_deburster_xactor_from_master_f_rd_data$D_OUT;
  wire flash_axi4_deburster_xactor_from_master_f_rd_data$CLR,
       flash_axi4_deburster_xactor_from_master_f_rd_data$DEQ,
       flash_axi4_deburster_xactor_from_master_f_rd_data$EMPTY_N,
       flash_axi4_deburster_xactor_from_master_f_rd_data$ENQ,
       flash_axi4_deburster_xactor_from_master_f_rd_data$FULL_N;

  // ports of submodule flash_axi4_deburster_xactor_from_master_f_wr_addr
  wire [96 : 0] flash_axi4_deburster_xactor_from_master_f_wr_addr$D_IN,
		flash_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT;
  wire flash_axi4_deburster_xactor_from_master_f_wr_addr$CLR,
       flash_axi4_deburster_xactor_from_master_f_wr_addr$DEQ,
       flash_axi4_deburster_xactor_from_master_f_wr_addr$EMPTY_N,
       flash_axi4_deburster_xactor_from_master_f_wr_addr$ENQ,
       flash_axi4_deburster_xactor_from_master_f_wr_addr$FULL_N;

  // ports of submodule flash_axi4_deburster_xactor_from_master_f_wr_data
  wire [72 : 0] flash_axi4_deburster_xactor_from_master_f_wr_data$D_IN,
		flash_axi4_deburster_xactor_from_master_f_wr_data$D_OUT;
  wire flash_axi4_deburster_xactor_from_master_f_wr_data$CLR,
       flash_axi4_deburster_xactor_from_master_f_wr_data$DEQ,
       flash_axi4_deburster_xactor_from_master_f_wr_data$EMPTY_N,
       flash_axi4_deburster_xactor_from_master_f_wr_data$ENQ,
       flash_axi4_deburster_xactor_from_master_f_wr_data$FULL_N;

  // ports of submodule flash_axi4_deburster_xactor_from_master_f_wr_resp
  wire [5 : 0] flash_axi4_deburster_xactor_from_master_f_wr_resp$D_IN,
	       flash_axi4_deburster_xactor_from_master_f_wr_resp$D_OUT;
  wire flash_axi4_deburster_xactor_from_master_f_wr_resp$CLR,
       flash_axi4_deburster_xactor_from_master_f_wr_resp$DEQ,
       flash_axi4_deburster_xactor_from_master_f_wr_resp$EMPTY_N,
       flash_axi4_deburster_xactor_from_master_f_wr_resp$ENQ,
       flash_axi4_deburster_xactor_from_master_f_wr_resp$FULL_N;

  // ports of submodule flash_axi4_deburster_xactor_to_slave_f_rd_addr
  wire [96 : 0] flash_axi4_deburster_xactor_to_slave_f_rd_addr$D_IN,
		flash_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT;
  wire flash_axi4_deburster_xactor_to_slave_f_rd_addr$CLR,
       flash_axi4_deburster_xactor_to_slave_f_rd_addr$DEQ,
       flash_axi4_deburster_xactor_to_slave_f_rd_addr$EMPTY_N,
       flash_axi4_deburster_xactor_to_slave_f_rd_addr$ENQ,
       flash_axi4_deburster_xactor_to_slave_f_rd_addr$FULL_N;

  // ports of submodule flash_axi4_deburster_xactor_to_slave_f_rd_data
  wire [70 : 0] flash_axi4_deburster_xactor_to_slave_f_rd_data$D_IN,
		flash_axi4_deburster_xactor_to_slave_f_rd_data$D_OUT;
  wire flash_axi4_deburster_xactor_to_slave_f_rd_data$CLR,
       flash_axi4_deburster_xactor_to_slave_f_rd_data$DEQ,
       flash_axi4_deburster_xactor_to_slave_f_rd_data$EMPTY_N,
       flash_axi4_deburster_xactor_to_slave_f_rd_data$ENQ,
       flash_axi4_deburster_xactor_to_slave_f_rd_data$FULL_N;

  // ports of submodule flash_axi4_deburster_xactor_to_slave_f_wr_addr
  wire [96 : 0] flash_axi4_deburster_xactor_to_slave_f_wr_addr$D_IN,
		flash_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT;
  wire flash_axi4_deburster_xactor_to_slave_f_wr_addr$CLR,
       flash_axi4_deburster_xactor_to_slave_f_wr_addr$DEQ,
       flash_axi4_deburster_xactor_to_slave_f_wr_addr$EMPTY_N,
       flash_axi4_deburster_xactor_to_slave_f_wr_addr$ENQ,
       flash_axi4_deburster_xactor_to_slave_f_wr_addr$FULL_N;

  // ports of submodule flash_axi4_deburster_xactor_to_slave_f_wr_data
  wire [72 : 0] flash_axi4_deburster_xactor_to_slave_f_wr_data$D_IN,
		flash_axi4_deburster_xactor_to_slave_f_wr_data$D_OUT;
  wire flash_axi4_deburster_xactor_to_slave_f_wr_data$CLR,
       flash_axi4_deburster_xactor_to_slave_f_wr_data$DEQ,
       flash_axi4_deburster_xactor_to_slave_f_wr_data$EMPTY_N,
       flash_axi4_deburster_xactor_to_slave_f_wr_data$ENQ,
       flash_axi4_deburster_xactor_to_slave_f_wr_data$FULL_N;

  // ports of submodule flash_axi4_deburster_xactor_to_slave_f_wr_resp
  wire [5 : 0] flash_axi4_deburster_xactor_to_slave_f_wr_resp$D_IN,
	       flash_axi4_deburster_xactor_to_slave_f_wr_resp$D_OUT;
  wire flash_axi4_deburster_xactor_to_slave_f_wr_resp$CLR,
       flash_axi4_deburster_xactor_to_slave_f_wr_resp$DEQ,
       flash_axi4_deburster_xactor_to_slave_f_wr_resp$EMPTY_N,
       flash_axi4_deburster_xactor_to_slave_f_wr_resp$ENQ,
       flash_axi4_deburster_xactor_to_slave_f_wr_resp$FULL_N;

  // ports of submodule gpio
  wire [63 : 0] gpio$set_addr_map_addr_base,
		gpio$set_addr_map_addr_lim,
		gpio$slave_araddr,
		gpio$slave_awaddr,
		gpio$slave_rdata,
		gpio$slave_wdata;
  wire [7 : 0] gpio$slave_arlen, gpio$slave_awlen, gpio$slave_wstrb;
  wire [3 : 0] gpio$slave_arcache,
	       gpio$slave_arid,
	       gpio$slave_arqos,
	       gpio$slave_arregion,
	       gpio$slave_awcache,
	       gpio$slave_awid,
	       gpio$slave_awqos,
	       gpio$slave_awregion,
	       gpio$slave_bid,
	       gpio$slave_rid;
  wire [2 : 0] gpio$slave_arprot,
	       gpio$slave_arsize,
	       gpio$slave_awprot,
	       gpio$slave_awsize;
  wire [1 : 0] gpio$slave_arburst,
	       gpio$slave_awburst,
	       gpio$slave_bresp,
	       gpio$slave_rresp;
  wire gpio$EN_set_addr_map,
       gpio$assert_soft_reset,
       gpio$slave_arlock,
       gpio$slave_arready,
       gpio$slave_arvalid,
       gpio$slave_awlock,
       gpio$slave_awready,
       gpio$slave_awvalid,
       gpio$slave_bready,
       gpio$slave_bvalid,
       gpio$slave_rlast,
       gpio$slave_rready,
       gpio$slave_rvalid,
       gpio$slave_wlast,
       gpio$slave_wready,
       gpio$slave_wvalid;

  // ports of submodule mem0_controller
  wire [352 : 0] mem0_controller$to_raw_mem_request_get;
  wire [255 : 0] mem0_controller$to_raw_mem_response_put;
  wire [63 : 0] mem0_controller$set_addr_map_addr_base,
		mem0_controller$set_addr_map_addr_lim,
		mem0_controller$set_watch_tohost_tohost_addr,
		mem0_controller$slave_araddr,
		mem0_controller$slave_awaddr,
		mem0_controller$slave_rdata,
		mem0_controller$slave_wdata;
  wire [7 : 0] mem0_controller$slave_arlen,
	       mem0_controller$slave_awlen,
	       mem0_controller$slave_wstrb;
  wire [3 : 0] mem0_controller$slave_arcache,
	       mem0_controller$slave_arid,
	       mem0_controller$slave_arqos,
	       mem0_controller$slave_arregion,
	       mem0_controller$slave_awcache,
	       mem0_controller$slave_awid,
	       mem0_controller$slave_awqos,
	       mem0_controller$slave_awregion,
	       mem0_controller$slave_bid,
	       mem0_controller$slave_rid;
  wire [2 : 0] mem0_controller$slave_arprot,
	       mem0_controller$slave_arsize,
	       mem0_controller$slave_awprot,
	       mem0_controller$slave_awsize;
  wire [1 : 0] mem0_controller$slave_arburst,
	       mem0_controller$slave_awburst,
	       mem0_controller$slave_bresp,
	       mem0_controller$slave_rresp;
  wire mem0_controller$EN_server_reset_request_put,
       mem0_controller$EN_server_reset_response_get,
       mem0_controller$EN_set_addr_map,
       mem0_controller$EN_set_watch_tohost,
       mem0_controller$EN_to_raw_mem_request_get,
       mem0_controller$EN_to_raw_mem_response_put,
       mem0_controller$RDY_server_reset_request_put,
       mem0_controller$RDY_server_reset_response_get,
       mem0_controller$RDY_set_addr_map,
       mem0_controller$RDY_to_raw_mem_request_get,
       mem0_controller$RDY_to_raw_mem_response_put,
       mem0_controller$set_watch_tohost_watch_tohost,
       mem0_controller$slave_arlock,
       mem0_controller$slave_arready,
       mem0_controller$slave_arvalid,
       mem0_controller$slave_awlock,
       mem0_controller$slave_awready,
       mem0_controller$slave_awvalid,
       mem0_controller$slave_bready,
       mem0_controller$slave_bvalid,
       mem0_controller$slave_rlast,
       mem0_controller$slave_rready,
       mem0_controller$slave_rvalid,
       mem0_controller$slave_wlast,
       mem0_controller$slave_wready,
       mem0_controller$slave_wvalid;

  // ports of submodule mem0_controller_axi4_deburster_f_r_arlen
  wire [7 : 0] mem0_controller_axi4_deburster_f_r_arlen$D_IN,
	       mem0_controller_axi4_deburster_f_r_arlen$D_OUT;
  wire mem0_controller_axi4_deburster_f_r_arlen$CLR,
       mem0_controller_axi4_deburster_f_r_arlen$DEQ,
       mem0_controller_axi4_deburster_f_r_arlen$EMPTY_N,
       mem0_controller_axi4_deburster_f_r_arlen$ENQ,
       mem0_controller_axi4_deburster_f_r_arlen$FULL_N;

  // ports of submodule mem0_controller_axi4_deburster_f_w_awlen
  wire [7 : 0] mem0_controller_axi4_deburster_f_w_awlen$D_IN,
	       mem0_controller_axi4_deburster_f_w_awlen$D_OUT;
  wire mem0_controller_axi4_deburster_f_w_awlen$CLR,
       mem0_controller_axi4_deburster_f_w_awlen$DEQ,
       mem0_controller_axi4_deburster_f_w_awlen$EMPTY_N,
       mem0_controller_axi4_deburster_f_w_awlen$ENQ,
       mem0_controller_axi4_deburster_f_w_awlen$FULL_N;

  // ports of submodule mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr
  wire [96 : 0] mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$D_IN,
		mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT;
  wire mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$CLR,
       mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$DEQ,
       mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$EMPTY_N,
       mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$ENQ,
       mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$FULL_N;

  // ports of submodule mem0_controller_axi4_deburster_xactor_from_master_f_rd_data
  wire [70 : 0] mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$D_IN,
		mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$D_OUT;
  wire mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$CLR,
       mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$DEQ,
       mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$EMPTY_N,
       mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$ENQ,
       mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$FULL_N;

  // ports of submodule mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr
  wire [96 : 0] mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$D_IN,
		mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT;
  wire mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$CLR,
       mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$DEQ,
       mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$EMPTY_N,
       mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$ENQ,
       mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$FULL_N;

  // ports of submodule mem0_controller_axi4_deburster_xactor_from_master_f_wr_data
  wire [72 : 0] mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$D_IN,
		mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$D_OUT;
  wire mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$CLR,
       mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$DEQ,
       mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$EMPTY_N,
       mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$ENQ,
       mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$FULL_N;

  // ports of submodule mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp
  wire [5 : 0] mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$D_IN,
	       mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$D_OUT;
  wire mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$CLR,
       mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$DEQ,
       mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$EMPTY_N,
       mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$ENQ,
       mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$FULL_N;

  // ports of submodule mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr
  wire [96 : 0] mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$D_IN,
		mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT;
  wire mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$CLR,
       mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$DEQ,
       mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$EMPTY_N,
       mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$ENQ,
       mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$FULL_N;

  // ports of submodule mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data
  wire [70 : 0] mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data$D_IN,
		mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data$D_OUT;
  wire mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data$CLR,
       mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data$DEQ,
       mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data$EMPTY_N,
       mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data$ENQ,
       mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data$FULL_N;

  // ports of submodule mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr
  wire [96 : 0] mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$D_IN,
		mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT;
  wire mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$CLR,
       mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$DEQ,
       mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$EMPTY_N,
       mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$ENQ,
       mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$FULL_N;

  // ports of submodule mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data
  wire [72 : 0] mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$D_IN,
		mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$D_OUT;
  wire mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$CLR,
       mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$DEQ,
       mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$EMPTY_N,
       mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$ENQ,
       mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$FULL_N;

  // ports of submodule mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp
  wire [5 : 0] mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$D_IN,
	       mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$D_OUT;
  wire mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$CLR,
       mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$DEQ,
       mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$EMPTY_N,
       mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$ENQ,
       mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$FULL_N;

  // ports of submodule sim_jtag
  wire sim_jtag$tclk, sim_jtag$tdi, sim_jtag$tdo, sim_jtag$tms;

  // ports of submodule soc_map
  wire [63 : 0] soc_map$m_boot_rom_addr_base,
		soc_map$m_boot_rom_addr_lim,
		soc_map$m_ddr4_0_cached_addr_lim,
		soc_map$m_ddr4_0_uncached_addr_base,
		soc_map$m_flash_mem_addr_base,
		soc_map$m_flash_mem_addr_lim,
		soc_map$m_gpio_0_addr_base,
		soc_map$m_gpio_0_addr_lim,
		soc_map$m_is_IO_addr_addr,
		soc_map$m_is_mem_addr_addr,
		soc_map$m_is_near_mem_IO_addr_addr,
		soc_map$m_uart16550_0_addr_base,
		soc_map$m_uart16550_0_addr_lim;

  // ports of submodule tv_xactor_f_data
  wire [760 : 0] tv_xactor_f_data$D_IN, tv_xactor_f_data$D_OUT;
  wire tv_xactor_f_data$CLR,
       tv_xactor_f_data$DEQ,
       tv_xactor_f_data$EMPTY_N,
       tv_xactor_f_data$ENQ,
       tv_xactor_f_data$FULL_N;

  // ports of submodule uart0
  wire [63 : 0] uart0$set_addr_map_addr_base,
		uart0$set_addr_map_addr_lim,
		uart0$slave_araddr,
		uart0$slave_awaddr,
		uart0$slave_rdata,
		uart0$slave_wdata;
  wire [7 : 0] uart0$get_to_console_get,
	       uart0$put_from_console_put,
	       uart0$slave_arlen,
	       uart0$slave_awlen,
	       uart0$slave_wstrb;
  wire [3 : 0] uart0$slave_arcache,
	       uart0$slave_arid,
	       uart0$slave_arqos,
	       uart0$slave_arregion,
	       uart0$slave_awcache,
	       uart0$slave_awid,
	       uart0$slave_awqos,
	       uart0$slave_awregion,
	       uart0$slave_bid,
	       uart0$slave_rid;
  wire [2 : 0] uart0$slave_arprot,
	       uart0$slave_arsize,
	       uart0$slave_awprot,
	       uart0$slave_awsize;
  wire [1 : 0] uart0$slave_arburst,
	       uart0$slave_awburst,
	       uart0$slave_bresp,
	       uart0$slave_rresp;
  wire uart0$EN_get_to_console_get,
       uart0$EN_put_from_console_put,
       uart0$EN_server_reset_request_put,
       uart0$EN_server_reset_response_get,
       uart0$EN_set_addr_map,
       uart0$RDY_get_to_console_get,
       uart0$RDY_put_from_console_put,
       uart0$RDY_server_reset_request_put,
       uart0$RDY_server_reset_response_get,
       uart0$intr,
       uart0$slave_arlock,
       uart0$slave_arready,
       uart0$slave_arvalid,
       uart0$slave_awlock,
       uart0$slave_awready,
       uart0$slave_awvalid,
       uart0$slave_bready,
       uart0$slave_bvalid,
       uart0$slave_rlast,
       uart0$slave_rready,
       uart0$slave_rvalid,
       uart0$slave_wlast,
       uart0$slave_wready,
       uart0$slave_wvalid;

  // rule scheduling signals
  wire WILL_FIRE_RL_boot_rom_axi4_deburster_rl_rd_resp_slave_to_master,
       WILL_FIRE_RL_boot_rom_axi4_deburster_rl_rd_xaction_master_to_slave,
       WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_resp_slave_to_master,
       WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_xaction_master_to_slave,
       WILL_FIRE_RL_flash_axi4_deburster_rl_rd_resp_slave_to_master,
       WILL_FIRE_RL_flash_axi4_deburster_rl_rd_xaction_master_to_slave,
       WILL_FIRE_RL_flash_axi4_deburster_rl_wr_resp_slave_to_master,
       WILL_FIRE_RL_flash_axi4_deburster_rl_wr_xaction_master_to_slave,
       WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_rd_resp_slave_to_master,
       WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_rd_xaction_master_to_slave,
       WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_resp_slave_to_master,
       WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_xaction_master_to_slave,
       WILL_FIRE_RL_rl_reset_complete,
       WILL_FIRE_RL_rl_reset_start_2;

  // inputs to muxes for submodule ports
  wire [7 : 0] MUX_boot_rom_axi4_deburster_rg_ar_beat_count$write_1__VAL_2,
	       MUX_boot_rom_axi4_deburster_rg_b_beat_count$write_1__VAL_2,
	       MUX_boot_rom_axi4_deburster_rg_r_beat_count$write_1__VAL_2,
	       MUX_boot_rom_axi4_deburster_rg_w_beat_count$write_1__VAL_2,
	       MUX_flash_axi4_deburster_rg_ar_beat_count$write_1__VAL_2,
	       MUX_flash_axi4_deburster_rg_b_beat_count$write_1__VAL_2,
	       MUX_flash_axi4_deburster_rg_r_beat_count$write_1__VAL_2,
	       MUX_flash_axi4_deburster_rg_w_beat_count$write_1__VAL_2,
	       MUX_mem0_controller_axi4_deburster_rg_ar_beat_count$write_1__VAL_2,
	       MUX_mem0_controller_axi4_deburster_rg_b_beat_count$write_1__VAL_2,
	       MUX_mem0_controller_axi4_deburster_rg_r_beat_count$write_1__VAL_2,
	       MUX_mem0_controller_axi4_deburster_rg_w_beat_count$write_1__VAL_2;
  wire [1 : 0] MUX_boot_rom_axi4_deburster_rg_b_resp$write_1__VAL_2,
	       MUX_flash_axi4_deburster_rg_b_resp$write_1__VAL_2,
	       MUX_mem0_controller_axi4_deburster_rg_b_resp$write_1__VAL_2;
  wire MUX_boot_rom_axi4_deburster_rg_b_resp$write_1__SEL_2,
       MUX_flash_axi4_deburster_rg_b_resp$write_1__SEL_2,
       MUX_mem0_controller_axi4_deburster_rg_b_resp$write_1__SEL_2;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h22880;
  reg [31 : 0] v__h23453;
  reg [31 : 0] v__h6705;
  reg [31 : 0] v__h5732;
  reg [31 : 0] v__h10605;
  reg [31 : 0] v__h9632;
  reg [31 : 0] v__h14944;
  reg [31 : 0] v__h13971;
  reg [31 : 0] v__h5726;
  reg [31 : 0] v__h6699;
  reg [31 : 0] v__h9626;
  reg [31 : 0] v__h10599;
  reg [31 : 0] v__h13965;
  reg [31 : 0] v__h14938;
  reg [31 : 0] v__h22874;
  reg [31 : 0] v__h23447;
  // synopsys translate_on

  // remaining internal signals
  wire [63 : 0] a_out_araddr__h11117,
		a_out_araddr__h15456,
		a_out_araddr__h7217,
		a_out_awaddr__h10134,
		a_out_awaddr__h14473,
		a_out_awaddr__h6234,
		addr___1__h10219,
		addr___1__h11202,
		addr___1__h14558,
		addr___1__h15541,
		addr___1__h6319,
		addr___1__h7302;
  wire [7 : 0] x__h10480,
	       x__h10971,
	       x__h11363,
	       x__h11561,
	       x__h14819,
	       x__h15310,
	       x__h15702,
	       x__h15900,
	       x__h6580,
	       x__h7071,
	       x__h7463,
	       x__h7661;
  wire boot_rom_axi4_deburster_rg_ar_beat_count_6_ULT_ETC___d98,
       boot_rom_axi4_deburster_rg_b_beat_count_2_ULT__ETC___d54,
       boot_rom_axi4_deburster_rg_r_beat_count_07_ULT_ETC___d109,
       boot_rom_axi4_deburster_rg_w_beat_count_2_ULT__ETC___d39,
       flash_axi4_deburster_rg_ar_beat_count_87_ULT_f_ETC___d209,
       flash_axi4_deburster_rg_b_beat_count_63_ULT_fl_ETC___d165,
       flash_axi4_deburster_rg_r_beat_count_18_ULT_fl_ETC___d220,
       flash_axi4_deburster_rg_w_beat_count_23_ULT_fl_ETC___d150,
       mem0_controller_axi4_deburster_rg_ar_beat_coun_ETC___d320,
       mem0_controller_axi4_deburster_rg_b_beat_count_ETC___d276,
       mem0_controller_axi4_deburster_rg_r_beat_count_ETC___d331,
       mem0_controller_axi4_deburster_rg_w_beat_count_ETC___d261;

  // action method set_verbosity
  assign RDY_set_verbosity = 1'd1 ;

  // actionvalue method tv_verifier_info_get_get
  assign tv_verifier_info_get_get = tv_xactor_f_data$D_OUT[760:153] ;
  assign RDY_tv_verifier_info_get_get = tv_xactor_f_data$EMPTY_N ;

  // actionvalue method to_raw_mem_request_get
  assign to_raw_mem_request_get = mem0_controller$to_raw_mem_request_get ;
  assign RDY_to_raw_mem_request_get =
	     mem0_controller$RDY_to_raw_mem_request_get ;

  // action method to_raw_mem_response_put
  assign RDY_to_raw_mem_response_put =
	     mem0_controller$RDY_to_raw_mem_response_put ;

  // actionvalue method get_to_console_get
  assign get_to_console_get = uart0$get_to_console_get ;
  assign RDY_get_to_console_get = uart0$RDY_get_to_console_get ;

  // action method put_from_console_put
  assign RDY_put_from_console_put = uart0$RDY_put_from_console_put ;

  // value method assert_soft_reset
  assign assert_soft_reset = gpio$assert_soft_reset ;
  assign RDY_assert_soft_reset = 1'd1 ;

  // action method set_watch_tohost
  assign RDY_set_watch_tohost = 1'd1 ;

  // submodule boot_rom
  mkBoot_ROM boot_rom(.CLK(CLK),
		      .RST_N(RST_N),
		      .set_addr_map_addr_base(boot_rom$set_addr_map_addr_base),
		      .set_addr_map_addr_lim(boot_rom$set_addr_map_addr_lim),
		      .slave_araddr(boot_rom$slave_araddr),
		      .slave_arburst(boot_rom$slave_arburst),
		      .slave_arcache(boot_rom$slave_arcache),
		      .slave_arid(boot_rom$slave_arid),
		      .slave_arlen(boot_rom$slave_arlen),
		      .slave_arlock(boot_rom$slave_arlock),
		      .slave_arprot(boot_rom$slave_arprot),
		      .slave_arqos(boot_rom$slave_arqos),
		      .slave_arregion(boot_rom$slave_arregion),
		      .slave_arsize(boot_rom$slave_arsize),
		      .slave_arvalid(boot_rom$slave_arvalid),
		      .slave_awaddr(boot_rom$slave_awaddr),
		      .slave_awburst(boot_rom$slave_awburst),
		      .slave_awcache(boot_rom$slave_awcache),
		      .slave_awid(boot_rom$slave_awid),
		      .slave_awlen(boot_rom$slave_awlen),
		      .slave_awlock(boot_rom$slave_awlock),
		      .slave_awprot(boot_rom$slave_awprot),
		      .slave_awqos(boot_rom$slave_awqos),
		      .slave_awregion(boot_rom$slave_awregion),
		      .slave_awsize(boot_rom$slave_awsize),
		      .slave_awvalid(boot_rom$slave_awvalid),
		      .slave_bready(boot_rom$slave_bready),
		      .slave_rready(boot_rom$slave_rready),
		      .slave_wdata(boot_rom$slave_wdata),
		      .slave_wlast(boot_rom$slave_wlast),
		      .slave_wstrb(boot_rom$slave_wstrb),
		      .slave_wvalid(boot_rom$slave_wvalid),
		      .EN_set_addr_map(boot_rom$EN_set_addr_map),
		      .RDY_set_addr_map(),
		      .slave_awready(boot_rom$slave_awready),
		      .slave_wready(boot_rom$slave_wready),
		      .slave_bvalid(boot_rom$slave_bvalid),
		      .slave_bid(boot_rom$slave_bid),
		      .slave_bresp(boot_rom$slave_bresp),
		      .slave_arready(boot_rom$slave_arready),
		      .slave_rvalid(boot_rom$slave_rvalid),
		      .slave_rid(boot_rom$slave_rid),
		      .slave_rdata(boot_rom$slave_rdata),
		      .slave_rresp(boot_rom$slave_rresp),
		      .slave_rlast(boot_rom$slave_rlast));

  // submodule boot_rom_axi4_deburster_f_r_arlen
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(32'd1)) boot_rom_axi4_deburster_f_r_arlen(.RST(RST_N),
								 .CLK(CLK),
								 .D_IN(boot_rom_axi4_deburster_f_r_arlen$D_IN),
								 .ENQ(boot_rom_axi4_deburster_f_r_arlen$ENQ),
								 .DEQ(boot_rom_axi4_deburster_f_r_arlen$DEQ),
								 .CLR(boot_rom_axi4_deburster_f_r_arlen$CLR),
								 .D_OUT(boot_rom_axi4_deburster_f_r_arlen$D_OUT),
								 .FULL_N(boot_rom_axi4_deburster_f_r_arlen$FULL_N),
								 .EMPTY_N(boot_rom_axi4_deburster_f_r_arlen$EMPTY_N));

  // submodule boot_rom_axi4_deburster_f_w_awlen
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(32'd1)) boot_rom_axi4_deburster_f_w_awlen(.RST(RST_N),
								 .CLK(CLK),
								 .D_IN(boot_rom_axi4_deburster_f_w_awlen$D_IN),
								 .ENQ(boot_rom_axi4_deburster_f_w_awlen$ENQ),
								 .DEQ(boot_rom_axi4_deburster_f_w_awlen$DEQ),
								 .CLR(boot_rom_axi4_deburster_f_w_awlen$CLR),
								 .D_OUT(boot_rom_axi4_deburster_f_w_awlen$D_OUT),
								 .FULL_N(boot_rom_axi4_deburster_f_w_awlen$FULL_N),
								 .EMPTY_N(boot_rom_axi4_deburster_f_w_awlen$EMPTY_N));

  // submodule boot_rom_axi4_deburster_xactor_from_master_f_rd_addr
  FIFO2 #(.width(32'd97),
	  .guarded(32'd1)) boot_rom_axi4_deburster_xactor_from_master_f_rd_addr(.RST(RST_N),
										.CLK(CLK),
										.D_IN(boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$D_IN),
										.ENQ(boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$ENQ),
										.DEQ(boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$DEQ),
										.CLR(boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$CLR),
										.D_OUT(boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT),
										.FULL_N(boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$FULL_N),
										.EMPTY_N(boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$EMPTY_N));

  // submodule boot_rom_axi4_deburster_xactor_from_master_f_rd_data
  FIFO2 #(.width(32'd71),
	  .guarded(32'd1)) boot_rom_axi4_deburster_xactor_from_master_f_rd_data(.RST(RST_N),
										.CLK(CLK),
										.D_IN(boot_rom_axi4_deburster_xactor_from_master_f_rd_data$D_IN),
										.ENQ(boot_rom_axi4_deburster_xactor_from_master_f_rd_data$ENQ),
										.DEQ(boot_rom_axi4_deburster_xactor_from_master_f_rd_data$DEQ),
										.CLR(boot_rom_axi4_deburster_xactor_from_master_f_rd_data$CLR),
										.D_OUT(boot_rom_axi4_deburster_xactor_from_master_f_rd_data$D_OUT),
										.FULL_N(boot_rom_axi4_deburster_xactor_from_master_f_rd_data$FULL_N),
										.EMPTY_N(boot_rom_axi4_deburster_xactor_from_master_f_rd_data$EMPTY_N));

  // submodule boot_rom_axi4_deburster_xactor_from_master_f_wr_addr
  FIFO2 #(.width(32'd97),
	  .guarded(32'd1)) boot_rom_axi4_deburster_xactor_from_master_f_wr_addr(.RST(RST_N),
										.CLK(CLK),
										.D_IN(boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$D_IN),
										.ENQ(boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$ENQ),
										.DEQ(boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$DEQ),
										.CLR(boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$CLR),
										.D_OUT(boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT),
										.FULL_N(boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$FULL_N),
										.EMPTY_N(boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$EMPTY_N));

  // submodule boot_rom_axi4_deburster_xactor_from_master_f_wr_data
  FIFO2 #(.width(32'd73),
	  .guarded(32'd1)) boot_rom_axi4_deburster_xactor_from_master_f_wr_data(.RST(RST_N),
										.CLK(CLK),
										.D_IN(boot_rom_axi4_deburster_xactor_from_master_f_wr_data$D_IN),
										.ENQ(boot_rom_axi4_deburster_xactor_from_master_f_wr_data$ENQ),
										.DEQ(boot_rom_axi4_deburster_xactor_from_master_f_wr_data$DEQ),
										.CLR(boot_rom_axi4_deburster_xactor_from_master_f_wr_data$CLR),
										.D_OUT(boot_rom_axi4_deburster_xactor_from_master_f_wr_data$D_OUT),
										.FULL_N(boot_rom_axi4_deburster_xactor_from_master_f_wr_data$FULL_N),
										.EMPTY_N(boot_rom_axi4_deburster_xactor_from_master_f_wr_data$EMPTY_N));

  // submodule boot_rom_axi4_deburster_xactor_from_master_f_wr_resp
  FIFO2 #(.width(32'd6),
	  .guarded(32'd1)) boot_rom_axi4_deburster_xactor_from_master_f_wr_resp(.RST(RST_N),
										.CLK(CLK),
										.D_IN(boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$D_IN),
										.ENQ(boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$ENQ),
										.DEQ(boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$DEQ),
										.CLR(boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$CLR),
										.D_OUT(boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$D_OUT),
										.FULL_N(boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$FULL_N),
										.EMPTY_N(boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$EMPTY_N));

  // submodule boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr
  FIFO2 #(.width(32'd97),
	  .guarded(32'd1)) boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr(.RST(RST_N),
									     .CLK(CLK),
									     .D_IN(boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$D_IN),
									     .ENQ(boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$ENQ),
									     .DEQ(boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$DEQ),
									     .CLR(boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$CLR),
									     .D_OUT(boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT),
									     .FULL_N(boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$FULL_N),
									     .EMPTY_N(boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$EMPTY_N));

  // submodule boot_rom_axi4_deburster_xactor_to_slave_f_rd_data
  FIFO2 #(.width(32'd71),
	  .guarded(32'd1)) boot_rom_axi4_deburster_xactor_to_slave_f_rd_data(.RST(RST_N),
									     .CLK(CLK),
									     .D_IN(boot_rom_axi4_deburster_xactor_to_slave_f_rd_data$D_IN),
									     .ENQ(boot_rom_axi4_deburster_xactor_to_slave_f_rd_data$ENQ),
									     .DEQ(boot_rom_axi4_deburster_xactor_to_slave_f_rd_data$DEQ),
									     .CLR(boot_rom_axi4_deburster_xactor_to_slave_f_rd_data$CLR),
									     .D_OUT(boot_rom_axi4_deburster_xactor_to_slave_f_rd_data$D_OUT),
									     .FULL_N(boot_rom_axi4_deburster_xactor_to_slave_f_rd_data$FULL_N),
									     .EMPTY_N(boot_rom_axi4_deburster_xactor_to_slave_f_rd_data$EMPTY_N));

  // submodule boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr
  FIFO2 #(.width(32'd97),
	  .guarded(32'd1)) boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr(.RST(RST_N),
									     .CLK(CLK),
									     .D_IN(boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$D_IN),
									     .ENQ(boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$ENQ),
									     .DEQ(boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$DEQ),
									     .CLR(boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$CLR),
									     .D_OUT(boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT),
									     .FULL_N(boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$FULL_N),
									     .EMPTY_N(boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$EMPTY_N));

  // submodule boot_rom_axi4_deburster_xactor_to_slave_f_wr_data
  FIFO2 #(.width(32'd73),
	  .guarded(32'd1)) boot_rom_axi4_deburster_xactor_to_slave_f_wr_data(.RST(RST_N),
									     .CLK(CLK),
									     .D_IN(boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$D_IN),
									     .ENQ(boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$ENQ),
									     .DEQ(boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$DEQ),
									     .CLR(boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$CLR),
									     .D_OUT(boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$D_OUT),
									     .FULL_N(boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$FULL_N),
									     .EMPTY_N(boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$EMPTY_N));

  // submodule boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp
  FIFO2 #(.width(32'd6),
	  .guarded(32'd1)) boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp(.RST(RST_N),
									     .CLK(CLK),
									     .D_IN(boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$D_IN),
									     .ENQ(boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$ENQ),
									     .DEQ(boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$DEQ),
									     .CLR(boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$CLR),
									     .D_OUT(boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$D_OUT),
									     .FULL_N(boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$FULL_N),
									     .EMPTY_N(boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$EMPTY_N));

  // submodule core
  mkP_Core core(.CLK(CLK),
		.RST_N(cpu_reset$OUT_RST),
		.cpu_external_interrupt_req(core$cpu_external_interrupt_req),
		.jtag_tclk(core$jtag_tclk),
		.jtag_tdi(core$jtag_tdi),
		.jtag_tms(core$jtag_tms),
		.master0_arready(core$master0_arready),
		.master0_awready(core$master0_awready),
		.master0_bid(core$master0_bid),
		.master0_bresp(core$master0_bresp),
		.master0_bvalid(core$master0_bvalid),
		.master0_rdata(core$master0_rdata),
		.master0_rid(core$master0_rid),
		.master0_rlast(core$master0_rlast),
		.master0_rresp(core$master0_rresp),
		.master0_rvalid(core$master0_rvalid),
		.master0_wready(core$master0_wready),
		.master1_arready(core$master1_arready),
		.master1_awready(core$master1_awready),
		.master1_bid(core$master1_bid),
		.master1_bresp(core$master1_bresp),
		.master1_bvalid(core$master1_bvalid),
		.master1_rdata(core$master1_rdata),
		.master1_rid(core$master1_rid),
		.master1_rlast(core$master1_rlast),
		.master1_rresp(core$master1_rresp),
		.master1_rvalid(core$master1_rvalid),
		.master1_wready(core$master1_wready),
		.tv_verifier_info_tx_tready(core$tv_verifier_info_tx_tready),
		.master0_awvalid(core$master0_awvalid),
		.master0_awid(core$master0_awid),
		.master0_awaddr(core$master0_awaddr),
		.master0_awlen(core$master0_awlen),
		.master0_awsize(core$master0_awsize),
		.master0_awburst(core$master0_awburst),
		.master0_awlock(core$master0_awlock),
		.master0_awcache(core$master0_awcache),
		.master0_awprot(core$master0_awprot),
		.master0_awqos(core$master0_awqos),
		.master0_awregion(core$master0_awregion),
		.master0_wvalid(core$master0_wvalid),
		.master0_wdata(core$master0_wdata),
		.master0_wstrb(core$master0_wstrb),
		.master0_wlast(core$master0_wlast),
		.master0_bready(core$master0_bready),
		.master0_arvalid(core$master0_arvalid),
		.master0_arid(core$master0_arid),
		.master0_araddr(core$master0_araddr),
		.master0_arlen(core$master0_arlen),
		.master0_arsize(core$master0_arsize),
		.master0_arburst(core$master0_arburst),
		.master0_arlock(core$master0_arlock),
		.master0_arcache(core$master0_arcache),
		.master0_arprot(core$master0_arprot),
		.master0_arqos(core$master0_arqos),
		.master0_arregion(core$master0_arregion),
		.master0_rready(core$master0_rready),
		.master1_awvalid(core$master1_awvalid),
		.master1_awid(core$master1_awid),
		.master1_awaddr(core$master1_awaddr),
		.master1_awlen(core$master1_awlen),
		.master1_awsize(core$master1_awsize),
		.master1_awburst(core$master1_awburst),
		.master1_awlock(core$master1_awlock),
		.master1_awcache(core$master1_awcache),
		.master1_awprot(core$master1_awprot),
		.master1_awqos(core$master1_awqos),
		.master1_awregion(core$master1_awregion),
		.master1_wvalid(core$master1_wvalid),
		.master1_wdata(core$master1_wdata),
		.master1_wstrb(core$master1_wstrb),
		.master1_wlast(core$master1_wlast),
		.master1_bready(core$master1_bready),
		.master1_arvalid(core$master1_arvalid),
		.master1_arid(core$master1_arid),
		.master1_araddr(core$master1_araddr),
		.master1_arlen(core$master1_arlen),
		.master1_arsize(core$master1_arsize),
		.master1_arburst(core$master1_arburst),
		.master1_arlock(core$master1_arlock),
		.master1_arcache(core$master1_arcache),
		.master1_arprot(core$master1_arprot),
		.master1_arqos(core$master1_arqos),
		.master1_arregion(core$master1_arregion),
		.master1_rready(core$master1_rready),
		.tv_verifier_info_tx_tvalid(core$tv_verifier_info_tx_tvalid),
		.tv_verifier_info_tx_tdata(core$tv_verifier_info_tx_tdata),
		.tv_verifier_info_tx_tstrb(core$tv_verifier_info_tx_tstrb),
		.tv_verifier_info_tx_tkeep(core$tv_verifier_info_tx_tkeep),
		.tv_verifier_info_tx_tlast(core$tv_verifier_info_tx_tlast),
		.jtag_tdo(core$jtag_tdo),
		.CLK_jtag_tclk_out(core$CLK_jtag_tclk_out),
		.CLK_GATE_jtag_tclk_out());

  // submodule cpu_reset
  MakeResetA #(.RSTDELAY(32'd2), .init(1'd0)) cpu_reset(.CLK(CLK),
							.RST(RST_N),
							.DST_CLK(CLK),
							.ASSERT_IN(cpu_reset$ASSERT_IN),
							.ASSERT_OUT(),
							.OUT_RST(cpu_reset$OUT_RST));

  // submodule fabric
  mkFabric_AXI4 fabric(.CLK(CLK),
		       .RST_N(RST_N),
		       .set_verbosity_verbosity(fabric$set_verbosity_verbosity),
		       .v_from_masters_0_araddr(fabric$v_from_masters_0_araddr),
		       .v_from_masters_0_arburst(fabric$v_from_masters_0_arburst),
		       .v_from_masters_0_arcache(fabric$v_from_masters_0_arcache),
		       .v_from_masters_0_arid(fabric$v_from_masters_0_arid),
		       .v_from_masters_0_arlen(fabric$v_from_masters_0_arlen),
		       .v_from_masters_0_arlock(fabric$v_from_masters_0_arlock),
		       .v_from_masters_0_arprot(fabric$v_from_masters_0_arprot),
		       .v_from_masters_0_arqos(fabric$v_from_masters_0_arqos),
		       .v_from_masters_0_arregion(fabric$v_from_masters_0_arregion),
		       .v_from_masters_0_arsize(fabric$v_from_masters_0_arsize),
		       .v_from_masters_0_arvalid(fabric$v_from_masters_0_arvalid),
		       .v_from_masters_0_awaddr(fabric$v_from_masters_0_awaddr),
		       .v_from_masters_0_awburst(fabric$v_from_masters_0_awburst),
		       .v_from_masters_0_awcache(fabric$v_from_masters_0_awcache),
		       .v_from_masters_0_awid(fabric$v_from_masters_0_awid),
		       .v_from_masters_0_awlen(fabric$v_from_masters_0_awlen),
		       .v_from_masters_0_awlock(fabric$v_from_masters_0_awlock),
		       .v_from_masters_0_awprot(fabric$v_from_masters_0_awprot),
		       .v_from_masters_0_awqos(fabric$v_from_masters_0_awqos),
		       .v_from_masters_0_awregion(fabric$v_from_masters_0_awregion),
		       .v_from_masters_0_awsize(fabric$v_from_masters_0_awsize),
		       .v_from_masters_0_awvalid(fabric$v_from_masters_0_awvalid),
		       .v_from_masters_0_bready(fabric$v_from_masters_0_bready),
		       .v_from_masters_0_rready(fabric$v_from_masters_0_rready),
		       .v_from_masters_0_wdata(fabric$v_from_masters_0_wdata),
		       .v_from_masters_0_wlast(fabric$v_from_masters_0_wlast),
		       .v_from_masters_0_wstrb(fabric$v_from_masters_0_wstrb),
		       .v_from_masters_0_wvalid(fabric$v_from_masters_0_wvalid),
		       .v_from_masters_1_araddr(fabric$v_from_masters_1_araddr),
		       .v_from_masters_1_arburst(fabric$v_from_masters_1_arburst),
		       .v_from_masters_1_arcache(fabric$v_from_masters_1_arcache),
		       .v_from_masters_1_arid(fabric$v_from_masters_1_arid),
		       .v_from_masters_1_arlen(fabric$v_from_masters_1_arlen),
		       .v_from_masters_1_arlock(fabric$v_from_masters_1_arlock),
		       .v_from_masters_1_arprot(fabric$v_from_masters_1_arprot),
		       .v_from_masters_1_arqos(fabric$v_from_masters_1_arqos),
		       .v_from_masters_1_arregion(fabric$v_from_masters_1_arregion),
		       .v_from_masters_1_arsize(fabric$v_from_masters_1_arsize),
		       .v_from_masters_1_arvalid(fabric$v_from_masters_1_arvalid),
		       .v_from_masters_1_awaddr(fabric$v_from_masters_1_awaddr),
		       .v_from_masters_1_awburst(fabric$v_from_masters_1_awburst),
		       .v_from_masters_1_awcache(fabric$v_from_masters_1_awcache),
		       .v_from_masters_1_awid(fabric$v_from_masters_1_awid),
		       .v_from_masters_1_awlen(fabric$v_from_masters_1_awlen),
		       .v_from_masters_1_awlock(fabric$v_from_masters_1_awlock),
		       .v_from_masters_1_awprot(fabric$v_from_masters_1_awprot),
		       .v_from_masters_1_awqos(fabric$v_from_masters_1_awqos),
		       .v_from_masters_1_awregion(fabric$v_from_masters_1_awregion),
		       .v_from_masters_1_awsize(fabric$v_from_masters_1_awsize),
		       .v_from_masters_1_awvalid(fabric$v_from_masters_1_awvalid),
		       .v_from_masters_1_bready(fabric$v_from_masters_1_bready),
		       .v_from_masters_1_rready(fabric$v_from_masters_1_rready),
		       .v_from_masters_1_wdata(fabric$v_from_masters_1_wdata),
		       .v_from_masters_1_wlast(fabric$v_from_masters_1_wlast),
		       .v_from_masters_1_wstrb(fabric$v_from_masters_1_wstrb),
		       .v_from_masters_1_wvalid(fabric$v_from_masters_1_wvalid),
		       .v_to_slaves_0_arready(fabric$v_to_slaves_0_arready),
		       .v_to_slaves_0_awready(fabric$v_to_slaves_0_awready),
		       .v_to_slaves_0_bid(fabric$v_to_slaves_0_bid),
		       .v_to_slaves_0_bresp(fabric$v_to_slaves_0_bresp),
		       .v_to_slaves_0_bvalid(fabric$v_to_slaves_0_bvalid),
		       .v_to_slaves_0_rdata(fabric$v_to_slaves_0_rdata),
		       .v_to_slaves_0_rid(fabric$v_to_slaves_0_rid),
		       .v_to_slaves_0_rlast(fabric$v_to_slaves_0_rlast),
		       .v_to_slaves_0_rresp(fabric$v_to_slaves_0_rresp),
		       .v_to_slaves_0_rvalid(fabric$v_to_slaves_0_rvalid),
		       .v_to_slaves_0_wready(fabric$v_to_slaves_0_wready),
		       .v_to_slaves_1_arready(fabric$v_to_slaves_1_arready),
		       .v_to_slaves_1_awready(fabric$v_to_slaves_1_awready),
		       .v_to_slaves_1_bid(fabric$v_to_slaves_1_bid),
		       .v_to_slaves_1_bresp(fabric$v_to_slaves_1_bresp),
		       .v_to_slaves_1_bvalid(fabric$v_to_slaves_1_bvalid),
		       .v_to_slaves_1_rdata(fabric$v_to_slaves_1_rdata),
		       .v_to_slaves_1_rid(fabric$v_to_slaves_1_rid),
		       .v_to_slaves_1_rlast(fabric$v_to_slaves_1_rlast),
		       .v_to_slaves_1_rresp(fabric$v_to_slaves_1_rresp),
		       .v_to_slaves_1_rvalid(fabric$v_to_slaves_1_rvalid),
		       .v_to_slaves_1_wready(fabric$v_to_slaves_1_wready),
		       .v_to_slaves_2_arready(fabric$v_to_slaves_2_arready),
		       .v_to_slaves_2_awready(fabric$v_to_slaves_2_awready),
		       .v_to_slaves_2_bid(fabric$v_to_slaves_2_bid),
		       .v_to_slaves_2_bresp(fabric$v_to_slaves_2_bresp),
		       .v_to_slaves_2_bvalid(fabric$v_to_slaves_2_bvalid),
		       .v_to_slaves_2_rdata(fabric$v_to_slaves_2_rdata),
		       .v_to_slaves_2_rid(fabric$v_to_slaves_2_rid),
		       .v_to_slaves_2_rlast(fabric$v_to_slaves_2_rlast),
		       .v_to_slaves_2_rresp(fabric$v_to_slaves_2_rresp),
		       .v_to_slaves_2_rvalid(fabric$v_to_slaves_2_rvalid),
		       .v_to_slaves_2_wready(fabric$v_to_slaves_2_wready),
		       .v_to_slaves_3_arready(fabric$v_to_slaves_3_arready),
		       .v_to_slaves_3_awready(fabric$v_to_slaves_3_awready),
		       .v_to_slaves_3_bid(fabric$v_to_slaves_3_bid),
		       .v_to_slaves_3_bresp(fabric$v_to_slaves_3_bresp),
		       .v_to_slaves_3_bvalid(fabric$v_to_slaves_3_bvalid),
		       .v_to_slaves_3_rdata(fabric$v_to_slaves_3_rdata),
		       .v_to_slaves_3_rid(fabric$v_to_slaves_3_rid),
		       .v_to_slaves_3_rlast(fabric$v_to_slaves_3_rlast),
		       .v_to_slaves_3_rresp(fabric$v_to_slaves_3_rresp),
		       .v_to_slaves_3_rvalid(fabric$v_to_slaves_3_rvalid),
		       .v_to_slaves_3_wready(fabric$v_to_slaves_3_wready),
		       .v_to_slaves_4_arready(fabric$v_to_slaves_4_arready),
		       .v_to_slaves_4_awready(fabric$v_to_slaves_4_awready),
		       .v_to_slaves_4_bid(fabric$v_to_slaves_4_bid),
		       .v_to_slaves_4_bresp(fabric$v_to_slaves_4_bresp),
		       .v_to_slaves_4_bvalid(fabric$v_to_slaves_4_bvalid),
		       .v_to_slaves_4_rdata(fabric$v_to_slaves_4_rdata),
		       .v_to_slaves_4_rid(fabric$v_to_slaves_4_rid),
		       .v_to_slaves_4_rlast(fabric$v_to_slaves_4_rlast),
		       .v_to_slaves_4_rresp(fabric$v_to_slaves_4_rresp),
		       .v_to_slaves_4_rvalid(fabric$v_to_slaves_4_rvalid),
		       .v_to_slaves_4_wready(fabric$v_to_slaves_4_wready),
		       .EN_reset(fabric$EN_reset),
		       .EN_set_verbosity(fabric$EN_set_verbosity),
		       .RDY_reset(fabric$RDY_reset),
		       .RDY_set_verbosity(),
		       .v_from_masters_0_awready(fabric$v_from_masters_0_awready),
		       .v_from_masters_0_wready(fabric$v_from_masters_0_wready),
		       .v_from_masters_0_bvalid(fabric$v_from_masters_0_bvalid),
		       .v_from_masters_0_bid(fabric$v_from_masters_0_bid),
		       .v_from_masters_0_bresp(fabric$v_from_masters_0_bresp),
		       .v_from_masters_0_arready(fabric$v_from_masters_0_arready),
		       .v_from_masters_0_rvalid(fabric$v_from_masters_0_rvalid),
		       .v_from_masters_0_rid(fabric$v_from_masters_0_rid),
		       .v_from_masters_0_rdata(fabric$v_from_masters_0_rdata),
		       .v_from_masters_0_rresp(fabric$v_from_masters_0_rresp),
		       .v_from_masters_0_rlast(fabric$v_from_masters_0_rlast),
		       .v_from_masters_1_awready(fabric$v_from_masters_1_awready),
		       .v_from_masters_1_wready(fabric$v_from_masters_1_wready),
		       .v_from_masters_1_bvalid(fabric$v_from_masters_1_bvalid),
		       .v_from_masters_1_bid(fabric$v_from_masters_1_bid),
		       .v_from_masters_1_bresp(fabric$v_from_masters_1_bresp),
		       .v_from_masters_1_arready(fabric$v_from_masters_1_arready),
		       .v_from_masters_1_rvalid(fabric$v_from_masters_1_rvalid),
		       .v_from_masters_1_rid(fabric$v_from_masters_1_rid),
		       .v_from_masters_1_rdata(fabric$v_from_masters_1_rdata),
		       .v_from_masters_1_rresp(fabric$v_from_masters_1_rresp),
		       .v_from_masters_1_rlast(fabric$v_from_masters_1_rlast),
		       .v_to_slaves_0_awvalid(fabric$v_to_slaves_0_awvalid),
		       .v_to_slaves_0_awid(fabric$v_to_slaves_0_awid),
		       .v_to_slaves_0_awaddr(fabric$v_to_slaves_0_awaddr),
		       .v_to_slaves_0_awlen(fabric$v_to_slaves_0_awlen),
		       .v_to_slaves_0_awsize(fabric$v_to_slaves_0_awsize),
		       .v_to_slaves_0_awburst(fabric$v_to_slaves_0_awburst),
		       .v_to_slaves_0_awlock(fabric$v_to_slaves_0_awlock),
		       .v_to_slaves_0_awcache(fabric$v_to_slaves_0_awcache),
		       .v_to_slaves_0_awprot(fabric$v_to_slaves_0_awprot),
		       .v_to_slaves_0_awqos(fabric$v_to_slaves_0_awqos),
		       .v_to_slaves_0_awregion(fabric$v_to_slaves_0_awregion),
		       .v_to_slaves_0_wvalid(fabric$v_to_slaves_0_wvalid),
		       .v_to_slaves_0_wdata(fabric$v_to_slaves_0_wdata),
		       .v_to_slaves_0_wstrb(fabric$v_to_slaves_0_wstrb),
		       .v_to_slaves_0_wlast(fabric$v_to_slaves_0_wlast),
		       .v_to_slaves_0_bready(fabric$v_to_slaves_0_bready),
		       .v_to_slaves_0_arvalid(fabric$v_to_slaves_0_arvalid),
		       .v_to_slaves_0_arid(fabric$v_to_slaves_0_arid),
		       .v_to_slaves_0_araddr(fabric$v_to_slaves_0_araddr),
		       .v_to_slaves_0_arlen(fabric$v_to_slaves_0_arlen),
		       .v_to_slaves_0_arsize(fabric$v_to_slaves_0_arsize),
		       .v_to_slaves_0_arburst(fabric$v_to_slaves_0_arburst),
		       .v_to_slaves_0_arlock(fabric$v_to_slaves_0_arlock),
		       .v_to_slaves_0_arcache(fabric$v_to_slaves_0_arcache),
		       .v_to_slaves_0_arprot(fabric$v_to_slaves_0_arprot),
		       .v_to_slaves_0_arqos(fabric$v_to_slaves_0_arqos),
		       .v_to_slaves_0_arregion(fabric$v_to_slaves_0_arregion),
		       .v_to_slaves_0_rready(fabric$v_to_slaves_0_rready),
		       .v_to_slaves_1_awvalid(fabric$v_to_slaves_1_awvalid),
		       .v_to_slaves_1_awid(fabric$v_to_slaves_1_awid),
		       .v_to_slaves_1_awaddr(fabric$v_to_slaves_1_awaddr),
		       .v_to_slaves_1_awlen(fabric$v_to_slaves_1_awlen),
		       .v_to_slaves_1_awsize(fabric$v_to_slaves_1_awsize),
		       .v_to_slaves_1_awburst(fabric$v_to_slaves_1_awburst),
		       .v_to_slaves_1_awlock(fabric$v_to_slaves_1_awlock),
		       .v_to_slaves_1_awcache(fabric$v_to_slaves_1_awcache),
		       .v_to_slaves_1_awprot(fabric$v_to_slaves_1_awprot),
		       .v_to_slaves_1_awqos(fabric$v_to_slaves_1_awqos),
		       .v_to_slaves_1_awregion(fabric$v_to_slaves_1_awregion),
		       .v_to_slaves_1_wvalid(fabric$v_to_slaves_1_wvalid),
		       .v_to_slaves_1_wdata(fabric$v_to_slaves_1_wdata),
		       .v_to_slaves_1_wstrb(fabric$v_to_slaves_1_wstrb),
		       .v_to_slaves_1_wlast(fabric$v_to_slaves_1_wlast),
		       .v_to_slaves_1_bready(fabric$v_to_slaves_1_bready),
		       .v_to_slaves_1_arvalid(fabric$v_to_slaves_1_arvalid),
		       .v_to_slaves_1_arid(fabric$v_to_slaves_1_arid),
		       .v_to_slaves_1_araddr(fabric$v_to_slaves_1_araddr),
		       .v_to_slaves_1_arlen(fabric$v_to_slaves_1_arlen),
		       .v_to_slaves_1_arsize(fabric$v_to_slaves_1_arsize),
		       .v_to_slaves_1_arburst(fabric$v_to_slaves_1_arburst),
		       .v_to_slaves_1_arlock(fabric$v_to_slaves_1_arlock),
		       .v_to_slaves_1_arcache(fabric$v_to_slaves_1_arcache),
		       .v_to_slaves_1_arprot(fabric$v_to_slaves_1_arprot),
		       .v_to_slaves_1_arqos(fabric$v_to_slaves_1_arqos),
		       .v_to_slaves_1_arregion(fabric$v_to_slaves_1_arregion),
		       .v_to_slaves_1_rready(fabric$v_to_slaves_1_rready),
		       .v_to_slaves_2_awvalid(fabric$v_to_slaves_2_awvalid),
		       .v_to_slaves_2_awid(fabric$v_to_slaves_2_awid),
		       .v_to_slaves_2_awaddr(fabric$v_to_slaves_2_awaddr),
		       .v_to_slaves_2_awlen(fabric$v_to_slaves_2_awlen),
		       .v_to_slaves_2_awsize(fabric$v_to_slaves_2_awsize),
		       .v_to_slaves_2_awburst(fabric$v_to_slaves_2_awburst),
		       .v_to_slaves_2_awlock(fabric$v_to_slaves_2_awlock),
		       .v_to_slaves_2_awcache(fabric$v_to_slaves_2_awcache),
		       .v_to_slaves_2_awprot(fabric$v_to_slaves_2_awprot),
		       .v_to_slaves_2_awqos(fabric$v_to_slaves_2_awqos),
		       .v_to_slaves_2_awregion(fabric$v_to_slaves_2_awregion),
		       .v_to_slaves_2_wvalid(fabric$v_to_slaves_2_wvalid),
		       .v_to_slaves_2_wdata(fabric$v_to_slaves_2_wdata),
		       .v_to_slaves_2_wstrb(fabric$v_to_slaves_2_wstrb),
		       .v_to_slaves_2_wlast(fabric$v_to_slaves_2_wlast),
		       .v_to_slaves_2_bready(fabric$v_to_slaves_2_bready),
		       .v_to_slaves_2_arvalid(fabric$v_to_slaves_2_arvalid),
		       .v_to_slaves_2_arid(fabric$v_to_slaves_2_arid),
		       .v_to_slaves_2_araddr(fabric$v_to_slaves_2_araddr),
		       .v_to_slaves_2_arlen(fabric$v_to_slaves_2_arlen),
		       .v_to_slaves_2_arsize(fabric$v_to_slaves_2_arsize),
		       .v_to_slaves_2_arburst(fabric$v_to_slaves_2_arburst),
		       .v_to_slaves_2_arlock(fabric$v_to_slaves_2_arlock),
		       .v_to_slaves_2_arcache(fabric$v_to_slaves_2_arcache),
		       .v_to_slaves_2_arprot(fabric$v_to_slaves_2_arprot),
		       .v_to_slaves_2_arqos(fabric$v_to_slaves_2_arqos),
		       .v_to_slaves_2_arregion(fabric$v_to_slaves_2_arregion),
		       .v_to_slaves_2_rready(fabric$v_to_slaves_2_rready),
		       .v_to_slaves_3_awvalid(fabric$v_to_slaves_3_awvalid),
		       .v_to_slaves_3_awid(fabric$v_to_slaves_3_awid),
		       .v_to_slaves_3_awaddr(fabric$v_to_slaves_3_awaddr),
		       .v_to_slaves_3_awlen(fabric$v_to_slaves_3_awlen),
		       .v_to_slaves_3_awsize(fabric$v_to_slaves_3_awsize),
		       .v_to_slaves_3_awburst(fabric$v_to_slaves_3_awburst),
		       .v_to_slaves_3_awlock(fabric$v_to_slaves_3_awlock),
		       .v_to_slaves_3_awcache(fabric$v_to_slaves_3_awcache),
		       .v_to_slaves_3_awprot(fabric$v_to_slaves_3_awprot),
		       .v_to_slaves_3_awqos(fabric$v_to_slaves_3_awqos),
		       .v_to_slaves_3_awregion(fabric$v_to_slaves_3_awregion),
		       .v_to_slaves_3_wvalid(fabric$v_to_slaves_3_wvalid),
		       .v_to_slaves_3_wdata(fabric$v_to_slaves_3_wdata),
		       .v_to_slaves_3_wstrb(fabric$v_to_slaves_3_wstrb),
		       .v_to_slaves_3_wlast(fabric$v_to_slaves_3_wlast),
		       .v_to_slaves_3_bready(fabric$v_to_slaves_3_bready),
		       .v_to_slaves_3_arvalid(fabric$v_to_slaves_3_arvalid),
		       .v_to_slaves_3_arid(fabric$v_to_slaves_3_arid),
		       .v_to_slaves_3_araddr(fabric$v_to_slaves_3_araddr),
		       .v_to_slaves_3_arlen(fabric$v_to_slaves_3_arlen),
		       .v_to_slaves_3_arsize(fabric$v_to_slaves_3_arsize),
		       .v_to_slaves_3_arburst(fabric$v_to_slaves_3_arburst),
		       .v_to_slaves_3_arlock(fabric$v_to_slaves_3_arlock),
		       .v_to_slaves_3_arcache(fabric$v_to_slaves_3_arcache),
		       .v_to_slaves_3_arprot(fabric$v_to_slaves_3_arprot),
		       .v_to_slaves_3_arqos(fabric$v_to_slaves_3_arqos),
		       .v_to_slaves_3_arregion(fabric$v_to_slaves_3_arregion),
		       .v_to_slaves_3_rready(fabric$v_to_slaves_3_rready),
		       .v_to_slaves_4_awvalid(fabric$v_to_slaves_4_awvalid),
		       .v_to_slaves_4_awid(fabric$v_to_slaves_4_awid),
		       .v_to_slaves_4_awaddr(fabric$v_to_slaves_4_awaddr),
		       .v_to_slaves_4_awlen(fabric$v_to_slaves_4_awlen),
		       .v_to_slaves_4_awsize(fabric$v_to_slaves_4_awsize),
		       .v_to_slaves_4_awburst(fabric$v_to_slaves_4_awburst),
		       .v_to_slaves_4_awlock(fabric$v_to_slaves_4_awlock),
		       .v_to_slaves_4_awcache(fabric$v_to_slaves_4_awcache),
		       .v_to_slaves_4_awprot(fabric$v_to_slaves_4_awprot),
		       .v_to_slaves_4_awqos(fabric$v_to_slaves_4_awqos),
		       .v_to_slaves_4_awregion(fabric$v_to_slaves_4_awregion),
		       .v_to_slaves_4_wvalid(fabric$v_to_slaves_4_wvalid),
		       .v_to_slaves_4_wdata(fabric$v_to_slaves_4_wdata),
		       .v_to_slaves_4_wstrb(fabric$v_to_slaves_4_wstrb),
		       .v_to_slaves_4_wlast(fabric$v_to_slaves_4_wlast),
		       .v_to_slaves_4_bready(fabric$v_to_slaves_4_bready),
		       .v_to_slaves_4_arvalid(fabric$v_to_slaves_4_arvalid),
		       .v_to_slaves_4_arid(fabric$v_to_slaves_4_arid),
		       .v_to_slaves_4_araddr(fabric$v_to_slaves_4_araddr),
		       .v_to_slaves_4_arlen(fabric$v_to_slaves_4_arlen),
		       .v_to_slaves_4_arsize(fabric$v_to_slaves_4_arsize),
		       .v_to_slaves_4_arburst(fabric$v_to_slaves_4_arburst),
		       .v_to_slaves_4_arlock(fabric$v_to_slaves_4_arlock),
		       .v_to_slaves_4_arcache(fabric$v_to_slaves_4_arcache),
		       .v_to_slaves_4_arprot(fabric$v_to_slaves_4_arprot),
		       .v_to_slaves_4_arqos(fabric$v_to_slaves_4_arqos),
		       .v_to_slaves_4_arregion(fabric$v_to_slaves_4_arregion),
		       .v_to_slaves_4_rready(fabric$v_to_slaves_4_rready));

  // submodule flash
  mkFlash flash(.CLK(CLK),
		.RST_N(RST_N),
		.set_addr_map_addr_base(flash$set_addr_map_addr_base),
		.set_addr_map_addr_lim(flash$set_addr_map_addr_lim),
		.slave_araddr(flash$slave_araddr),
		.slave_arburst(flash$slave_arburst),
		.slave_arcache(flash$slave_arcache),
		.slave_arid(flash$slave_arid),
		.slave_arlen(flash$slave_arlen),
		.slave_arlock(flash$slave_arlock),
		.slave_arprot(flash$slave_arprot),
		.slave_arqos(flash$slave_arqos),
		.slave_arregion(flash$slave_arregion),
		.slave_arsize(flash$slave_arsize),
		.slave_arvalid(flash$slave_arvalid),
		.slave_awaddr(flash$slave_awaddr),
		.slave_awburst(flash$slave_awburst),
		.slave_awcache(flash$slave_awcache),
		.slave_awid(flash$slave_awid),
		.slave_awlen(flash$slave_awlen),
		.slave_awlock(flash$slave_awlock),
		.slave_awprot(flash$slave_awprot),
		.slave_awqos(flash$slave_awqos),
		.slave_awregion(flash$slave_awregion),
		.slave_awsize(flash$slave_awsize),
		.slave_awvalid(flash$slave_awvalid),
		.slave_bready(flash$slave_bready),
		.slave_rready(flash$slave_rready),
		.slave_wdata(flash$slave_wdata),
		.slave_wlast(flash$slave_wlast),
		.slave_wstrb(flash$slave_wstrb),
		.slave_wvalid(flash$slave_wvalid),
		.EN_set_addr_map(flash$EN_set_addr_map),
		.RDY_set_addr_map(),
		.slave_awready(flash$slave_awready),
		.slave_wready(flash$slave_wready),
		.slave_bvalid(flash$slave_bvalid),
		.slave_bid(flash$slave_bid),
		.slave_bresp(flash$slave_bresp),
		.slave_arready(flash$slave_arready),
		.slave_rvalid(flash$slave_rvalid),
		.slave_rid(flash$slave_rid),
		.slave_rdata(flash$slave_rdata),
		.slave_rresp(flash$slave_rresp),
		.slave_rlast(flash$slave_rlast));

  // submodule flash_axi4_deburster_f_r_arlen
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(32'd1)) flash_axi4_deburster_f_r_arlen(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(flash_axi4_deburster_f_r_arlen$D_IN),
							      .ENQ(flash_axi4_deburster_f_r_arlen$ENQ),
							      .DEQ(flash_axi4_deburster_f_r_arlen$DEQ),
							      .CLR(flash_axi4_deburster_f_r_arlen$CLR),
							      .D_OUT(flash_axi4_deburster_f_r_arlen$D_OUT),
							      .FULL_N(flash_axi4_deburster_f_r_arlen$FULL_N),
							      .EMPTY_N(flash_axi4_deburster_f_r_arlen$EMPTY_N));

  // submodule flash_axi4_deburster_f_w_awlen
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(32'd1)) flash_axi4_deburster_f_w_awlen(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(flash_axi4_deburster_f_w_awlen$D_IN),
							      .ENQ(flash_axi4_deburster_f_w_awlen$ENQ),
							      .DEQ(flash_axi4_deburster_f_w_awlen$DEQ),
							      .CLR(flash_axi4_deburster_f_w_awlen$CLR),
							      .D_OUT(flash_axi4_deburster_f_w_awlen$D_OUT),
							      .FULL_N(flash_axi4_deburster_f_w_awlen$FULL_N),
							      .EMPTY_N(flash_axi4_deburster_f_w_awlen$EMPTY_N));

  // submodule flash_axi4_deburster_xactor_from_master_f_rd_addr
  FIFO2 #(.width(32'd97),
	  .guarded(32'd1)) flash_axi4_deburster_xactor_from_master_f_rd_addr(.RST(RST_N),
									     .CLK(CLK),
									     .D_IN(flash_axi4_deburster_xactor_from_master_f_rd_addr$D_IN),
									     .ENQ(flash_axi4_deburster_xactor_from_master_f_rd_addr$ENQ),
									     .DEQ(flash_axi4_deburster_xactor_from_master_f_rd_addr$DEQ),
									     .CLR(flash_axi4_deburster_xactor_from_master_f_rd_addr$CLR),
									     .D_OUT(flash_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT),
									     .FULL_N(flash_axi4_deburster_xactor_from_master_f_rd_addr$FULL_N),
									     .EMPTY_N(flash_axi4_deburster_xactor_from_master_f_rd_addr$EMPTY_N));

  // submodule flash_axi4_deburster_xactor_from_master_f_rd_data
  FIFO2 #(.width(32'd71),
	  .guarded(32'd1)) flash_axi4_deburster_xactor_from_master_f_rd_data(.RST(RST_N),
									     .CLK(CLK),
									     .D_IN(flash_axi4_deburster_xactor_from_master_f_rd_data$D_IN),
									     .ENQ(flash_axi4_deburster_xactor_from_master_f_rd_data$ENQ),
									     .DEQ(flash_axi4_deburster_xactor_from_master_f_rd_data$DEQ),
									     .CLR(flash_axi4_deburster_xactor_from_master_f_rd_data$CLR),
									     .D_OUT(flash_axi4_deburster_xactor_from_master_f_rd_data$D_OUT),
									     .FULL_N(flash_axi4_deburster_xactor_from_master_f_rd_data$FULL_N),
									     .EMPTY_N(flash_axi4_deburster_xactor_from_master_f_rd_data$EMPTY_N));

  // submodule flash_axi4_deburster_xactor_from_master_f_wr_addr
  FIFO2 #(.width(32'd97),
	  .guarded(32'd1)) flash_axi4_deburster_xactor_from_master_f_wr_addr(.RST(RST_N),
									     .CLK(CLK),
									     .D_IN(flash_axi4_deburster_xactor_from_master_f_wr_addr$D_IN),
									     .ENQ(flash_axi4_deburster_xactor_from_master_f_wr_addr$ENQ),
									     .DEQ(flash_axi4_deburster_xactor_from_master_f_wr_addr$DEQ),
									     .CLR(flash_axi4_deburster_xactor_from_master_f_wr_addr$CLR),
									     .D_OUT(flash_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT),
									     .FULL_N(flash_axi4_deburster_xactor_from_master_f_wr_addr$FULL_N),
									     .EMPTY_N(flash_axi4_deburster_xactor_from_master_f_wr_addr$EMPTY_N));

  // submodule flash_axi4_deburster_xactor_from_master_f_wr_data
  FIFO2 #(.width(32'd73),
	  .guarded(32'd1)) flash_axi4_deburster_xactor_from_master_f_wr_data(.RST(RST_N),
									     .CLK(CLK),
									     .D_IN(flash_axi4_deburster_xactor_from_master_f_wr_data$D_IN),
									     .ENQ(flash_axi4_deburster_xactor_from_master_f_wr_data$ENQ),
									     .DEQ(flash_axi4_deburster_xactor_from_master_f_wr_data$DEQ),
									     .CLR(flash_axi4_deburster_xactor_from_master_f_wr_data$CLR),
									     .D_OUT(flash_axi4_deburster_xactor_from_master_f_wr_data$D_OUT),
									     .FULL_N(flash_axi4_deburster_xactor_from_master_f_wr_data$FULL_N),
									     .EMPTY_N(flash_axi4_deburster_xactor_from_master_f_wr_data$EMPTY_N));

  // submodule flash_axi4_deburster_xactor_from_master_f_wr_resp
  FIFO2 #(.width(32'd6),
	  .guarded(32'd1)) flash_axi4_deburster_xactor_from_master_f_wr_resp(.RST(RST_N),
									     .CLK(CLK),
									     .D_IN(flash_axi4_deburster_xactor_from_master_f_wr_resp$D_IN),
									     .ENQ(flash_axi4_deburster_xactor_from_master_f_wr_resp$ENQ),
									     .DEQ(flash_axi4_deburster_xactor_from_master_f_wr_resp$DEQ),
									     .CLR(flash_axi4_deburster_xactor_from_master_f_wr_resp$CLR),
									     .D_OUT(flash_axi4_deburster_xactor_from_master_f_wr_resp$D_OUT),
									     .FULL_N(flash_axi4_deburster_xactor_from_master_f_wr_resp$FULL_N),
									     .EMPTY_N(flash_axi4_deburster_xactor_from_master_f_wr_resp$EMPTY_N));

  // submodule flash_axi4_deburster_xactor_to_slave_f_rd_addr
  FIFO2 #(.width(32'd97),
	  .guarded(32'd1)) flash_axi4_deburster_xactor_to_slave_f_rd_addr(.RST(RST_N),
									  .CLK(CLK),
									  .D_IN(flash_axi4_deburster_xactor_to_slave_f_rd_addr$D_IN),
									  .ENQ(flash_axi4_deburster_xactor_to_slave_f_rd_addr$ENQ),
									  .DEQ(flash_axi4_deburster_xactor_to_slave_f_rd_addr$DEQ),
									  .CLR(flash_axi4_deburster_xactor_to_slave_f_rd_addr$CLR),
									  .D_OUT(flash_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT),
									  .FULL_N(flash_axi4_deburster_xactor_to_slave_f_rd_addr$FULL_N),
									  .EMPTY_N(flash_axi4_deburster_xactor_to_slave_f_rd_addr$EMPTY_N));

  // submodule flash_axi4_deburster_xactor_to_slave_f_rd_data
  FIFO2 #(.width(32'd71),
	  .guarded(32'd1)) flash_axi4_deburster_xactor_to_slave_f_rd_data(.RST(RST_N),
									  .CLK(CLK),
									  .D_IN(flash_axi4_deburster_xactor_to_slave_f_rd_data$D_IN),
									  .ENQ(flash_axi4_deburster_xactor_to_slave_f_rd_data$ENQ),
									  .DEQ(flash_axi4_deburster_xactor_to_slave_f_rd_data$DEQ),
									  .CLR(flash_axi4_deburster_xactor_to_slave_f_rd_data$CLR),
									  .D_OUT(flash_axi4_deburster_xactor_to_slave_f_rd_data$D_OUT),
									  .FULL_N(flash_axi4_deburster_xactor_to_slave_f_rd_data$FULL_N),
									  .EMPTY_N(flash_axi4_deburster_xactor_to_slave_f_rd_data$EMPTY_N));

  // submodule flash_axi4_deburster_xactor_to_slave_f_wr_addr
  FIFO2 #(.width(32'd97),
	  .guarded(32'd1)) flash_axi4_deburster_xactor_to_slave_f_wr_addr(.RST(RST_N),
									  .CLK(CLK),
									  .D_IN(flash_axi4_deburster_xactor_to_slave_f_wr_addr$D_IN),
									  .ENQ(flash_axi4_deburster_xactor_to_slave_f_wr_addr$ENQ),
									  .DEQ(flash_axi4_deburster_xactor_to_slave_f_wr_addr$DEQ),
									  .CLR(flash_axi4_deburster_xactor_to_slave_f_wr_addr$CLR),
									  .D_OUT(flash_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT),
									  .FULL_N(flash_axi4_deburster_xactor_to_slave_f_wr_addr$FULL_N),
									  .EMPTY_N(flash_axi4_deburster_xactor_to_slave_f_wr_addr$EMPTY_N));

  // submodule flash_axi4_deburster_xactor_to_slave_f_wr_data
  FIFO2 #(.width(32'd73),
	  .guarded(32'd1)) flash_axi4_deburster_xactor_to_slave_f_wr_data(.RST(RST_N),
									  .CLK(CLK),
									  .D_IN(flash_axi4_deburster_xactor_to_slave_f_wr_data$D_IN),
									  .ENQ(flash_axi4_deburster_xactor_to_slave_f_wr_data$ENQ),
									  .DEQ(flash_axi4_deburster_xactor_to_slave_f_wr_data$DEQ),
									  .CLR(flash_axi4_deburster_xactor_to_slave_f_wr_data$CLR),
									  .D_OUT(flash_axi4_deburster_xactor_to_slave_f_wr_data$D_OUT),
									  .FULL_N(flash_axi4_deburster_xactor_to_slave_f_wr_data$FULL_N),
									  .EMPTY_N(flash_axi4_deburster_xactor_to_slave_f_wr_data$EMPTY_N));

  // submodule flash_axi4_deburster_xactor_to_slave_f_wr_resp
  FIFO2 #(.width(32'd6),
	  .guarded(32'd1)) flash_axi4_deburster_xactor_to_slave_f_wr_resp(.RST(RST_N),
									  .CLK(CLK),
									  .D_IN(flash_axi4_deburster_xactor_to_slave_f_wr_resp$D_IN),
									  .ENQ(flash_axi4_deburster_xactor_to_slave_f_wr_resp$ENQ),
									  .DEQ(flash_axi4_deburster_xactor_to_slave_f_wr_resp$DEQ),
									  .CLR(flash_axi4_deburster_xactor_to_slave_f_wr_resp$CLR),
									  .D_OUT(flash_axi4_deburster_xactor_to_slave_f_wr_resp$D_OUT),
									  .FULL_N(flash_axi4_deburster_xactor_to_slave_f_wr_resp$FULL_N),
									  .EMPTY_N(flash_axi4_deburster_xactor_to_slave_f_wr_resp$EMPTY_N));

  // submodule gpio
  mkGpio gpio(.CLK(CLK),
	      .RST_N(RST_N),
	      .set_addr_map_addr_base(gpio$set_addr_map_addr_base),
	      .set_addr_map_addr_lim(gpio$set_addr_map_addr_lim),
	      .slave_araddr(gpio$slave_araddr),
	      .slave_arburst(gpio$slave_arburst),
	      .slave_arcache(gpio$slave_arcache),
	      .slave_arid(gpio$slave_arid),
	      .slave_arlen(gpio$slave_arlen),
	      .slave_arlock(gpio$slave_arlock),
	      .slave_arprot(gpio$slave_arprot),
	      .slave_arqos(gpio$slave_arqos),
	      .slave_arregion(gpio$slave_arregion),
	      .slave_arsize(gpio$slave_arsize),
	      .slave_arvalid(gpio$slave_arvalid),
	      .slave_awaddr(gpio$slave_awaddr),
	      .slave_awburst(gpio$slave_awburst),
	      .slave_awcache(gpio$slave_awcache),
	      .slave_awid(gpio$slave_awid),
	      .slave_awlen(gpio$slave_awlen),
	      .slave_awlock(gpio$slave_awlock),
	      .slave_awprot(gpio$slave_awprot),
	      .slave_awqos(gpio$slave_awqos),
	      .slave_awregion(gpio$slave_awregion),
	      .slave_awsize(gpio$slave_awsize),
	      .slave_awvalid(gpio$slave_awvalid),
	      .slave_bready(gpio$slave_bready),
	      .slave_rready(gpio$slave_rready),
	      .slave_wdata(gpio$slave_wdata),
	      .slave_wlast(gpio$slave_wlast),
	      .slave_wstrb(gpio$slave_wstrb),
	      .slave_wvalid(gpio$slave_wvalid),
	      .EN_set_addr_map(gpio$EN_set_addr_map),
	      .RDY_set_addr_map(),
	      .slave_awready(gpio$slave_awready),
	      .slave_wready(gpio$slave_wready),
	      .slave_bvalid(gpio$slave_bvalid),
	      .slave_bid(gpio$slave_bid),
	      .slave_bresp(gpio$slave_bresp),
	      .slave_arready(gpio$slave_arready),
	      .slave_rvalid(gpio$slave_rvalid),
	      .slave_rid(gpio$slave_rid),
	      .slave_rdata(gpio$slave_rdata),
	      .slave_rresp(gpio$slave_rresp),
	      .slave_rlast(gpio$slave_rlast),
	      .assert_soft_reset(gpio$assert_soft_reset),
	      .RDY_assert_soft_reset());

  // submodule mem0_controller
  mkMem_Controller mem0_controller(.CLK(CLK),
				   .RST_N(RST_N),
				   .set_addr_map_addr_base(mem0_controller$set_addr_map_addr_base),
				   .set_addr_map_addr_lim(mem0_controller$set_addr_map_addr_lim),
				   .set_watch_tohost_tohost_addr(mem0_controller$set_watch_tohost_tohost_addr),
				   .set_watch_tohost_watch_tohost(mem0_controller$set_watch_tohost_watch_tohost),
				   .slave_araddr(mem0_controller$slave_araddr),
				   .slave_arburst(mem0_controller$slave_arburst),
				   .slave_arcache(mem0_controller$slave_arcache),
				   .slave_arid(mem0_controller$slave_arid),
				   .slave_arlen(mem0_controller$slave_arlen),
				   .slave_arlock(mem0_controller$slave_arlock),
				   .slave_arprot(mem0_controller$slave_arprot),
				   .slave_arqos(mem0_controller$slave_arqos),
				   .slave_arregion(mem0_controller$slave_arregion),
				   .slave_arsize(mem0_controller$slave_arsize),
				   .slave_arvalid(mem0_controller$slave_arvalid),
				   .slave_awaddr(mem0_controller$slave_awaddr),
				   .slave_awburst(mem0_controller$slave_awburst),
				   .slave_awcache(mem0_controller$slave_awcache),
				   .slave_awid(mem0_controller$slave_awid),
				   .slave_awlen(mem0_controller$slave_awlen),
				   .slave_awlock(mem0_controller$slave_awlock),
				   .slave_awprot(mem0_controller$slave_awprot),
				   .slave_awqos(mem0_controller$slave_awqos),
				   .slave_awregion(mem0_controller$slave_awregion),
				   .slave_awsize(mem0_controller$slave_awsize),
				   .slave_awvalid(mem0_controller$slave_awvalid),
				   .slave_bready(mem0_controller$slave_bready),
				   .slave_rready(mem0_controller$slave_rready),
				   .slave_wdata(mem0_controller$slave_wdata),
				   .slave_wlast(mem0_controller$slave_wlast),
				   .slave_wstrb(mem0_controller$slave_wstrb),
				   .slave_wvalid(mem0_controller$slave_wvalid),
				   .to_raw_mem_response_put(mem0_controller$to_raw_mem_response_put),
				   .EN_server_reset_request_put(mem0_controller$EN_server_reset_request_put),
				   .EN_server_reset_response_get(mem0_controller$EN_server_reset_response_get),
				   .EN_set_addr_map(mem0_controller$EN_set_addr_map),
				   .EN_to_raw_mem_request_get(mem0_controller$EN_to_raw_mem_request_get),
				   .EN_to_raw_mem_response_put(mem0_controller$EN_to_raw_mem_response_put),
				   .EN_set_watch_tohost(mem0_controller$EN_set_watch_tohost),
				   .RDY_server_reset_request_put(mem0_controller$RDY_server_reset_request_put),
				   .RDY_server_reset_response_get(mem0_controller$RDY_server_reset_response_get),
				   .RDY_set_addr_map(mem0_controller$RDY_set_addr_map),
				   .slave_awready(mem0_controller$slave_awready),
				   .slave_wready(mem0_controller$slave_wready),
				   .slave_bvalid(mem0_controller$slave_bvalid),
				   .slave_bid(mem0_controller$slave_bid),
				   .slave_bresp(mem0_controller$slave_bresp),
				   .slave_arready(mem0_controller$slave_arready),
				   .slave_rvalid(mem0_controller$slave_rvalid),
				   .slave_rid(mem0_controller$slave_rid),
				   .slave_rdata(mem0_controller$slave_rdata),
				   .slave_rresp(mem0_controller$slave_rresp),
				   .slave_rlast(mem0_controller$slave_rlast),
				   .to_raw_mem_request_get(mem0_controller$to_raw_mem_request_get),
				   .RDY_to_raw_mem_request_get(mem0_controller$RDY_to_raw_mem_request_get),
				   .RDY_to_raw_mem_response_put(mem0_controller$RDY_to_raw_mem_response_put),
				   .RDY_set_watch_tohost());

  // submodule mem0_controller_axi4_deburster_f_r_arlen
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(32'd1)) mem0_controller_axi4_deburster_f_r_arlen(.RST(RST_N),
									.CLK(CLK),
									.D_IN(mem0_controller_axi4_deburster_f_r_arlen$D_IN),
									.ENQ(mem0_controller_axi4_deburster_f_r_arlen$ENQ),
									.DEQ(mem0_controller_axi4_deburster_f_r_arlen$DEQ),
									.CLR(mem0_controller_axi4_deburster_f_r_arlen$CLR),
									.D_OUT(mem0_controller_axi4_deburster_f_r_arlen$D_OUT),
									.FULL_N(mem0_controller_axi4_deburster_f_r_arlen$FULL_N),
									.EMPTY_N(mem0_controller_axi4_deburster_f_r_arlen$EMPTY_N));

  // submodule mem0_controller_axi4_deburster_f_w_awlen
  SizedFIFO #(.p1width(32'd8),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(32'd1)) mem0_controller_axi4_deburster_f_w_awlen(.RST(RST_N),
									.CLK(CLK),
									.D_IN(mem0_controller_axi4_deburster_f_w_awlen$D_IN),
									.ENQ(mem0_controller_axi4_deburster_f_w_awlen$ENQ),
									.DEQ(mem0_controller_axi4_deburster_f_w_awlen$DEQ),
									.CLR(mem0_controller_axi4_deburster_f_w_awlen$CLR),
									.D_OUT(mem0_controller_axi4_deburster_f_w_awlen$D_OUT),
									.FULL_N(mem0_controller_axi4_deburster_f_w_awlen$FULL_N),
									.EMPTY_N(mem0_controller_axi4_deburster_f_w_awlen$EMPTY_N));

  // submodule mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr
  FIFO2 #(.width(32'd97),
	  .guarded(32'd1)) mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr(.RST(RST_N),
										       .CLK(CLK),
										       .D_IN(mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$D_IN),
										       .ENQ(mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$ENQ),
										       .DEQ(mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$DEQ),
										       .CLR(mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$CLR),
										       .D_OUT(mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT),
										       .FULL_N(mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$FULL_N),
										       .EMPTY_N(mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$EMPTY_N));

  // submodule mem0_controller_axi4_deburster_xactor_from_master_f_rd_data
  FIFO2 #(.width(32'd71),
	  .guarded(32'd1)) mem0_controller_axi4_deburster_xactor_from_master_f_rd_data(.RST(RST_N),
										       .CLK(CLK),
										       .D_IN(mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$D_IN),
										       .ENQ(mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$ENQ),
										       .DEQ(mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$DEQ),
										       .CLR(mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$CLR),
										       .D_OUT(mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$D_OUT),
										       .FULL_N(mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$FULL_N),
										       .EMPTY_N(mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$EMPTY_N));

  // submodule mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr
  FIFO2 #(.width(32'd97),
	  .guarded(32'd1)) mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr(.RST(RST_N),
										       .CLK(CLK),
										       .D_IN(mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$D_IN),
										       .ENQ(mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$ENQ),
										       .DEQ(mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$DEQ),
										       .CLR(mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$CLR),
										       .D_OUT(mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT),
										       .FULL_N(mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$FULL_N),
										       .EMPTY_N(mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$EMPTY_N));

  // submodule mem0_controller_axi4_deburster_xactor_from_master_f_wr_data
  FIFO2 #(.width(32'd73),
	  .guarded(32'd1)) mem0_controller_axi4_deburster_xactor_from_master_f_wr_data(.RST(RST_N),
										       .CLK(CLK),
										       .D_IN(mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$D_IN),
										       .ENQ(mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$ENQ),
										       .DEQ(mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$DEQ),
										       .CLR(mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$CLR),
										       .D_OUT(mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$D_OUT),
										       .FULL_N(mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$FULL_N),
										       .EMPTY_N(mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$EMPTY_N));

  // submodule mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp
  FIFO2 #(.width(32'd6),
	  .guarded(32'd1)) mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp(.RST(RST_N),
										       .CLK(CLK),
										       .D_IN(mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$D_IN),
										       .ENQ(mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$ENQ),
										       .DEQ(mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$DEQ),
										       .CLR(mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$CLR),
										       .D_OUT(mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$D_OUT),
										       .FULL_N(mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$FULL_N),
										       .EMPTY_N(mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$EMPTY_N));

  // submodule mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr
  FIFO2 #(.width(32'd97),
	  .guarded(32'd1)) mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr(.RST(RST_N),
										    .CLK(CLK),
										    .D_IN(mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$D_IN),
										    .ENQ(mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$ENQ),
										    .DEQ(mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$DEQ),
										    .CLR(mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$CLR),
										    .D_OUT(mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT),
										    .FULL_N(mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$FULL_N),
										    .EMPTY_N(mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$EMPTY_N));

  // submodule mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data
  FIFO2 #(.width(32'd71),
	  .guarded(32'd1)) mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data(.RST(RST_N),
										    .CLK(CLK),
										    .D_IN(mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data$D_IN),
										    .ENQ(mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data$ENQ),
										    .DEQ(mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data$DEQ),
										    .CLR(mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data$CLR),
										    .D_OUT(mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data$D_OUT),
										    .FULL_N(mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data$FULL_N),
										    .EMPTY_N(mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data$EMPTY_N));

  // submodule mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr
  FIFO2 #(.width(32'd97),
	  .guarded(32'd1)) mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr(.RST(RST_N),
										    .CLK(CLK),
										    .D_IN(mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$D_IN),
										    .ENQ(mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$ENQ),
										    .DEQ(mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$DEQ),
										    .CLR(mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$CLR),
										    .D_OUT(mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT),
										    .FULL_N(mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$FULL_N),
										    .EMPTY_N(mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$EMPTY_N));

  // submodule mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data
  FIFO2 #(.width(32'd73),
	  .guarded(32'd1)) mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data(.RST(RST_N),
										    .CLK(CLK),
										    .D_IN(mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$D_IN),
										    .ENQ(mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$ENQ),
										    .DEQ(mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$DEQ),
										    .CLR(mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$CLR),
										    .D_OUT(mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$D_OUT),
										    .FULL_N(mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$FULL_N),
										    .EMPTY_N(mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$EMPTY_N));

  // submodule mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp
  FIFO2 #(.width(32'd6),
	  .guarded(32'd1)) mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp(.RST(RST_N),
										    .CLK(CLK),
										    .D_IN(mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$D_IN),
										    .ENQ(mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$ENQ),
										    .DEQ(mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$DEQ),
										    .CLR(mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$CLR),
										    .D_OUT(mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$D_OUT),
										    .FULL_N(mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$FULL_N),
										    .EMPTY_N(mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$EMPTY_N));

  // submodule sim_jtag
  sim_jtag sim_jtag(.clk(CLK),
		    .rst_n(RST_N),
		    .tdo(sim_jtag$tdo),
		    .tdi(sim_jtag$tdi),
		    .tms(sim_jtag$tms),
		    .tclk(sim_jtag$tclk));

  // submodule soc_map
  mkSoC_Map soc_map(.CLK(CLK),
		    .RST_N(RST_N),
		    .m_is_IO_addr_addr(soc_map$m_is_IO_addr_addr),
		    .m_is_mem_addr_addr(soc_map$m_is_mem_addr_addr),
		    .m_is_near_mem_IO_addr_addr(soc_map$m_is_near_mem_IO_addr_addr),
		    .m_plic_addr_base(),
		    .m_plic_addr_size(),
		    .m_plic_addr_lim(),
		    .m_near_mem_io_addr_base(),
		    .m_near_mem_io_addr_size(),
		    .m_near_mem_io_addr_lim(),
		    .m_flash_mem_addr_base(soc_map$m_flash_mem_addr_base),
		    .m_flash_mem_addr_size(),
		    .m_flash_mem_addr_lim(soc_map$m_flash_mem_addr_lim),
		    .m_ethernet_0_addr_base(),
		    .m_ethernet_0_addr_size(),
		    .m_ethernet_0_addr_lim(),
		    .m_dma_0_addr_base(),
		    .m_dma_0_addr_size(),
		    .m_dma_0_addr_lim(),
		    .m_uart16550_0_addr_base(soc_map$m_uart16550_0_addr_base),
		    .m_uart16550_0_addr_size(),
		    .m_uart16550_0_addr_lim(soc_map$m_uart16550_0_addr_lim),
		    .m_gpio_0_addr_base(soc_map$m_gpio_0_addr_base),
		    .m_gpio_0_addr_size(),
		    .m_gpio_0_addr_lim(soc_map$m_gpio_0_addr_lim),
		    .m_boot_rom_addr_base(soc_map$m_boot_rom_addr_base),
		    .m_boot_rom_addr_size(),
		    .m_boot_rom_addr_lim(soc_map$m_boot_rom_addr_lim),
		    .m_ddr4_0_uncached_addr_base(soc_map$m_ddr4_0_uncached_addr_base),
		    .m_ddr4_0_uncached_addr_size(),
		    .m_ddr4_0_uncached_addr_lim(),
		    .m_ddr4_0_cached_addr_base(),
		    .m_ddr4_0_cached_addr_size(),
		    .m_ddr4_0_cached_addr_lim(soc_map$m_ddr4_0_cached_addr_lim),
		    .m_is_mem_addr(),
		    .m_is_IO_addr(),
		    .m_is_near_mem_IO_addr(),
		    .m_pc_reset_value(),
		    .m_mtvec_reset_value(),
		    .m_nmivec_reset_value());

  // submodule tv_xactor_f_data
  FIFO2 #(.width(32'd761), .guarded(32'd1)) tv_xactor_f_data(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(tv_xactor_f_data$D_IN),
							     .ENQ(tv_xactor_f_data$ENQ),
							     .DEQ(tv_xactor_f_data$DEQ),
							     .CLR(tv_xactor_f_data$CLR),
							     .D_OUT(tv_xactor_f_data$D_OUT),
							     .FULL_N(tv_xactor_f_data$FULL_N),
							     .EMPTY_N(tv_xactor_f_data$EMPTY_N));

  // submodule uart0
  mkUART uart0(.CLK(CLK),
	       .RST_N(RST_N),
	       .put_from_console_put(uart0$put_from_console_put),
	       .set_addr_map_addr_base(uart0$set_addr_map_addr_base),
	       .set_addr_map_addr_lim(uart0$set_addr_map_addr_lim),
	       .slave_araddr(uart0$slave_araddr),
	       .slave_arburst(uart0$slave_arburst),
	       .slave_arcache(uart0$slave_arcache),
	       .slave_arid(uart0$slave_arid),
	       .slave_arlen(uart0$slave_arlen),
	       .slave_arlock(uart0$slave_arlock),
	       .slave_arprot(uart0$slave_arprot),
	       .slave_arqos(uart0$slave_arqos),
	       .slave_arregion(uart0$slave_arregion),
	       .slave_arsize(uart0$slave_arsize),
	       .slave_arvalid(uart0$slave_arvalid),
	       .slave_awaddr(uart0$slave_awaddr),
	       .slave_awburst(uart0$slave_awburst),
	       .slave_awcache(uart0$slave_awcache),
	       .slave_awid(uart0$slave_awid),
	       .slave_awlen(uart0$slave_awlen),
	       .slave_awlock(uart0$slave_awlock),
	       .slave_awprot(uart0$slave_awprot),
	       .slave_awqos(uart0$slave_awqos),
	       .slave_awregion(uart0$slave_awregion),
	       .slave_awsize(uart0$slave_awsize),
	       .slave_awvalid(uart0$slave_awvalid),
	       .slave_bready(uart0$slave_bready),
	       .slave_rready(uart0$slave_rready),
	       .slave_wdata(uart0$slave_wdata),
	       .slave_wlast(uart0$slave_wlast),
	       .slave_wstrb(uart0$slave_wstrb),
	       .slave_wvalid(uart0$slave_wvalid),
	       .EN_server_reset_request_put(uart0$EN_server_reset_request_put),
	       .EN_server_reset_response_get(uart0$EN_server_reset_response_get),
	       .EN_set_addr_map(uart0$EN_set_addr_map),
	       .EN_get_to_console_get(uart0$EN_get_to_console_get),
	       .EN_put_from_console_put(uart0$EN_put_from_console_put),
	       .RDY_server_reset_request_put(uart0$RDY_server_reset_request_put),
	       .RDY_server_reset_response_get(uart0$RDY_server_reset_response_get),
	       .RDY_set_addr_map(),
	       .slave_awready(uart0$slave_awready),
	       .slave_wready(uart0$slave_wready),
	       .slave_bvalid(uart0$slave_bvalid),
	       .slave_bid(uart0$slave_bid),
	       .slave_bresp(uart0$slave_bresp),
	       .slave_arready(uart0$slave_arready),
	       .slave_rvalid(uart0$slave_rvalid),
	       .slave_rid(uart0$slave_rid),
	       .slave_rdata(uart0$slave_rdata),
	       .slave_rresp(uart0$slave_rresp),
	       .slave_rlast(uart0$slave_rlast),
	       .get_to_console_get(uart0$get_to_console_get),
	       .RDY_get_to_console_get(uart0$RDY_get_to_console_get),
	       .RDY_put_from_console_put(uart0$RDY_put_from_console_put),
	       .intr(uart0$intr));

  // rule RL_rl_reset_start_2
  assign WILL_FIRE_RL_rl_reset_start_2 =
	     mem0_controller$RDY_server_reset_request_put &&
	     uart0$RDY_server_reset_request_put &&
	     fabric$RDY_reset &&
	     rg_state == 2'd0 ;

  // rule RL_rl_reset_complete
  assign WILL_FIRE_RL_rl_reset_complete =
	     mem0_controller$RDY_set_addr_map &&
	     mem0_controller$RDY_server_reset_response_get &&
	     uart0$RDY_server_reset_response_get &&
	     rg_state == 2'd2 ;

  // rule RL_boot_rom_axi4_deburster_rl_wr_xaction_master_to_slave
  assign WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_xaction_master_to_slave =
	     boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$FULL_N &&
	     boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$EMPTY_N &&
	     boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$FULL_N &&
	     boot_rom_axi4_deburster_xactor_from_master_f_wr_data$EMPTY_N &&
	     (boot_rom_axi4_deburster_rg_w_beat_count != 8'd0 ||
	      boot_rom_axi4_deburster_f_w_awlen$FULL_N) ;

  // rule RL_boot_rom_axi4_deburster_rl_wr_resp_slave_to_master
  assign WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_resp_slave_to_master =
	     boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$EMPTY_N &&
	     boot_rom_axi4_deburster_f_w_awlen$EMPTY_N &&
	     (boot_rom_axi4_deburster_rg_b_beat_count_2_ULT__ETC___d54 ||
	      boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$FULL_N) ;

  // rule RL_boot_rom_axi4_deburster_rl_rd_xaction_master_to_slave
  assign WILL_FIRE_RL_boot_rom_axi4_deburster_rl_rd_xaction_master_to_slave =
	     boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$FULL_N &&
	     boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$EMPTY_N &&
	     (boot_rom_axi4_deburster_rg_ar_beat_count != 8'd0 ||
	      boot_rom_axi4_deburster_f_r_arlen$FULL_N) ;

  // rule RL_boot_rom_axi4_deburster_rl_rd_resp_slave_to_master
  assign WILL_FIRE_RL_boot_rom_axi4_deburster_rl_rd_resp_slave_to_master =
	     boot_rom_axi4_deburster_xactor_to_slave_f_rd_data$EMPTY_N &&
	     boot_rom_axi4_deburster_f_r_arlen$EMPTY_N &&
	     boot_rom_axi4_deburster_xactor_from_master_f_rd_data$FULL_N ;

  // rule RL_flash_axi4_deburster_rl_wr_xaction_master_to_slave
  assign WILL_FIRE_RL_flash_axi4_deburster_rl_wr_xaction_master_to_slave =
	     flash_axi4_deburster_xactor_to_slave_f_wr_addr$FULL_N &&
	     flash_axi4_deburster_xactor_from_master_f_wr_addr$EMPTY_N &&
	     flash_axi4_deburster_xactor_to_slave_f_wr_data$FULL_N &&
	     flash_axi4_deburster_xactor_from_master_f_wr_data$EMPTY_N &&
	     (flash_axi4_deburster_rg_w_beat_count != 8'd0 ||
	      flash_axi4_deburster_f_w_awlen$FULL_N) ;

  // rule RL_flash_axi4_deburster_rl_wr_resp_slave_to_master
  assign WILL_FIRE_RL_flash_axi4_deburster_rl_wr_resp_slave_to_master =
	     flash_axi4_deburster_xactor_to_slave_f_wr_resp$EMPTY_N &&
	     flash_axi4_deburster_f_w_awlen$EMPTY_N &&
	     (flash_axi4_deburster_rg_b_beat_count_63_ULT_fl_ETC___d165 ||
	      flash_axi4_deburster_xactor_from_master_f_wr_resp$FULL_N) ;

  // rule RL_flash_axi4_deburster_rl_rd_xaction_master_to_slave
  assign WILL_FIRE_RL_flash_axi4_deburster_rl_rd_xaction_master_to_slave =
	     flash_axi4_deburster_xactor_to_slave_f_rd_addr$FULL_N &&
	     flash_axi4_deburster_xactor_from_master_f_rd_addr$EMPTY_N &&
	     (flash_axi4_deburster_rg_ar_beat_count != 8'd0 ||
	      flash_axi4_deburster_f_r_arlen$FULL_N) ;

  // rule RL_flash_axi4_deburster_rl_rd_resp_slave_to_master
  assign WILL_FIRE_RL_flash_axi4_deburster_rl_rd_resp_slave_to_master =
	     flash_axi4_deburster_xactor_to_slave_f_rd_data$EMPTY_N &&
	     flash_axi4_deburster_f_r_arlen$EMPTY_N &&
	     flash_axi4_deburster_xactor_from_master_f_rd_data$FULL_N ;

  // rule RL_mem0_controller_axi4_deburster_rl_wr_xaction_master_to_slave
  assign WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_xaction_master_to_slave =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$FULL_N &&
	     mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$EMPTY_N &&
	     mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$FULL_N &&
	     mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$EMPTY_N &&
	     (mem0_controller_axi4_deburster_rg_w_beat_count != 8'd0 ||
	      mem0_controller_axi4_deburster_f_w_awlen$FULL_N) ;

  // rule RL_mem0_controller_axi4_deburster_rl_wr_resp_slave_to_master
  assign WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_resp_slave_to_master =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$EMPTY_N &&
	     mem0_controller_axi4_deburster_f_w_awlen$EMPTY_N &&
	     (mem0_controller_axi4_deburster_rg_b_beat_count_ETC___d276 ||
	      mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$FULL_N) ;

  // rule RL_mem0_controller_axi4_deburster_rl_rd_xaction_master_to_slave
  assign WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_rd_xaction_master_to_slave =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$FULL_N &&
	     mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$EMPTY_N &&
	     (mem0_controller_axi4_deburster_rg_ar_beat_count != 8'd0 ||
	      mem0_controller_axi4_deburster_f_r_arlen$FULL_N) ;

  // rule RL_mem0_controller_axi4_deburster_rl_rd_resp_slave_to_master
  assign WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_rd_resp_slave_to_master =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data$EMPTY_N &&
	     mem0_controller_axi4_deburster_f_r_arlen$EMPTY_N &&
	     mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$FULL_N ;

  // inputs to muxes for submodule ports
  assign MUX_boot_rom_axi4_deburster_rg_b_resp$write_1__SEL_2 =
	     WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_resp_slave_to_master &&
	     (boot_rom_axi4_deburster_rg_b_resp == 2'b0 &&
	      boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$D_OUT[1:0] !=
	      2'b0 ||
	      !boot_rom_axi4_deburster_rg_b_beat_count_2_ULT__ETC___d54) ;
  assign MUX_flash_axi4_deburster_rg_b_resp$write_1__SEL_2 =
	     WILL_FIRE_RL_flash_axi4_deburster_rl_wr_resp_slave_to_master &&
	     (flash_axi4_deburster_rg_b_resp == 2'b0 &&
	      flash_axi4_deburster_xactor_to_slave_f_wr_resp$D_OUT[1:0] !=
	      2'b0 ||
	      !flash_axi4_deburster_rg_b_beat_count_63_ULT_fl_ETC___d165) ;
  assign MUX_mem0_controller_axi4_deburster_rg_b_resp$write_1__SEL_2 =
	     WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_resp_slave_to_master &&
	     (mem0_controller_axi4_deburster_rg_b_resp == 2'b0 &&
	      mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$D_OUT[1:0] !=
	      2'b0 ||
	      !mem0_controller_axi4_deburster_rg_b_beat_count_ETC___d276) ;
  assign MUX_boot_rom_axi4_deburster_rg_ar_beat_count$write_1__VAL_2 =
	     boot_rom_axi4_deburster_rg_ar_beat_count_6_ULT_ETC___d98 ?
	       x__h7463 :
	       8'd0 ;
  assign MUX_boot_rom_axi4_deburster_rg_b_beat_count$write_1__VAL_2 =
	     boot_rom_axi4_deburster_rg_b_beat_count_2_ULT__ETC___d54 ?
	       x__h7071 :
	       8'd0 ;
  assign MUX_boot_rom_axi4_deburster_rg_b_resp$write_1__VAL_2 =
	     boot_rom_axi4_deburster_rg_b_beat_count_2_ULT__ETC___d54 ?
	       boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$D_OUT[1:0] :
	       2'b0 ;
  assign MUX_boot_rom_axi4_deburster_rg_r_beat_count$write_1__VAL_2 =
	     boot_rom_axi4_deburster_rg_r_beat_count_07_ULT_ETC___d109 ?
	       x__h7661 :
	       8'd0 ;
  assign MUX_boot_rom_axi4_deburster_rg_w_beat_count$write_1__VAL_2 =
	     boot_rom_axi4_deburster_rg_w_beat_count_2_ULT__ETC___d39 ?
	       x__h6580 :
	       8'd0 ;
  assign MUX_flash_axi4_deburster_rg_ar_beat_count$write_1__VAL_2 =
	     flash_axi4_deburster_rg_ar_beat_count_87_ULT_f_ETC___d209 ?
	       x__h11363 :
	       8'd0 ;
  assign MUX_flash_axi4_deburster_rg_b_beat_count$write_1__VAL_2 =
	     flash_axi4_deburster_rg_b_beat_count_63_ULT_fl_ETC___d165 ?
	       x__h10971 :
	       8'd0 ;
  assign MUX_flash_axi4_deburster_rg_b_resp$write_1__VAL_2 =
	     flash_axi4_deburster_rg_b_beat_count_63_ULT_fl_ETC___d165 ?
	       flash_axi4_deburster_xactor_to_slave_f_wr_resp$D_OUT[1:0] :
	       2'b0 ;
  assign MUX_flash_axi4_deburster_rg_r_beat_count$write_1__VAL_2 =
	     flash_axi4_deburster_rg_r_beat_count_18_ULT_fl_ETC___d220 ?
	       x__h11561 :
	       8'd0 ;
  assign MUX_flash_axi4_deburster_rg_w_beat_count$write_1__VAL_2 =
	     flash_axi4_deburster_rg_w_beat_count_23_ULT_fl_ETC___d150 ?
	       x__h10480 :
	       8'd0 ;
  assign MUX_mem0_controller_axi4_deburster_rg_ar_beat_count$write_1__VAL_2 =
	     mem0_controller_axi4_deburster_rg_ar_beat_coun_ETC___d320 ?
	       x__h15702 :
	       8'd0 ;
  assign MUX_mem0_controller_axi4_deburster_rg_b_beat_count$write_1__VAL_2 =
	     mem0_controller_axi4_deburster_rg_b_beat_count_ETC___d276 ?
	       x__h15310 :
	       8'd0 ;
  assign MUX_mem0_controller_axi4_deburster_rg_b_resp$write_1__VAL_2 =
	     mem0_controller_axi4_deburster_rg_b_beat_count_ETC___d276 ?
	       mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$D_OUT[1:0] :
	       2'b0 ;
  assign MUX_mem0_controller_axi4_deburster_rg_r_beat_count$write_1__VAL_2 =
	     mem0_controller_axi4_deburster_rg_r_beat_count_ETC___d331 ?
	       x__h15900 :
	       8'd0 ;
  assign MUX_mem0_controller_axi4_deburster_rg_w_beat_count$write_1__VAL_2 =
	     mem0_controller_axi4_deburster_rg_w_beat_count_ETC___d261 ?
	       x__h14819 :
	       8'd0 ;

  // register boot_rom_axi4_deburster_rg_ar_beat_count
  assign boot_rom_axi4_deburster_rg_ar_beat_count$D_IN =
	     boot_rom_axi4_deburster_rg_reset ?
	       8'd0 :
	       MUX_boot_rom_axi4_deburster_rg_ar_beat_count$write_1__VAL_2 ;
  assign boot_rom_axi4_deburster_rg_ar_beat_count$EN =
	     WILL_FIRE_RL_boot_rom_axi4_deburster_rl_rd_xaction_master_to_slave ||
	     boot_rom_axi4_deburster_rg_reset ;

  // register boot_rom_axi4_deburster_rg_b_beat_count
  assign boot_rom_axi4_deburster_rg_b_beat_count$D_IN =
	     boot_rom_axi4_deburster_rg_reset ?
	       8'd0 :
	       MUX_boot_rom_axi4_deburster_rg_b_beat_count$write_1__VAL_2 ;
  assign boot_rom_axi4_deburster_rg_b_beat_count$EN =
	     WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_resp_slave_to_master ||
	     boot_rom_axi4_deburster_rg_reset ;

  // register boot_rom_axi4_deburster_rg_b_resp
  assign boot_rom_axi4_deburster_rg_b_resp$D_IN =
	     boot_rom_axi4_deburster_rg_reset ?
	       2'b0 :
	       MUX_boot_rom_axi4_deburster_rg_b_resp$write_1__VAL_2 ;
  assign boot_rom_axi4_deburster_rg_b_resp$EN =
	     MUX_boot_rom_axi4_deburster_rg_b_resp$write_1__SEL_2 ||
	     boot_rom_axi4_deburster_rg_reset ;

  // register boot_rom_axi4_deburster_rg_r_beat_count
  assign boot_rom_axi4_deburster_rg_r_beat_count$D_IN =
	     boot_rom_axi4_deburster_rg_reset ?
	       8'd0 :
	       MUX_boot_rom_axi4_deburster_rg_r_beat_count$write_1__VAL_2 ;
  assign boot_rom_axi4_deburster_rg_r_beat_count$EN =
	     WILL_FIRE_RL_boot_rom_axi4_deburster_rl_rd_resp_slave_to_master ||
	     boot_rom_axi4_deburster_rg_reset ;

  // register boot_rom_axi4_deburster_rg_reset
  assign boot_rom_axi4_deburster_rg_reset$D_IN = 1'd0 ;
  assign boot_rom_axi4_deburster_rg_reset$EN =
	     boot_rom_axi4_deburster_rg_reset ;

  // register boot_rom_axi4_deburster_rg_w_beat_count
  assign boot_rom_axi4_deburster_rg_w_beat_count$D_IN =
	     boot_rom_axi4_deburster_rg_reset ?
	       8'd0 :
	       MUX_boot_rom_axi4_deburster_rg_w_beat_count$write_1__VAL_2 ;
  assign boot_rom_axi4_deburster_rg_w_beat_count$EN =
	     WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_xaction_master_to_slave ||
	     boot_rom_axi4_deburster_rg_reset ;

  // register cpu_initial_reset
  assign cpu_initial_reset$D_IN = 1'd0 ;
  assign cpu_initial_reset$EN = rg_state == 2'd2 ;

  // register flash_axi4_deburster_rg_ar_beat_count
  assign flash_axi4_deburster_rg_ar_beat_count$D_IN =
	     flash_axi4_deburster_rg_reset ?
	       8'd0 :
	       MUX_flash_axi4_deburster_rg_ar_beat_count$write_1__VAL_2 ;
  assign flash_axi4_deburster_rg_ar_beat_count$EN =
	     WILL_FIRE_RL_flash_axi4_deburster_rl_rd_xaction_master_to_slave ||
	     flash_axi4_deburster_rg_reset ;

  // register flash_axi4_deburster_rg_b_beat_count
  assign flash_axi4_deburster_rg_b_beat_count$D_IN =
	     flash_axi4_deburster_rg_reset ?
	       8'd0 :
	       MUX_flash_axi4_deburster_rg_b_beat_count$write_1__VAL_2 ;
  assign flash_axi4_deburster_rg_b_beat_count$EN =
	     WILL_FIRE_RL_flash_axi4_deburster_rl_wr_resp_slave_to_master ||
	     flash_axi4_deburster_rg_reset ;

  // register flash_axi4_deburster_rg_b_resp
  assign flash_axi4_deburster_rg_b_resp$D_IN =
	     flash_axi4_deburster_rg_reset ?
	       2'b0 :
	       MUX_flash_axi4_deburster_rg_b_resp$write_1__VAL_2 ;
  assign flash_axi4_deburster_rg_b_resp$EN =
	     MUX_flash_axi4_deburster_rg_b_resp$write_1__SEL_2 ||
	     flash_axi4_deburster_rg_reset ;

  // register flash_axi4_deburster_rg_r_beat_count
  assign flash_axi4_deburster_rg_r_beat_count$D_IN =
	     flash_axi4_deburster_rg_reset ?
	       8'd0 :
	       MUX_flash_axi4_deburster_rg_r_beat_count$write_1__VAL_2 ;
  assign flash_axi4_deburster_rg_r_beat_count$EN =
	     WILL_FIRE_RL_flash_axi4_deburster_rl_rd_resp_slave_to_master ||
	     flash_axi4_deburster_rg_reset ;

  // register flash_axi4_deburster_rg_reset
  assign flash_axi4_deburster_rg_reset$D_IN = 1'd0 ;
  assign flash_axi4_deburster_rg_reset$EN = flash_axi4_deburster_rg_reset ;

  // register flash_axi4_deburster_rg_w_beat_count
  assign flash_axi4_deburster_rg_w_beat_count$D_IN =
	     flash_axi4_deburster_rg_reset ?
	       8'd0 :
	       MUX_flash_axi4_deburster_rg_w_beat_count$write_1__VAL_2 ;
  assign flash_axi4_deburster_rg_w_beat_count$EN =
	     WILL_FIRE_RL_flash_axi4_deburster_rl_wr_xaction_master_to_slave ||
	     flash_axi4_deburster_rg_reset ;

  // register mem0_controller_axi4_deburster_rg_ar_beat_count
  assign mem0_controller_axi4_deburster_rg_ar_beat_count$D_IN =
	     mem0_controller_axi4_deburster_rg_reset ?
	       8'd0 :
	       MUX_mem0_controller_axi4_deburster_rg_ar_beat_count$write_1__VAL_2 ;
  assign mem0_controller_axi4_deburster_rg_ar_beat_count$EN =
	     WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_rd_xaction_master_to_slave ||
	     mem0_controller_axi4_deburster_rg_reset ;

  // register mem0_controller_axi4_deburster_rg_b_beat_count
  assign mem0_controller_axi4_deburster_rg_b_beat_count$D_IN =
	     mem0_controller_axi4_deburster_rg_reset ?
	       8'd0 :
	       MUX_mem0_controller_axi4_deburster_rg_b_beat_count$write_1__VAL_2 ;
  assign mem0_controller_axi4_deburster_rg_b_beat_count$EN =
	     WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_resp_slave_to_master ||
	     mem0_controller_axi4_deburster_rg_reset ;

  // register mem0_controller_axi4_deburster_rg_b_resp
  assign mem0_controller_axi4_deburster_rg_b_resp$D_IN =
	     mem0_controller_axi4_deburster_rg_reset ?
	       2'b0 :
	       MUX_mem0_controller_axi4_deburster_rg_b_resp$write_1__VAL_2 ;
  assign mem0_controller_axi4_deburster_rg_b_resp$EN =
	     MUX_mem0_controller_axi4_deburster_rg_b_resp$write_1__SEL_2 ||
	     mem0_controller_axi4_deburster_rg_reset ;

  // register mem0_controller_axi4_deburster_rg_r_beat_count
  assign mem0_controller_axi4_deburster_rg_r_beat_count$D_IN =
	     mem0_controller_axi4_deburster_rg_reset ?
	       8'd0 :
	       MUX_mem0_controller_axi4_deburster_rg_r_beat_count$write_1__VAL_2 ;
  assign mem0_controller_axi4_deburster_rg_r_beat_count$EN =
	     WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_rd_resp_slave_to_master ||
	     mem0_controller_axi4_deburster_rg_reset ;

  // register mem0_controller_axi4_deburster_rg_reset
  assign mem0_controller_axi4_deburster_rg_reset$D_IN = 1'd0 ;
  assign mem0_controller_axi4_deburster_rg_reset$EN =
	     mem0_controller_axi4_deburster_rg_reset ;

  // register mem0_controller_axi4_deburster_rg_w_beat_count
  assign mem0_controller_axi4_deburster_rg_w_beat_count$D_IN =
	     mem0_controller_axi4_deburster_rg_reset ?
	       8'd0 :
	       MUX_mem0_controller_axi4_deburster_rg_w_beat_count$write_1__VAL_2 ;
  assign mem0_controller_axi4_deburster_rg_w_beat_count$EN =
	     WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_xaction_master_to_slave ||
	     mem0_controller_axi4_deburster_rg_reset ;

  // register rg_state
  assign rg_state$D_IN = WILL_FIRE_RL_rl_reset_complete ? 2'd1 : 2'd2 ;
  assign rg_state$EN =
	     WILL_FIRE_RL_rl_reset_complete || WILL_FIRE_RL_rl_reset_start_2 ;

  // submodule boot_rom
  assign boot_rom$set_addr_map_addr_base = soc_map$m_boot_rom_addr_base ;
  assign boot_rom$set_addr_map_addr_lim = soc_map$m_boot_rom_addr_lim ;
  assign boot_rom$slave_araddr =
	     boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[92:29] ;
  assign boot_rom$slave_arburst =
	     boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[17:16] ;
  assign boot_rom$slave_arcache =
	     boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[14:11] ;
  assign boot_rom$slave_arid =
	     boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[96:93] ;
  assign boot_rom$slave_arlen =
	     boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[28:21] ;
  assign boot_rom$slave_arlock =
	     boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[15] ;
  assign boot_rom$slave_arprot =
	     boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[10:8] ;
  assign boot_rom$slave_arqos =
	     boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[7:4] ;
  assign boot_rom$slave_arregion =
	     boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[3:0] ;
  assign boot_rom$slave_arsize =
	     boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[20:18] ;
  assign boot_rom$slave_arvalid =
	     boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$EMPTY_N ;
  assign boot_rom$slave_awaddr =
	     boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[92:29] ;
  assign boot_rom$slave_awburst =
	     boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[17:16] ;
  assign boot_rom$slave_awcache =
	     boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[14:11] ;
  assign boot_rom$slave_awid =
	     boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[96:93] ;
  assign boot_rom$slave_awlen =
	     boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[28:21] ;
  assign boot_rom$slave_awlock =
	     boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[15] ;
  assign boot_rom$slave_awprot =
	     boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[10:8] ;
  assign boot_rom$slave_awqos =
	     boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[7:4] ;
  assign boot_rom$slave_awregion =
	     boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[3:0] ;
  assign boot_rom$slave_awsize =
	     boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[20:18] ;
  assign boot_rom$slave_awvalid =
	     boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$EMPTY_N ;
  assign boot_rom$slave_bready =
	     boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$FULL_N ;
  assign boot_rom$slave_rready =
	     boot_rom_axi4_deburster_xactor_to_slave_f_rd_data$FULL_N ;
  assign boot_rom$slave_wdata =
	     boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$D_OUT[72:9] ;
  assign boot_rom$slave_wlast =
	     boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$D_OUT[0] ;
  assign boot_rom$slave_wstrb =
	     boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$D_OUT[8:1] ;
  assign boot_rom$slave_wvalid =
	     boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$EMPTY_N ;
  assign boot_rom$EN_set_addr_map = WILL_FIRE_RL_rl_reset_complete ;

  // submodule boot_rom_axi4_deburster_f_r_arlen
  assign boot_rom_axi4_deburster_f_r_arlen$D_IN =
	     boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[28:21] ;
  assign boot_rom_axi4_deburster_f_r_arlen$ENQ =
	     WILL_FIRE_RL_boot_rom_axi4_deburster_rl_rd_xaction_master_to_slave &&
	     boot_rom_axi4_deburster_rg_ar_beat_count == 8'd0 ;
  assign boot_rom_axi4_deburster_f_r_arlen$DEQ =
	     WILL_FIRE_RL_boot_rom_axi4_deburster_rl_rd_resp_slave_to_master &&
	     !boot_rom_axi4_deburster_rg_r_beat_count_07_ULT_ETC___d109 ;
  assign boot_rom_axi4_deburster_f_r_arlen$CLR =
	     boot_rom_axi4_deburster_rg_reset ;

  // submodule boot_rom_axi4_deburster_f_w_awlen
  assign boot_rom_axi4_deburster_f_w_awlen$D_IN =
	     boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[28:21] ;
  assign boot_rom_axi4_deburster_f_w_awlen$ENQ =
	     WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_xaction_master_to_slave &&
	     boot_rom_axi4_deburster_rg_w_beat_count == 8'd0 ;
  assign boot_rom_axi4_deburster_f_w_awlen$DEQ =
	     WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_resp_slave_to_master &&
	     !boot_rom_axi4_deburster_rg_b_beat_count_2_ULT__ETC___d54 ;
  assign boot_rom_axi4_deburster_f_w_awlen$CLR =
	     boot_rom_axi4_deburster_rg_reset ;

  // submodule boot_rom_axi4_deburster_xactor_from_master_f_rd_addr
  assign boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$D_IN =
	     { fabric$v_to_slaves_0_arid,
	       fabric$v_to_slaves_0_araddr,
	       fabric$v_to_slaves_0_arlen,
	       fabric$v_to_slaves_0_arsize,
	       fabric$v_to_slaves_0_arburst,
	       fabric$v_to_slaves_0_arlock,
	       fabric$v_to_slaves_0_arcache,
	       fabric$v_to_slaves_0_arprot,
	       fabric$v_to_slaves_0_arqos,
	       fabric$v_to_slaves_0_arregion } ;
  assign boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$ENQ =
	     fabric$v_to_slaves_0_arvalid &&
	     boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$FULL_N ;
  assign boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$DEQ =
	     WILL_FIRE_RL_boot_rom_axi4_deburster_rl_rd_xaction_master_to_slave &&
	     !boot_rom_axi4_deburster_rg_ar_beat_count_6_ULT_ETC___d98 ;
  assign boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$CLR =
	     boot_rom_axi4_deburster_rg_reset ;

  // submodule boot_rom_axi4_deburster_xactor_from_master_f_rd_data
  assign boot_rom_axi4_deburster_xactor_from_master_f_rd_data$D_IN =
	     { boot_rom_axi4_deburster_xactor_to_slave_f_rd_data$D_OUT[70:1],
	       !boot_rom_axi4_deburster_rg_r_beat_count_07_ULT_ETC___d109 } ;
  assign boot_rom_axi4_deburster_xactor_from_master_f_rd_data$ENQ =
	     WILL_FIRE_RL_boot_rom_axi4_deburster_rl_rd_resp_slave_to_master ;
  assign boot_rom_axi4_deburster_xactor_from_master_f_rd_data$DEQ =
	     fabric$v_to_slaves_0_rready &&
	     boot_rom_axi4_deburster_xactor_from_master_f_rd_data$EMPTY_N ;
  assign boot_rom_axi4_deburster_xactor_from_master_f_rd_data$CLR =
	     boot_rom_axi4_deburster_rg_reset ;

  // submodule boot_rom_axi4_deburster_xactor_from_master_f_wr_addr
  assign boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$D_IN =
	     { fabric$v_to_slaves_0_awid,
	       fabric$v_to_slaves_0_awaddr,
	       fabric$v_to_slaves_0_awlen,
	       fabric$v_to_slaves_0_awsize,
	       fabric$v_to_slaves_0_awburst,
	       fabric$v_to_slaves_0_awlock,
	       fabric$v_to_slaves_0_awcache,
	       fabric$v_to_slaves_0_awprot,
	       fabric$v_to_slaves_0_awqos,
	       fabric$v_to_slaves_0_awregion } ;
  assign boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$ENQ =
	     fabric$v_to_slaves_0_awvalid &&
	     boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$FULL_N ;
  assign boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$DEQ =
	     WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_xaction_master_to_slave &&
	     !boot_rom_axi4_deburster_rg_w_beat_count_2_ULT__ETC___d39 ;
  assign boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$CLR =
	     boot_rom_axi4_deburster_rg_reset ;

  // submodule boot_rom_axi4_deburster_xactor_from_master_f_wr_data
  assign boot_rom_axi4_deburster_xactor_from_master_f_wr_data$D_IN =
	     { fabric$v_to_slaves_0_wdata,
	       fabric$v_to_slaves_0_wstrb,
	       fabric$v_to_slaves_0_wlast } ;
  assign boot_rom_axi4_deburster_xactor_from_master_f_wr_data$ENQ =
	     fabric$v_to_slaves_0_wvalid &&
	     boot_rom_axi4_deburster_xactor_from_master_f_wr_data$FULL_N ;
  assign boot_rom_axi4_deburster_xactor_from_master_f_wr_data$DEQ =
	     WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_xaction_master_to_slave ;
  assign boot_rom_axi4_deburster_xactor_from_master_f_wr_data$CLR =
	     boot_rom_axi4_deburster_rg_reset ;

  // submodule boot_rom_axi4_deburster_xactor_from_master_f_wr_resp
  assign boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$D_IN =
	     { boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$D_OUT[5:2],
	       (boot_rom_axi4_deburster_rg_b_resp == 2'b0) ?
		 boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$D_OUT[1:0] :
		 boot_rom_axi4_deburster_rg_b_resp } ;
  assign boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$ENQ =
	     WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_resp_slave_to_master &&
	     !boot_rom_axi4_deburster_rg_b_beat_count_2_ULT__ETC___d54 ;
  assign boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$DEQ =
	     fabric$v_to_slaves_0_bready &&
	     boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$EMPTY_N ;
  assign boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$CLR =
	     boot_rom_axi4_deburster_rg_reset ;

  // submodule boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr
  assign boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$D_IN =
	     { boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[96:93],
	       a_out_araddr__h7217,
	       8'd0,
	       boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[20:18],
	       2'b0,
	       boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[15:0] } ;
  assign boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$ENQ =
	     WILL_FIRE_RL_boot_rom_axi4_deburster_rl_rd_xaction_master_to_slave ;
  assign boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$DEQ =
	     boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$EMPTY_N &&
	     boot_rom$slave_arready ;
  assign boot_rom_axi4_deburster_xactor_to_slave_f_rd_addr$CLR =
	     boot_rom_axi4_deburster_rg_reset ;

  // submodule boot_rom_axi4_deburster_xactor_to_slave_f_rd_data
  assign boot_rom_axi4_deburster_xactor_to_slave_f_rd_data$D_IN =
	     { boot_rom$slave_rid,
	       boot_rom$slave_rdata,
	       boot_rom$slave_rresp,
	       boot_rom$slave_rlast } ;
  assign boot_rom_axi4_deburster_xactor_to_slave_f_rd_data$ENQ =
	     boot_rom$slave_rvalid &&
	     boot_rom_axi4_deburster_xactor_to_slave_f_rd_data$FULL_N ;
  assign boot_rom_axi4_deburster_xactor_to_slave_f_rd_data$DEQ =
	     WILL_FIRE_RL_boot_rom_axi4_deburster_rl_rd_resp_slave_to_master ;
  assign boot_rom_axi4_deburster_xactor_to_slave_f_rd_data$CLR =
	     boot_rom_axi4_deburster_rg_reset ;

  // submodule boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr
  assign boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$D_IN =
	     { boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[96:93],
	       a_out_awaddr__h6234,
	       8'd0,
	       boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[20:18],
	       2'b0,
	       boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[15:0] } ;
  assign boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$ENQ =
	     WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_xaction_master_to_slave ;
  assign boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$DEQ =
	     boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$EMPTY_N &&
	     boot_rom$slave_awready ;
  assign boot_rom_axi4_deburster_xactor_to_slave_f_wr_addr$CLR =
	     boot_rom_axi4_deburster_rg_reset ;

  // submodule boot_rom_axi4_deburster_xactor_to_slave_f_wr_data
  assign boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$D_IN =
	     { boot_rom_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[72:1],
	       1'd1 } ;
  assign boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$ENQ =
	     WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_xaction_master_to_slave ;
  assign boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$DEQ =
	     boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$EMPTY_N &&
	     boot_rom$slave_wready ;
  assign boot_rom_axi4_deburster_xactor_to_slave_f_wr_data$CLR =
	     boot_rom_axi4_deburster_rg_reset ;

  // submodule boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp
  assign boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$D_IN =
	     { boot_rom$slave_bid, boot_rom$slave_bresp } ;
  assign boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$ENQ =
	     boot_rom$slave_bvalid &&
	     boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$FULL_N ;
  assign boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$DEQ =
	     WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_resp_slave_to_master ;
  assign boot_rom_axi4_deburster_xactor_to_slave_f_wr_resp$CLR =
	     boot_rom_axi4_deburster_rg_reset ;

  // submodule core
  assign core$cpu_external_interrupt_req = uart0$intr ? 16'd1 : 16'd0 ;
  assign core$jtag_tclk = sim_jtag$tclk ;
  assign core$jtag_tdi = sim_jtag$tdi ;
  assign core$jtag_tms = sim_jtag$tms ;
  assign core$master0_arready = fabric$v_from_masters_0_arready ;
  assign core$master0_awready = fabric$v_from_masters_0_awready ;
  assign core$master0_bid = fabric$v_from_masters_0_bid ;
  assign core$master0_bresp = fabric$v_from_masters_0_bresp ;
  assign core$master0_bvalid = fabric$v_from_masters_0_bvalid ;
  assign core$master0_rdata = fabric$v_from_masters_0_rdata ;
  assign core$master0_rid = fabric$v_from_masters_0_rid ;
  assign core$master0_rlast = fabric$v_from_masters_0_rlast ;
  assign core$master0_rresp = fabric$v_from_masters_0_rresp ;
  assign core$master0_rvalid = fabric$v_from_masters_0_rvalid ;
  assign core$master0_wready = fabric$v_from_masters_0_wready ;
  assign core$master1_arready = fabric$v_from_masters_1_arready ;
  assign core$master1_awready = fabric$v_from_masters_1_awready ;
  assign core$master1_bid = fabric$v_from_masters_1_bid ;
  assign core$master1_bresp = fabric$v_from_masters_1_bresp ;
  assign core$master1_bvalid = fabric$v_from_masters_1_bvalid ;
  assign core$master1_rdata = fabric$v_from_masters_1_rdata ;
  assign core$master1_rid = fabric$v_from_masters_1_rid ;
  assign core$master1_rlast = fabric$v_from_masters_1_rlast ;
  assign core$master1_rresp = fabric$v_from_masters_1_rresp ;
  assign core$master1_rvalid = fabric$v_from_masters_1_rvalid ;
  assign core$master1_wready = fabric$v_from_masters_1_wready ;
  assign core$tv_verifier_info_tx_tready = tv_xactor_f_data$FULL_N ;

  // submodule cpu_reset
  assign cpu_reset$ASSERT_IN = cpu_initial_reset || rg_state == 2'd2 ;

  // submodule fabric
  assign fabric$set_verbosity_verbosity = 4'h0 ;
  assign fabric$v_from_masters_0_araddr = core$master0_araddr ;
  assign fabric$v_from_masters_0_arburst = core$master0_arburst ;
  assign fabric$v_from_masters_0_arcache = core$master0_arcache ;
  assign fabric$v_from_masters_0_arid = core$master0_arid ;
  assign fabric$v_from_masters_0_arlen = core$master0_arlen ;
  assign fabric$v_from_masters_0_arlock = core$master0_arlock ;
  assign fabric$v_from_masters_0_arprot = core$master0_arprot ;
  assign fabric$v_from_masters_0_arqos = core$master0_arqos ;
  assign fabric$v_from_masters_0_arregion = core$master0_arregion ;
  assign fabric$v_from_masters_0_arsize = core$master0_arsize ;
  assign fabric$v_from_masters_0_arvalid = core$master0_arvalid ;
  assign fabric$v_from_masters_0_awaddr = core$master0_awaddr ;
  assign fabric$v_from_masters_0_awburst = core$master0_awburst ;
  assign fabric$v_from_masters_0_awcache = core$master0_awcache ;
  assign fabric$v_from_masters_0_awid = core$master0_awid ;
  assign fabric$v_from_masters_0_awlen = core$master0_awlen ;
  assign fabric$v_from_masters_0_awlock = core$master0_awlock ;
  assign fabric$v_from_masters_0_awprot = core$master0_awprot ;
  assign fabric$v_from_masters_0_awqos = core$master0_awqos ;
  assign fabric$v_from_masters_0_awregion = core$master0_awregion ;
  assign fabric$v_from_masters_0_awsize = core$master0_awsize ;
  assign fabric$v_from_masters_0_awvalid = core$master0_awvalid ;
  assign fabric$v_from_masters_0_bready = core$master0_bready ;
  assign fabric$v_from_masters_0_rready = core$master0_rready ;
  assign fabric$v_from_masters_0_wdata = core$master0_wdata ;
  assign fabric$v_from_masters_0_wlast = core$master0_wlast ;
  assign fabric$v_from_masters_0_wstrb = core$master0_wstrb ;
  assign fabric$v_from_masters_0_wvalid = core$master0_wvalid ;
  assign fabric$v_from_masters_1_araddr = core$master1_araddr ;
  assign fabric$v_from_masters_1_arburst = core$master1_arburst ;
  assign fabric$v_from_masters_1_arcache = core$master1_arcache ;
  assign fabric$v_from_masters_1_arid = core$master1_arid ;
  assign fabric$v_from_masters_1_arlen = core$master1_arlen ;
  assign fabric$v_from_masters_1_arlock = core$master1_arlock ;
  assign fabric$v_from_masters_1_arprot = core$master1_arprot ;
  assign fabric$v_from_masters_1_arqos = core$master1_arqos ;
  assign fabric$v_from_masters_1_arregion = core$master1_arregion ;
  assign fabric$v_from_masters_1_arsize = core$master1_arsize ;
  assign fabric$v_from_masters_1_arvalid = core$master1_arvalid ;
  assign fabric$v_from_masters_1_awaddr = core$master1_awaddr ;
  assign fabric$v_from_masters_1_awburst = core$master1_awburst ;
  assign fabric$v_from_masters_1_awcache = core$master1_awcache ;
  assign fabric$v_from_masters_1_awid = core$master1_awid ;
  assign fabric$v_from_masters_1_awlen = core$master1_awlen ;
  assign fabric$v_from_masters_1_awlock = core$master1_awlock ;
  assign fabric$v_from_masters_1_awprot = core$master1_awprot ;
  assign fabric$v_from_masters_1_awqos = core$master1_awqos ;
  assign fabric$v_from_masters_1_awregion = core$master1_awregion ;
  assign fabric$v_from_masters_1_awsize = core$master1_awsize ;
  assign fabric$v_from_masters_1_awvalid = core$master1_awvalid ;
  assign fabric$v_from_masters_1_bready = core$master1_bready ;
  assign fabric$v_from_masters_1_rready = core$master1_rready ;
  assign fabric$v_from_masters_1_wdata = core$master1_wdata ;
  assign fabric$v_from_masters_1_wlast = core$master1_wlast ;
  assign fabric$v_from_masters_1_wstrb = core$master1_wstrb ;
  assign fabric$v_from_masters_1_wvalid = core$master1_wvalid ;
  assign fabric$v_to_slaves_0_arready =
	     boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$FULL_N ;
  assign fabric$v_to_slaves_0_awready =
	     boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$FULL_N ;
  assign fabric$v_to_slaves_0_bid =
	     boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$D_OUT[5:2] ;
  assign fabric$v_to_slaves_0_bresp =
	     boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$D_OUT[1:0] ;
  assign fabric$v_to_slaves_0_bvalid =
	     boot_rom_axi4_deburster_xactor_from_master_f_wr_resp$EMPTY_N ;
  assign fabric$v_to_slaves_0_rdata =
	     boot_rom_axi4_deburster_xactor_from_master_f_rd_data$D_OUT[66:3] ;
  assign fabric$v_to_slaves_0_rid =
	     boot_rom_axi4_deburster_xactor_from_master_f_rd_data$D_OUT[70:67] ;
  assign fabric$v_to_slaves_0_rlast =
	     boot_rom_axi4_deburster_xactor_from_master_f_rd_data$D_OUT[0] ;
  assign fabric$v_to_slaves_0_rresp =
	     boot_rom_axi4_deburster_xactor_from_master_f_rd_data$D_OUT[2:1] ;
  assign fabric$v_to_slaves_0_rvalid =
	     boot_rom_axi4_deburster_xactor_from_master_f_rd_data$EMPTY_N ;
  assign fabric$v_to_slaves_0_wready =
	     boot_rom_axi4_deburster_xactor_from_master_f_wr_data$FULL_N ;
  assign fabric$v_to_slaves_1_arready =
	     mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$FULL_N ;
  assign fabric$v_to_slaves_1_awready =
	     mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$FULL_N ;
  assign fabric$v_to_slaves_1_bid =
	     mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$D_OUT[5:2] ;
  assign fabric$v_to_slaves_1_bresp =
	     mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$D_OUT[1:0] ;
  assign fabric$v_to_slaves_1_bvalid =
	     mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$EMPTY_N ;
  assign fabric$v_to_slaves_1_rdata =
	     mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$D_OUT[66:3] ;
  assign fabric$v_to_slaves_1_rid =
	     mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$D_OUT[70:67] ;
  assign fabric$v_to_slaves_1_rlast =
	     mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$D_OUT[0] ;
  assign fabric$v_to_slaves_1_rresp =
	     mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$D_OUT[2:1] ;
  assign fabric$v_to_slaves_1_rvalid =
	     mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$EMPTY_N ;
  assign fabric$v_to_slaves_1_wready =
	     mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$FULL_N ;
  assign fabric$v_to_slaves_2_arready = uart0$slave_arready ;
  assign fabric$v_to_slaves_2_awready = uart0$slave_awready ;
  assign fabric$v_to_slaves_2_bid = uart0$slave_bid ;
  assign fabric$v_to_slaves_2_bresp = uart0$slave_bresp ;
  assign fabric$v_to_slaves_2_bvalid = uart0$slave_bvalid ;
  assign fabric$v_to_slaves_2_rdata = uart0$slave_rdata ;
  assign fabric$v_to_slaves_2_rid = uart0$slave_rid ;
  assign fabric$v_to_slaves_2_rlast = uart0$slave_rlast ;
  assign fabric$v_to_slaves_2_rresp = uart0$slave_rresp ;
  assign fabric$v_to_slaves_2_rvalid = uart0$slave_rvalid ;
  assign fabric$v_to_slaves_2_wready = uart0$slave_wready ;
  assign fabric$v_to_slaves_3_arready =
	     flash_axi4_deburster_xactor_from_master_f_rd_addr$FULL_N ;
  assign fabric$v_to_slaves_3_awready =
	     flash_axi4_deburster_xactor_from_master_f_wr_addr$FULL_N ;
  assign fabric$v_to_slaves_3_bid =
	     flash_axi4_deburster_xactor_from_master_f_wr_resp$D_OUT[5:2] ;
  assign fabric$v_to_slaves_3_bresp =
	     flash_axi4_deburster_xactor_from_master_f_wr_resp$D_OUT[1:0] ;
  assign fabric$v_to_slaves_3_bvalid =
	     flash_axi4_deburster_xactor_from_master_f_wr_resp$EMPTY_N ;
  assign fabric$v_to_slaves_3_rdata =
	     flash_axi4_deburster_xactor_from_master_f_rd_data$D_OUT[66:3] ;
  assign fabric$v_to_slaves_3_rid =
	     flash_axi4_deburster_xactor_from_master_f_rd_data$D_OUT[70:67] ;
  assign fabric$v_to_slaves_3_rlast =
	     flash_axi4_deburster_xactor_from_master_f_rd_data$D_OUT[0] ;
  assign fabric$v_to_slaves_3_rresp =
	     flash_axi4_deburster_xactor_from_master_f_rd_data$D_OUT[2:1] ;
  assign fabric$v_to_slaves_3_rvalid =
	     flash_axi4_deburster_xactor_from_master_f_rd_data$EMPTY_N ;
  assign fabric$v_to_slaves_3_wready =
	     flash_axi4_deburster_xactor_from_master_f_wr_data$FULL_N ;
  assign fabric$v_to_slaves_4_arready = gpio$slave_arready ;
  assign fabric$v_to_slaves_4_awready = gpio$slave_awready ;
  assign fabric$v_to_slaves_4_bid = gpio$slave_bid ;
  assign fabric$v_to_slaves_4_bresp = gpio$slave_bresp ;
  assign fabric$v_to_slaves_4_bvalid = gpio$slave_bvalid ;
  assign fabric$v_to_slaves_4_rdata = gpio$slave_rdata ;
  assign fabric$v_to_slaves_4_rid = gpio$slave_rid ;
  assign fabric$v_to_slaves_4_rlast = gpio$slave_rlast ;
  assign fabric$v_to_slaves_4_rresp = gpio$slave_rresp ;
  assign fabric$v_to_slaves_4_rvalid = gpio$slave_rvalid ;
  assign fabric$v_to_slaves_4_wready = gpio$slave_wready ;
  assign fabric$EN_reset = WILL_FIRE_RL_rl_reset_start_2 ;
  assign fabric$EN_set_verbosity = 1'b0 ;

  // submodule flash
  assign flash$set_addr_map_addr_base = soc_map$m_flash_mem_addr_base ;
  assign flash$set_addr_map_addr_lim = soc_map$m_flash_mem_addr_lim ;
  assign flash$slave_araddr =
	     flash_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[92:29] ;
  assign flash$slave_arburst =
	     flash_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[17:16] ;
  assign flash$slave_arcache =
	     flash_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[14:11] ;
  assign flash$slave_arid =
	     flash_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[96:93] ;
  assign flash$slave_arlen =
	     flash_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[28:21] ;
  assign flash$slave_arlock =
	     flash_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[15] ;
  assign flash$slave_arprot =
	     flash_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[10:8] ;
  assign flash$slave_arqos =
	     flash_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[7:4] ;
  assign flash$slave_arregion =
	     flash_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[3:0] ;
  assign flash$slave_arsize =
	     flash_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[20:18] ;
  assign flash$slave_arvalid =
	     flash_axi4_deburster_xactor_to_slave_f_rd_addr$EMPTY_N ;
  assign flash$slave_awaddr =
	     flash_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[92:29] ;
  assign flash$slave_awburst =
	     flash_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[17:16] ;
  assign flash$slave_awcache =
	     flash_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[14:11] ;
  assign flash$slave_awid =
	     flash_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[96:93] ;
  assign flash$slave_awlen =
	     flash_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[28:21] ;
  assign flash$slave_awlock =
	     flash_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[15] ;
  assign flash$slave_awprot =
	     flash_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[10:8] ;
  assign flash$slave_awqos =
	     flash_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[7:4] ;
  assign flash$slave_awregion =
	     flash_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[3:0] ;
  assign flash$slave_awsize =
	     flash_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[20:18] ;
  assign flash$slave_awvalid =
	     flash_axi4_deburster_xactor_to_slave_f_wr_addr$EMPTY_N ;
  assign flash$slave_bready =
	     flash_axi4_deburster_xactor_to_slave_f_wr_resp$FULL_N ;
  assign flash$slave_rready =
	     flash_axi4_deburster_xactor_to_slave_f_rd_data$FULL_N ;
  assign flash$slave_wdata =
	     flash_axi4_deburster_xactor_to_slave_f_wr_data$D_OUT[72:9] ;
  assign flash$slave_wlast =
	     flash_axi4_deburster_xactor_to_slave_f_wr_data$D_OUT[0] ;
  assign flash$slave_wstrb =
	     flash_axi4_deburster_xactor_to_slave_f_wr_data$D_OUT[8:1] ;
  assign flash$slave_wvalid =
	     flash_axi4_deburster_xactor_to_slave_f_wr_data$EMPTY_N ;
  assign flash$EN_set_addr_map = WILL_FIRE_RL_rl_reset_complete ;

  // submodule flash_axi4_deburster_f_r_arlen
  assign flash_axi4_deburster_f_r_arlen$D_IN =
	     flash_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[28:21] ;
  assign flash_axi4_deburster_f_r_arlen$ENQ =
	     WILL_FIRE_RL_flash_axi4_deburster_rl_rd_xaction_master_to_slave &&
	     flash_axi4_deburster_rg_ar_beat_count == 8'd0 ;
  assign flash_axi4_deburster_f_r_arlen$DEQ =
	     WILL_FIRE_RL_flash_axi4_deburster_rl_rd_resp_slave_to_master &&
	     !flash_axi4_deburster_rg_r_beat_count_18_ULT_fl_ETC___d220 ;
  assign flash_axi4_deburster_f_r_arlen$CLR = flash_axi4_deburster_rg_reset ;

  // submodule flash_axi4_deburster_f_w_awlen
  assign flash_axi4_deburster_f_w_awlen$D_IN =
	     flash_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[28:21] ;
  assign flash_axi4_deburster_f_w_awlen$ENQ =
	     WILL_FIRE_RL_flash_axi4_deburster_rl_wr_xaction_master_to_slave &&
	     flash_axi4_deburster_rg_w_beat_count == 8'd0 ;
  assign flash_axi4_deburster_f_w_awlen$DEQ =
	     WILL_FIRE_RL_flash_axi4_deburster_rl_wr_resp_slave_to_master &&
	     !flash_axi4_deburster_rg_b_beat_count_63_ULT_fl_ETC___d165 ;
  assign flash_axi4_deburster_f_w_awlen$CLR = flash_axi4_deburster_rg_reset ;

  // submodule flash_axi4_deburster_xactor_from_master_f_rd_addr
  assign flash_axi4_deburster_xactor_from_master_f_rd_addr$D_IN =
	     { fabric$v_to_slaves_3_arid,
	       fabric$v_to_slaves_3_araddr,
	       fabric$v_to_slaves_3_arlen,
	       fabric$v_to_slaves_3_arsize,
	       fabric$v_to_slaves_3_arburst,
	       fabric$v_to_slaves_3_arlock,
	       fabric$v_to_slaves_3_arcache,
	       fabric$v_to_slaves_3_arprot,
	       fabric$v_to_slaves_3_arqos,
	       fabric$v_to_slaves_3_arregion } ;
  assign flash_axi4_deburster_xactor_from_master_f_rd_addr$ENQ =
	     fabric$v_to_slaves_3_arvalid &&
	     flash_axi4_deburster_xactor_from_master_f_rd_addr$FULL_N ;
  assign flash_axi4_deburster_xactor_from_master_f_rd_addr$DEQ =
	     WILL_FIRE_RL_flash_axi4_deburster_rl_rd_xaction_master_to_slave &&
	     !flash_axi4_deburster_rg_ar_beat_count_87_ULT_f_ETC___d209 ;
  assign flash_axi4_deburster_xactor_from_master_f_rd_addr$CLR =
	     flash_axi4_deburster_rg_reset ;

  // submodule flash_axi4_deburster_xactor_from_master_f_rd_data
  assign flash_axi4_deburster_xactor_from_master_f_rd_data$D_IN =
	     { flash_axi4_deburster_xactor_to_slave_f_rd_data$D_OUT[70:1],
	       !flash_axi4_deburster_rg_r_beat_count_18_ULT_fl_ETC___d220 } ;
  assign flash_axi4_deburster_xactor_from_master_f_rd_data$ENQ =
	     WILL_FIRE_RL_flash_axi4_deburster_rl_rd_resp_slave_to_master ;
  assign flash_axi4_deburster_xactor_from_master_f_rd_data$DEQ =
	     fabric$v_to_slaves_3_rready &&
	     flash_axi4_deburster_xactor_from_master_f_rd_data$EMPTY_N ;
  assign flash_axi4_deburster_xactor_from_master_f_rd_data$CLR =
	     flash_axi4_deburster_rg_reset ;

  // submodule flash_axi4_deburster_xactor_from_master_f_wr_addr
  assign flash_axi4_deburster_xactor_from_master_f_wr_addr$D_IN =
	     { fabric$v_to_slaves_3_awid,
	       fabric$v_to_slaves_3_awaddr,
	       fabric$v_to_slaves_3_awlen,
	       fabric$v_to_slaves_3_awsize,
	       fabric$v_to_slaves_3_awburst,
	       fabric$v_to_slaves_3_awlock,
	       fabric$v_to_slaves_3_awcache,
	       fabric$v_to_slaves_3_awprot,
	       fabric$v_to_slaves_3_awqos,
	       fabric$v_to_slaves_3_awregion } ;
  assign flash_axi4_deburster_xactor_from_master_f_wr_addr$ENQ =
	     fabric$v_to_slaves_3_awvalid &&
	     flash_axi4_deburster_xactor_from_master_f_wr_addr$FULL_N ;
  assign flash_axi4_deburster_xactor_from_master_f_wr_addr$DEQ =
	     WILL_FIRE_RL_flash_axi4_deburster_rl_wr_xaction_master_to_slave &&
	     !flash_axi4_deburster_rg_w_beat_count_23_ULT_fl_ETC___d150 ;
  assign flash_axi4_deburster_xactor_from_master_f_wr_addr$CLR =
	     flash_axi4_deburster_rg_reset ;

  // submodule flash_axi4_deburster_xactor_from_master_f_wr_data
  assign flash_axi4_deburster_xactor_from_master_f_wr_data$D_IN =
	     { fabric$v_to_slaves_3_wdata,
	       fabric$v_to_slaves_3_wstrb,
	       fabric$v_to_slaves_3_wlast } ;
  assign flash_axi4_deburster_xactor_from_master_f_wr_data$ENQ =
	     fabric$v_to_slaves_3_wvalid &&
	     flash_axi4_deburster_xactor_from_master_f_wr_data$FULL_N ;
  assign flash_axi4_deburster_xactor_from_master_f_wr_data$DEQ =
	     WILL_FIRE_RL_flash_axi4_deburster_rl_wr_xaction_master_to_slave ;
  assign flash_axi4_deburster_xactor_from_master_f_wr_data$CLR =
	     flash_axi4_deburster_rg_reset ;

  // submodule flash_axi4_deburster_xactor_from_master_f_wr_resp
  assign flash_axi4_deburster_xactor_from_master_f_wr_resp$D_IN =
	     { flash_axi4_deburster_xactor_to_slave_f_wr_resp$D_OUT[5:2],
	       (flash_axi4_deburster_rg_b_resp == 2'b0) ?
		 flash_axi4_deburster_xactor_to_slave_f_wr_resp$D_OUT[1:0] :
		 flash_axi4_deburster_rg_b_resp } ;
  assign flash_axi4_deburster_xactor_from_master_f_wr_resp$ENQ =
	     WILL_FIRE_RL_flash_axi4_deburster_rl_wr_resp_slave_to_master &&
	     !flash_axi4_deburster_rg_b_beat_count_63_ULT_fl_ETC___d165 ;
  assign flash_axi4_deburster_xactor_from_master_f_wr_resp$DEQ =
	     fabric$v_to_slaves_3_bready &&
	     flash_axi4_deburster_xactor_from_master_f_wr_resp$EMPTY_N ;
  assign flash_axi4_deburster_xactor_from_master_f_wr_resp$CLR =
	     flash_axi4_deburster_rg_reset ;

  // submodule flash_axi4_deburster_xactor_to_slave_f_rd_addr
  assign flash_axi4_deburster_xactor_to_slave_f_rd_addr$D_IN =
	     { flash_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[96:93],
	       a_out_araddr__h11117,
	       8'd0,
	       flash_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[20:18],
	       2'b0,
	       flash_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[15:0] } ;
  assign flash_axi4_deburster_xactor_to_slave_f_rd_addr$ENQ =
	     WILL_FIRE_RL_flash_axi4_deburster_rl_rd_xaction_master_to_slave ;
  assign flash_axi4_deburster_xactor_to_slave_f_rd_addr$DEQ =
	     flash_axi4_deburster_xactor_to_slave_f_rd_addr$EMPTY_N &&
	     flash$slave_arready ;
  assign flash_axi4_deburster_xactor_to_slave_f_rd_addr$CLR =
	     flash_axi4_deburster_rg_reset ;

  // submodule flash_axi4_deburster_xactor_to_slave_f_rd_data
  assign flash_axi4_deburster_xactor_to_slave_f_rd_data$D_IN =
	     { flash$slave_rid,
	       flash$slave_rdata,
	       flash$slave_rresp,
	       flash$slave_rlast } ;
  assign flash_axi4_deburster_xactor_to_slave_f_rd_data$ENQ =
	     flash$slave_rvalid &&
	     flash_axi4_deburster_xactor_to_slave_f_rd_data$FULL_N ;
  assign flash_axi4_deburster_xactor_to_slave_f_rd_data$DEQ =
	     WILL_FIRE_RL_flash_axi4_deburster_rl_rd_resp_slave_to_master ;
  assign flash_axi4_deburster_xactor_to_slave_f_rd_data$CLR =
	     flash_axi4_deburster_rg_reset ;

  // submodule flash_axi4_deburster_xactor_to_slave_f_wr_addr
  assign flash_axi4_deburster_xactor_to_slave_f_wr_addr$D_IN =
	     { flash_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[96:93],
	       a_out_awaddr__h10134,
	       8'd0,
	       flash_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[20:18],
	       2'b0,
	       flash_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[15:0] } ;
  assign flash_axi4_deburster_xactor_to_slave_f_wr_addr$ENQ =
	     WILL_FIRE_RL_flash_axi4_deburster_rl_wr_xaction_master_to_slave ;
  assign flash_axi4_deburster_xactor_to_slave_f_wr_addr$DEQ =
	     flash_axi4_deburster_xactor_to_slave_f_wr_addr$EMPTY_N &&
	     flash$slave_awready ;
  assign flash_axi4_deburster_xactor_to_slave_f_wr_addr$CLR =
	     flash_axi4_deburster_rg_reset ;

  // submodule flash_axi4_deburster_xactor_to_slave_f_wr_data
  assign flash_axi4_deburster_xactor_to_slave_f_wr_data$D_IN =
	     { flash_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[72:1],
	       1'd1 } ;
  assign flash_axi4_deburster_xactor_to_slave_f_wr_data$ENQ =
	     WILL_FIRE_RL_flash_axi4_deburster_rl_wr_xaction_master_to_slave ;
  assign flash_axi4_deburster_xactor_to_slave_f_wr_data$DEQ =
	     flash_axi4_deburster_xactor_to_slave_f_wr_data$EMPTY_N &&
	     flash$slave_wready ;
  assign flash_axi4_deburster_xactor_to_slave_f_wr_data$CLR =
	     flash_axi4_deburster_rg_reset ;

  // submodule flash_axi4_deburster_xactor_to_slave_f_wr_resp
  assign flash_axi4_deburster_xactor_to_slave_f_wr_resp$D_IN =
	     { flash$slave_bid, flash$slave_bresp } ;
  assign flash_axi4_deburster_xactor_to_slave_f_wr_resp$ENQ =
	     flash$slave_bvalid &&
	     flash_axi4_deburster_xactor_to_slave_f_wr_resp$FULL_N ;
  assign flash_axi4_deburster_xactor_to_slave_f_wr_resp$DEQ =
	     WILL_FIRE_RL_flash_axi4_deburster_rl_wr_resp_slave_to_master ;
  assign flash_axi4_deburster_xactor_to_slave_f_wr_resp$CLR =
	     flash_axi4_deburster_rg_reset ;

  // submodule gpio
  assign gpio$set_addr_map_addr_base = soc_map$m_gpio_0_addr_base ;
  assign gpio$set_addr_map_addr_lim = soc_map$m_gpio_0_addr_lim ;
  assign gpio$slave_araddr = fabric$v_to_slaves_4_araddr ;
  assign gpio$slave_arburst = fabric$v_to_slaves_4_arburst ;
  assign gpio$slave_arcache = fabric$v_to_slaves_4_arcache ;
  assign gpio$slave_arid = fabric$v_to_slaves_4_arid ;
  assign gpio$slave_arlen = fabric$v_to_slaves_4_arlen ;
  assign gpio$slave_arlock = fabric$v_to_slaves_4_arlock ;
  assign gpio$slave_arprot = fabric$v_to_slaves_4_arprot ;
  assign gpio$slave_arqos = fabric$v_to_slaves_4_arqos ;
  assign gpio$slave_arregion = fabric$v_to_slaves_4_arregion ;
  assign gpio$slave_arsize = fabric$v_to_slaves_4_arsize ;
  assign gpio$slave_arvalid = fabric$v_to_slaves_4_arvalid ;
  assign gpio$slave_awaddr = fabric$v_to_slaves_4_awaddr ;
  assign gpio$slave_awburst = fabric$v_to_slaves_4_awburst ;
  assign gpio$slave_awcache = fabric$v_to_slaves_4_awcache ;
  assign gpio$slave_awid = fabric$v_to_slaves_4_awid ;
  assign gpio$slave_awlen = fabric$v_to_slaves_4_awlen ;
  assign gpio$slave_awlock = fabric$v_to_slaves_4_awlock ;
  assign gpio$slave_awprot = fabric$v_to_slaves_4_awprot ;
  assign gpio$slave_awqos = fabric$v_to_slaves_4_awqos ;
  assign gpio$slave_awregion = fabric$v_to_slaves_4_awregion ;
  assign gpio$slave_awsize = fabric$v_to_slaves_4_awsize ;
  assign gpio$slave_awvalid = fabric$v_to_slaves_4_awvalid ;
  assign gpio$slave_bready = fabric$v_to_slaves_4_bready ;
  assign gpio$slave_rready = fabric$v_to_slaves_4_rready ;
  assign gpio$slave_wdata = fabric$v_to_slaves_4_wdata ;
  assign gpio$slave_wlast = fabric$v_to_slaves_4_wlast ;
  assign gpio$slave_wstrb = fabric$v_to_slaves_4_wstrb ;
  assign gpio$slave_wvalid = fabric$v_to_slaves_4_wvalid ;
  assign gpio$EN_set_addr_map = WILL_FIRE_RL_rl_reset_complete ;

  // submodule mem0_controller
  assign mem0_controller$set_addr_map_addr_base =
	     soc_map$m_ddr4_0_uncached_addr_base ;
  assign mem0_controller$set_addr_map_addr_lim =
	     soc_map$m_ddr4_0_cached_addr_lim ;
  assign mem0_controller$set_watch_tohost_tohost_addr =
	     set_watch_tohost_tohost_addr ;
  assign mem0_controller$set_watch_tohost_watch_tohost =
	     set_watch_tohost_watch_tohost ;
  assign mem0_controller$slave_araddr =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[92:29] ;
  assign mem0_controller$slave_arburst =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[17:16] ;
  assign mem0_controller$slave_arcache =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[14:11] ;
  assign mem0_controller$slave_arid =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[96:93] ;
  assign mem0_controller$slave_arlen =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[28:21] ;
  assign mem0_controller$slave_arlock =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[15] ;
  assign mem0_controller$slave_arprot =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[10:8] ;
  assign mem0_controller$slave_arqos =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[7:4] ;
  assign mem0_controller$slave_arregion =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[3:0] ;
  assign mem0_controller$slave_arsize =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$D_OUT[20:18] ;
  assign mem0_controller$slave_arvalid =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$EMPTY_N ;
  assign mem0_controller$slave_awaddr =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[92:29] ;
  assign mem0_controller$slave_awburst =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[17:16] ;
  assign mem0_controller$slave_awcache =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[14:11] ;
  assign mem0_controller$slave_awid =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[96:93] ;
  assign mem0_controller$slave_awlen =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[28:21] ;
  assign mem0_controller$slave_awlock =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[15] ;
  assign mem0_controller$slave_awprot =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[10:8] ;
  assign mem0_controller$slave_awqos =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[7:4] ;
  assign mem0_controller$slave_awregion =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[3:0] ;
  assign mem0_controller$slave_awsize =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$D_OUT[20:18] ;
  assign mem0_controller$slave_awvalid =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$EMPTY_N ;
  assign mem0_controller$slave_bready =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$FULL_N ;
  assign mem0_controller$slave_rready =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data$FULL_N ;
  assign mem0_controller$slave_wdata =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$D_OUT[72:9] ;
  assign mem0_controller$slave_wlast =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$D_OUT[0] ;
  assign mem0_controller$slave_wstrb =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$D_OUT[8:1] ;
  assign mem0_controller$slave_wvalid =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$EMPTY_N ;
  assign mem0_controller$to_raw_mem_response_put = to_raw_mem_response_put ;
  assign mem0_controller$EN_server_reset_request_put =
	     WILL_FIRE_RL_rl_reset_start_2 ;
  assign mem0_controller$EN_server_reset_response_get =
	     WILL_FIRE_RL_rl_reset_complete ;
  assign mem0_controller$EN_set_addr_map = WILL_FIRE_RL_rl_reset_complete ;
  assign mem0_controller$EN_to_raw_mem_request_get =
	     EN_to_raw_mem_request_get ;
  assign mem0_controller$EN_to_raw_mem_response_put =
	     EN_to_raw_mem_response_put ;
  assign mem0_controller$EN_set_watch_tohost = EN_set_watch_tohost ;

  // submodule mem0_controller_axi4_deburster_f_r_arlen
  assign mem0_controller_axi4_deburster_f_r_arlen$D_IN =
	     mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[28:21] ;
  assign mem0_controller_axi4_deburster_f_r_arlen$ENQ =
	     WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_rd_xaction_master_to_slave &&
	     mem0_controller_axi4_deburster_rg_ar_beat_count == 8'd0 ;
  assign mem0_controller_axi4_deburster_f_r_arlen$DEQ =
	     WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_rd_resp_slave_to_master &&
	     !mem0_controller_axi4_deburster_rg_r_beat_count_ETC___d331 ;
  assign mem0_controller_axi4_deburster_f_r_arlen$CLR =
	     mem0_controller_axi4_deburster_rg_reset ;

  // submodule mem0_controller_axi4_deburster_f_w_awlen
  assign mem0_controller_axi4_deburster_f_w_awlen$D_IN =
	     mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[28:21] ;
  assign mem0_controller_axi4_deburster_f_w_awlen$ENQ =
	     WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_xaction_master_to_slave &&
	     mem0_controller_axi4_deburster_rg_w_beat_count == 8'd0 ;
  assign mem0_controller_axi4_deburster_f_w_awlen$DEQ =
	     WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_resp_slave_to_master &&
	     !mem0_controller_axi4_deburster_rg_b_beat_count_ETC___d276 ;
  assign mem0_controller_axi4_deburster_f_w_awlen$CLR =
	     mem0_controller_axi4_deburster_rg_reset ;

  // submodule mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr
  assign mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$D_IN =
	     { fabric$v_to_slaves_1_arid,
	       fabric$v_to_slaves_1_araddr,
	       fabric$v_to_slaves_1_arlen,
	       fabric$v_to_slaves_1_arsize,
	       fabric$v_to_slaves_1_arburst,
	       fabric$v_to_slaves_1_arlock,
	       fabric$v_to_slaves_1_arcache,
	       fabric$v_to_slaves_1_arprot,
	       fabric$v_to_slaves_1_arqos,
	       fabric$v_to_slaves_1_arregion } ;
  assign mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$ENQ =
	     fabric$v_to_slaves_1_arvalid &&
	     mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$FULL_N ;
  assign mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$DEQ =
	     WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_rd_xaction_master_to_slave &&
	     !mem0_controller_axi4_deburster_rg_ar_beat_coun_ETC___d320 ;
  assign mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$CLR =
	     mem0_controller_axi4_deburster_rg_reset ;

  // submodule mem0_controller_axi4_deburster_xactor_from_master_f_rd_data
  assign mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$D_IN =
	     { mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data$D_OUT[70:1],
	       !mem0_controller_axi4_deburster_rg_r_beat_count_ETC___d331 } ;
  assign mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$ENQ =
	     WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_rd_resp_slave_to_master ;
  assign mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$DEQ =
	     fabric$v_to_slaves_1_rready &&
	     mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$EMPTY_N ;
  assign mem0_controller_axi4_deburster_xactor_from_master_f_rd_data$CLR =
	     mem0_controller_axi4_deburster_rg_reset ;

  // submodule mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr
  assign mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$D_IN =
	     { fabric$v_to_slaves_1_awid,
	       fabric$v_to_slaves_1_awaddr,
	       fabric$v_to_slaves_1_awlen,
	       fabric$v_to_slaves_1_awsize,
	       fabric$v_to_slaves_1_awburst,
	       fabric$v_to_slaves_1_awlock,
	       fabric$v_to_slaves_1_awcache,
	       fabric$v_to_slaves_1_awprot,
	       fabric$v_to_slaves_1_awqos,
	       fabric$v_to_slaves_1_awregion } ;
  assign mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$ENQ =
	     fabric$v_to_slaves_1_awvalid &&
	     mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$FULL_N ;
  assign mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$DEQ =
	     WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_xaction_master_to_slave &&
	     !mem0_controller_axi4_deburster_rg_w_beat_count_ETC___d261 ;
  assign mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$CLR =
	     mem0_controller_axi4_deburster_rg_reset ;

  // submodule mem0_controller_axi4_deburster_xactor_from_master_f_wr_data
  assign mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$D_IN =
	     { fabric$v_to_slaves_1_wdata,
	       fabric$v_to_slaves_1_wstrb,
	       fabric$v_to_slaves_1_wlast } ;
  assign mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$ENQ =
	     fabric$v_to_slaves_1_wvalid &&
	     mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$FULL_N ;
  assign mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$DEQ =
	     WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_xaction_master_to_slave ;
  assign mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$CLR =
	     mem0_controller_axi4_deburster_rg_reset ;

  // submodule mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp
  assign mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$D_IN =
	     { mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$D_OUT[5:2],
	       (mem0_controller_axi4_deburster_rg_b_resp == 2'b0) ?
		 mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$D_OUT[1:0] :
		 mem0_controller_axi4_deburster_rg_b_resp } ;
  assign mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$ENQ =
	     WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_resp_slave_to_master &&
	     !mem0_controller_axi4_deburster_rg_b_beat_count_ETC___d276 ;
  assign mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$DEQ =
	     fabric$v_to_slaves_1_bready &&
	     mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$EMPTY_N ;
  assign mem0_controller_axi4_deburster_xactor_from_master_f_wr_resp$CLR =
	     mem0_controller_axi4_deburster_rg_reset ;

  // submodule mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr
  assign mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$D_IN =
	     { mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[96:93],
	       a_out_araddr__h15456,
	       8'd0,
	       mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[20:18],
	       2'b0,
	       mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[15:0] } ;
  assign mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$ENQ =
	     WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_rd_xaction_master_to_slave ;
  assign mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$DEQ =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$EMPTY_N &&
	     mem0_controller$slave_arready ;
  assign mem0_controller_axi4_deburster_xactor_to_slave_f_rd_addr$CLR =
	     mem0_controller_axi4_deburster_rg_reset ;

  // submodule mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data
  assign mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data$D_IN =
	     { mem0_controller$slave_rid,
	       mem0_controller$slave_rdata,
	       mem0_controller$slave_rresp,
	       mem0_controller$slave_rlast } ;
  assign mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data$ENQ =
	     mem0_controller$slave_rvalid &&
	     mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data$FULL_N ;
  assign mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data$DEQ =
	     WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_rd_resp_slave_to_master ;
  assign mem0_controller_axi4_deburster_xactor_to_slave_f_rd_data$CLR =
	     mem0_controller_axi4_deburster_rg_reset ;

  // submodule mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr
  assign mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$D_IN =
	     { mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[96:93],
	       a_out_awaddr__h14473,
	       8'd0,
	       mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[20:18],
	       2'b0,
	       mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[15:0] } ;
  assign mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$ENQ =
	     WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_xaction_master_to_slave ;
  assign mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$DEQ =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$EMPTY_N &&
	     mem0_controller$slave_awready ;
  assign mem0_controller_axi4_deburster_xactor_to_slave_f_wr_addr$CLR =
	     mem0_controller_axi4_deburster_rg_reset ;

  // submodule mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data
  assign mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$D_IN =
	     { mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[72:1],
	       1'd1 } ;
  assign mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$ENQ =
	     WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_xaction_master_to_slave ;
  assign mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$DEQ =
	     mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$EMPTY_N &&
	     mem0_controller$slave_wready ;
  assign mem0_controller_axi4_deburster_xactor_to_slave_f_wr_data$CLR =
	     mem0_controller_axi4_deburster_rg_reset ;

  // submodule mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp
  assign mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$D_IN =
	     { mem0_controller$slave_bid, mem0_controller$slave_bresp } ;
  assign mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$ENQ =
	     mem0_controller$slave_bvalid &&
	     mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$FULL_N ;
  assign mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$DEQ =
	     WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_resp_slave_to_master ;
  assign mem0_controller_axi4_deburster_xactor_to_slave_f_wr_resp$CLR =
	     mem0_controller_axi4_deburster_rg_reset ;

  // submodule sim_jtag
  assign sim_jtag$tdo = core$jtag_tdo ;

  // submodule soc_map
  assign soc_map$m_is_IO_addr_addr = 64'h0 ;
  assign soc_map$m_is_mem_addr_addr = 64'h0 ;
  assign soc_map$m_is_near_mem_IO_addr_addr = 64'h0 ;

  // submodule tv_xactor_f_data
  assign tv_xactor_f_data$D_IN =
	     { core$tv_verifier_info_tx_tdata,
	       core$tv_verifier_info_tx_tstrb,
	       core$tv_verifier_info_tx_tkeep,
	       core$tv_verifier_info_tx_tlast } ;
  assign tv_xactor_f_data$ENQ =
	     core$tv_verifier_info_tx_tvalid && tv_xactor_f_data$FULL_N ;
  assign tv_xactor_f_data$DEQ = EN_tv_verifier_info_get_get ;
  assign tv_xactor_f_data$CLR = WILL_FIRE_RL_rl_reset_start_2 ;

  // submodule uart0
  assign uart0$put_from_console_put = put_from_console_put ;
  assign uart0$set_addr_map_addr_base = soc_map$m_uart16550_0_addr_base ;
  assign uart0$set_addr_map_addr_lim = soc_map$m_uart16550_0_addr_lim ;
  assign uart0$slave_araddr = fabric$v_to_slaves_2_araddr ;
  assign uart0$slave_arburst = fabric$v_to_slaves_2_arburst ;
  assign uart0$slave_arcache = fabric$v_to_slaves_2_arcache ;
  assign uart0$slave_arid = fabric$v_to_slaves_2_arid ;
  assign uart0$slave_arlen = fabric$v_to_slaves_2_arlen ;
  assign uart0$slave_arlock = fabric$v_to_slaves_2_arlock ;
  assign uart0$slave_arprot = fabric$v_to_slaves_2_arprot ;
  assign uart0$slave_arqos = fabric$v_to_slaves_2_arqos ;
  assign uart0$slave_arregion = fabric$v_to_slaves_2_arregion ;
  assign uart0$slave_arsize = fabric$v_to_slaves_2_arsize ;
  assign uart0$slave_arvalid = fabric$v_to_slaves_2_arvalid ;
  assign uart0$slave_awaddr = fabric$v_to_slaves_2_awaddr ;
  assign uart0$slave_awburst = fabric$v_to_slaves_2_awburst ;
  assign uart0$slave_awcache = fabric$v_to_slaves_2_awcache ;
  assign uart0$slave_awid = fabric$v_to_slaves_2_awid ;
  assign uart0$slave_awlen = fabric$v_to_slaves_2_awlen ;
  assign uart0$slave_awlock = fabric$v_to_slaves_2_awlock ;
  assign uart0$slave_awprot = fabric$v_to_slaves_2_awprot ;
  assign uart0$slave_awqos = fabric$v_to_slaves_2_awqos ;
  assign uart0$slave_awregion = fabric$v_to_slaves_2_awregion ;
  assign uart0$slave_awsize = fabric$v_to_slaves_2_awsize ;
  assign uart0$slave_awvalid = fabric$v_to_slaves_2_awvalid ;
  assign uart0$slave_bready = fabric$v_to_slaves_2_bready ;
  assign uart0$slave_rready = fabric$v_to_slaves_2_rready ;
  assign uart0$slave_wdata = fabric$v_to_slaves_2_wdata ;
  assign uart0$slave_wlast = fabric$v_to_slaves_2_wlast ;
  assign uart0$slave_wstrb = fabric$v_to_slaves_2_wstrb ;
  assign uart0$slave_wvalid = fabric$v_to_slaves_2_wvalid ;
  assign uart0$EN_server_reset_request_put = WILL_FIRE_RL_rl_reset_start_2 ;
  assign uart0$EN_server_reset_response_get = WILL_FIRE_RL_rl_reset_complete ;
  assign uart0$EN_set_addr_map = WILL_FIRE_RL_rl_reset_complete ;
  assign uart0$EN_get_to_console_get = EN_get_to_console_get ;
  assign uart0$EN_put_from_console_put = EN_put_from_console_put ;

  // remaining internal signals
  assign a_out_araddr__h11117 =
	     (flash_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[17:16] ==
	      2'b01) ?
	       addr___1__h11202 :
	       flash_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[92:29] ;
  assign a_out_araddr__h15456 =
	     (mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[17:16] ==
	      2'b01) ?
	       addr___1__h15541 :
	       mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[92:29] ;
  assign a_out_araddr__h7217 =
	     (boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[17:16] ==
	      2'b01) ?
	       addr___1__h7302 :
	       boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[92:29] ;
  assign a_out_awaddr__h10134 =
	     (flash_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[17:16] ==
	      2'b01) ?
	       addr___1__h10219 :
	       flash_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[92:29] ;
  assign a_out_awaddr__h14473 =
	     (mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[17:16] ==
	      2'b01) ?
	       addr___1__h14558 :
	       mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[92:29] ;
  assign a_out_awaddr__h6234 =
	     (boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[17:16] ==
	      2'b01) ?
	       addr___1__h6319 :
	       boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[92:29] ;
  assign addr___1__h10219 =
	     flash_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[92:29] +
	     ({ 56'd0, flash_axi4_deburster_rg_w_beat_count } <<
	      flash_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[20:18]) ;
  assign addr___1__h11202 =
	     flash_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[92:29] +
	     ({ 56'd0, flash_axi4_deburster_rg_ar_beat_count } <<
	      flash_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[20:18]) ;
  assign addr___1__h14558 =
	     mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[92:29] +
	     ({ 56'd0, mem0_controller_axi4_deburster_rg_w_beat_count } <<
	      mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[20:18]) ;
  assign addr___1__h15541 =
	     mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[92:29] +
	     ({ 56'd0, mem0_controller_axi4_deburster_rg_ar_beat_count } <<
	      mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[20:18]) ;
  assign addr___1__h6319 =
	     boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[92:29] +
	     ({ 56'd0, boot_rom_axi4_deburster_rg_w_beat_count } <<
	      boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[20:18]) ;
  assign addr___1__h7302 =
	     boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[92:29] +
	     ({ 56'd0, boot_rom_axi4_deburster_rg_ar_beat_count } <<
	      boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[20:18]) ;
  assign boot_rom_axi4_deburster_rg_ar_beat_count_6_ULT_ETC___d98 =
	     boot_rom_axi4_deburster_rg_ar_beat_count <
	     boot_rom_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[28:21] ;
  assign boot_rom_axi4_deburster_rg_b_beat_count_2_ULT__ETC___d54 =
	     boot_rom_axi4_deburster_rg_b_beat_count <
	     boot_rom_axi4_deburster_f_w_awlen$D_OUT ;
  assign boot_rom_axi4_deburster_rg_r_beat_count_07_ULT_ETC___d109 =
	     boot_rom_axi4_deburster_rg_r_beat_count <
	     boot_rom_axi4_deburster_f_r_arlen$D_OUT ;
  assign boot_rom_axi4_deburster_rg_w_beat_count_2_ULT__ETC___d39 =
	     boot_rom_axi4_deburster_rg_w_beat_count <
	     boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[28:21] ;
  assign flash_axi4_deburster_rg_ar_beat_count_87_ULT_f_ETC___d209 =
	     flash_axi4_deburster_rg_ar_beat_count <
	     flash_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[28:21] ;
  assign flash_axi4_deburster_rg_b_beat_count_63_ULT_fl_ETC___d165 =
	     flash_axi4_deburster_rg_b_beat_count <
	     flash_axi4_deburster_f_w_awlen$D_OUT ;
  assign flash_axi4_deburster_rg_r_beat_count_18_ULT_fl_ETC___d220 =
	     flash_axi4_deburster_rg_r_beat_count <
	     flash_axi4_deburster_f_r_arlen$D_OUT ;
  assign flash_axi4_deburster_rg_w_beat_count_23_ULT_fl_ETC___d150 =
	     flash_axi4_deburster_rg_w_beat_count <
	     flash_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[28:21] ;
  assign mem0_controller_axi4_deburster_rg_ar_beat_coun_ETC___d320 =
	     mem0_controller_axi4_deburster_rg_ar_beat_count <
	     mem0_controller_axi4_deburster_xactor_from_master_f_rd_addr$D_OUT[28:21] ;
  assign mem0_controller_axi4_deburster_rg_b_beat_count_ETC___d276 =
	     mem0_controller_axi4_deburster_rg_b_beat_count <
	     mem0_controller_axi4_deburster_f_w_awlen$D_OUT ;
  assign mem0_controller_axi4_deburster_rg_r_beat_count_ETC___d331 =
	     mem0_controller_axi4_deburster_rg_r_beat_count <
	     mem0_controller_axi4_deburster_f_r_arlen$D_OUT ;
  assign mem0_controller_axi4_deburster_rg_w_beat_count_ETC___d261 =
	     mem0_controller_axi4_deburster_rg_w_beat_count <
	     mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[28:21] ;
  assign x__h10480 = flash_axi4_deburster_rg_w_beat_count + 8'd1 ;
  assign x__h10971 = flash_axi4_deburster_rg_b_beat_count + 8'd1 ;
  assign x__h11363 = flash_axi4_deburster_rg_ar_beat_count + 8'd1 ;
  assign x__h11561 = flash_axi4_deburster_rg_r_beat_count + 8'd1 ;
  assign x__h14819 = mem0_controller_axi4_deburster_rg_w_beat_count + 8'd1 ;
  assign x__h15310 = mem0_controller_axi4_deburster_rg_b_beat_count + 8'd1 ;
  assign x__h15702 = mem0_controller_axi4_deburster_rg_ar_beat_count + 8'd1 ;
  assign x__h15900 = mem0_controller_axi4_deburster_rg_r_beat_count + 8'd1 ;
  assign x__h6580 = boot_rom_axi4_deburster_rg_w_beat_count + 8'd1 ;
  assign x__h7071 = boot_rom_axi4_deburster_rg_b_beat_count + 8'd1 ;
  assign x__h7463 = boot_rom_axi4_deburster_rg_ar_beat_count + 8'd1 ;
  assign x__h7661 = boot_rom_axi4_deburster_rg_r_beat_count + 8'd1 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        boot_rom_axi4_deburster_rg_ar_beat_count <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	boot_rom_axi4_deburster_rg_b_beat_count <= `BSV_ASSIGNMENT_DELAY 8'd0;
	boot_rom_axi4_deburster_rg_b_resp <= `BSV_ASSIGNMENT_DELAY 2'b0;
	boot_rom_axi4_deburster_rg_r_beat_count <= `BSV_ASSIGNMENT_DELAY 8'd0;
	boot_rom_axi4_deburster_rg_reset <= `BSV_ASSIGNMENT_DELAY 1'd1;
	boot_rom_axi4_deburster_rg_w_beat_count <= `BSV_ASSIGNMENT_DELAY 8'd0;
	cpu_initial_reset <= `BSV_ASSIGNMENT_DELAY 1'd1;
	flash_axi4_deburster_rg_ar_beat_count <= `BSV_ASSIGNMENT_DELAY 8'd0;
	flash_axi4_deburster_rg_b_beat_count <= `BSV_ASSIGNMENT_DELAY 8'd0;
	flash_axi4_deburster_rg_b_resp <= `BSV_ASSIGNMENT_DELAY 2'b0;
	flash_axi4_deburster_rg_r_beat_count <= `BSV_ASSIGNMENT_DELAY 8'd0;
	flash_axi4_deburster_rg_reset <= `BSV_ASSIGNMENT_DELAY 1'd1;
	flash_axi4_deburster_rg_w_beat_count <= `BSV_ASSIGNMENT_DELAY 8'd0;
	mem0_controller_axi4_deburster_rg_ar_beat_count <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	mem0_controller_axi4_deburster_rg_b_beat_count <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	mem0_controller_axi4_deburster_rg_b_resp <= `BSV_ASSIGNMENT_DELAY
	    2'b0;
	mem0_controller_axi4_deburster_rg_r_beat_count <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	mem0_controller_axi4_deburster_rg_reset <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mem0_controller_axi4_deburster_rg_w_beat_count <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	rg_state <= `BSV_ASSIGNMENT_DELAY 2'd0;
      end
    else
      begin
        if (boot_rom_axi4_deburster_rg_ar_beat_count$EN)
	  boot_rom_axi4_deburster_rg_ar_beat_count <= `BSV_ASSIGNMENT_DELAY
	      boot_rom_axi4_deburster_rg_ar_beat_count$D_IN;
	if (boot_rom_axi4_deburster_rg_b_beat_count$EN)
	  boot_rom_axi4_deburster_rg_b_beat_count <= `BSV_ASSIGNMENT_DELAY
	      boot_rom_axi4_deburster_rg_b_beat_count$D_IN;
	if (boot_rom_axi4_deburster_rg_b_resp$EN)
	  boot_rom_axi4_deburster_rg_b_resp <= `BSV_ASSIGNMENT_DELAY
	      boot_rom_axi4_deburster_rg_b_resp$D_IN;
	if (boot_rom_axi4_deburster_rg_r_beat_count$EN)
	  boot_rom_axi4_deburster_rg_r_beat_count <= `BSV_ASSIGNMENT_DELAY
	      boot_rom_axi4_deburster_rg_r_beat_count$D_IN;
	if (boot_rom_axi4_deburster_rg_reset$EN)
	  boot_rom_axi4_deburster_rg_reset <= `BSV_ASSIGNMENT_DELAY
	      boot_rom_axi4_deburster_rg_reset$D_IN;
	if (boot_rom_axi4_deburster_rg_w_beat_count$EN)
	  boot_rom_axi4_deburster_rg_w_beat_count <= `BSV_ASSIGNMENT_DELAY
	      boot_rom_axi4_deburster_rg_w_beat_count$D_IN;
	if (cpu_initial_reset$EN)
	  cpu_initial_reset <= `BSV_ASSIGNMENT_DELAY cpu_initial_reset$D_IN;
	if (flash_axi4_deburster_rg_ar_beat_count$EN)
	  flash_axi4_deburster_rg_ar_beat_count <= `BSV_ASSIGNMENT_DELAY
	      flash_axi4_deburster_rg_ar_beat_count$D_IN;
	if (flash_axi4_deburster_rg_b_beat_count$EN)
	  flash_axi4_deburster_rg_b_beat_count <= `BSV_ASSIGNMENT_DELAY
	      flash_axi4_deburster_rg_b_beat_count$D_IN;
	if (flash_axi4_deburster_rg_b_resp$EN)
	  flash_axi4_deburster_rg_b_resp <= `BSV_ASSIGNMENT_DELAY
	      flash_axi4_deburster_rg_b_resp$D_IN;
	if (flash_axi4_deburster_rg_r_beat_count$EN)
	  flash_axi4_deburster_rg_r_beat_count <= `BSV_ASSIGNMENT_DELAY
	      flash_axi4_deburster_rg_r_beat_count$D_IN;
	if (flash_axi4_deburster_rg_reset$EN)
	  flash_axi4_deburster_rg_reset <= `BSV_ASSIGNMENT_DELAY
	      flash_axi4_deburster_rg_reset$D_IN;
	if (flash_axi4_deburster_rg_w_beat_count$EN)
	  flash_axi4_deburster_rg_w_beat_count <= `BSV_ASSIGNMENT_DELAY
	      flash_axi4_deburster_rg_w_beat_count$D_IN;
	if (mem0_controller_axi4_deburster_rg_ar_beat_count$EN)
	  mem0_controller_axi4_deburster_rg_ar_beat_count <= `BSV_ASSIGNMENT_DELAY
	      mem0_controller_axi4_deburster_rg_ar_beat_count$D_IN;
	if (mem0_controller_axi4_deburster_rg_b_beat_count$EN)
	  mem0_controller_axi4_deburster_rg_b_beat_count <= `BSV_ASSIGNMENT_DELAY
	      mem0_controller_axi4_deburster_rg_b_beat_count$D_IN;
	if (mem0_controller_axi4_deburster_rg_b_resp$EN)
	  mem0_controller_axi4_deburster_rg_b_resp <= `BSV_ASSIGNMENT_DELAY
	      mem0_controller_axi4_deburster_rg_b_resp$D_IN;
	if (mem0_controller_axi4_deburster_rg_r_beat_count$EN)
	  mem0_controller_axi4_deburster_rg_r_beat_count <= `BSV_ASSIGNMENT_DELAY
	      mem0_controller_axi4_deburster_rg_r_beat_count$D_IN;
	if (mem0_controller_axi4_deburster_rg_reset$EN)
	  mem0_controller_axi4_deburster_rg_reset <= `BSV_ASSIGNMENT_DELAY
	      mem0_controller_axi4_deburster_rg_reset$D_IN;
	if (mem0_controller_axi4_deburster_rg_w_beat_count$EN)
	  mem0_controller_axi4_deburster_rg_w_beat_count <= `BSV_ASSIGNMENT_DELAY
	      mem0_controller_axi4_deburster_rg_w_beat_count$D_IN;
	if (rg_state$EN) rg_state <= `BSV_ASSIGNMENT_DELAY rg_state$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    boot_rom_axi4_deburster_rg_ar_beat_count = 8'hAA;
    boot_rom_axi4_deburster_rg_b_beat_count = 8'hAA;
    boot_rom_axi4_deburster_rg_b_resp = 2'h2;
    boot_rom_axi4_deburster_rg_r_beat_count = 8'hAA;
    boot_rom_axi4_deburster_rg_reset = 1'h0;
    boot_rom_axi4_deburster_rg_w_beat_count = 8'hAA;
    cpu_initial_reset = 1'h0;
    flash_axi4_deburster_rg_ar_beat_count = 8'hAA;
    flash_axi4_deburster_rg_b_beat_count = 8'hAA;
    flash_axi4_deburster_rg_b_resp = 2'h2;
    flash_axi4_deburster_rg_r_beat_count = 8'hAA;
    flash_axi4_deburster_rg_reset = 1'h0;
    flash_axi4_deburster_rg_w_beat_count = 8'hAA;
    mem0_controller_axi4_deburster_rg_ar_beat_count = 8'hAA;
    mem0_controller_axi4_deburster_rg_b_beat_count = 8'hAA;
    mem0_controller_axi4_deburster_rg_b_resp = 2'h2;
    mem0_controller_axi4_deburster_rg_r_beat_count = 8'hAA;
    mem0_controller_axi4_deburster_rg_reset = 1'h0;
    mem0_controller_axi4_deburster_rg_w_beat_count = 8'hAA;
    rg_state = 2'h2;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge core$CLK_jtag_tclk_out or negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_start_2)
	begin
	  v__h22880 = $stime;
	  #0;
	end
    v__h22874 = v__h22880 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_start_2)
	$display("%0d: SoC_Top. Reset start ...", v__h22874);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_complete)
	begin
	  v__h23453 = $stime;
	  #0;
	end
    v__h23447 = v__h23453 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_reset_complete)
	$display("%0d: SoC_Top. Reset complete ...", v__h23447);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !boot_rom_axi4_deburster_rg_w_beat_count_2_ULT__ETC___d39 &&
	  !boot_rom_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	begin
	  v__h6705 = $stime;
	  #0;
	end
    v__h6699 = v__h6705 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !boot_rom_axi4_deburster_rg_w_beat_count_2_ULT__ETC___d39 &&
	  !boot_rom_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$display("%0d: ERROR: %m::AXI4_Deburster.rl_wr_xaction_master_to_slave: m -> s",
		 v__h6699);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !boot_rom_axi4_deburster_rg_w_beat_count_2_ULT__ETC___d39 &&
	  !boot_rom_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$display("    WLAST not set on last data beat (awlen = %0d)",
		 boot_rom_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !boot_rom_axi4_deburster_rg_w_beat_count_2_ULT__ETC___d39 &&
	  !boot_rom_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !boot_rom_axi4_deburster_rg_w_beat_count_2_ULT__ETC___d39 &&
	  !boot_rom_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write("AXI4_Wr_Data { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !boot_rom_axi4_deburster_rg_w_beat_count_2_ULT__ETC___d39 &&
	  !boot_rom_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write("'h%h",
	       boot_rom_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[72:9]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !boot_rom_axi4_deburster_rg_w_beat_count_2_ULT__ETC___d39 &&
	  !boot_rom_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !boot_rom_axi4_deburster_rg_w_beat_count_2_ULT__ETC___d39 &&
	  !boot_rom_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write("'h%h",
	       boot_rom_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[8:1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !boot_rom_axi4_deburster_rg_w_beat_count_2_ULT__ETC___d39 &&
	  !boot_rom_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !boot_rom_axi4_deburster_rg_w_beat_count_2_ULT__ETC___d39 &&
	  !boot_rom_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !boot_rom_axi4_deburster_rg_w_beat_count_2_ULT__ETC___d39 &&
	  !boot_rom_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !boot_rom_axi4_deburster_rg_w_beat_count_2_ULT__ETC___d39 &&
	  !boot_rom_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_boot_rom_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !boot_rom_axi4_deburster_rg_w_beat_count_2_ULT__ETC___d39 &&
	  !boot_rom_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (boot_rom_axi4_deburster_rg_reset)
	begin
	  v__h5732 = $stime;
	  #0;
	end
    v__h5726 = v__h5732 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (boot_rom_axi4_deburster_rg_reset)
	$display("%0d: %m::AXI4_Deburster.rl_reset", v__h5726);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_flash_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !flash_axi4_deburster_rg_w_beat_count_23_ULT_fl_ETC___d150 &&
	  !flash_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	begin
	  v__h10605 = $stime;
	  #0;
	end
    v__h10599 = v__h10605 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_flash_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !flash_axi4_deburster_rg_w_beat_count_23_ULT_fl_ETC___d150 &&
	  !flash_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$display("%0d: ERROR: %m::AXI4_Deburster.rl_wr_xaction_master_to_slave: m -> s",
		 v__h10599);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_flash_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !flash_axi4_deburster_rg_w_beat_count_23_ULT_fl_ETC___d150 &&
	  !flash_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$display("    WLAST not set on last data beat (awlen = %0d)",
		 flash_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_flash_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !flash_axi4_deburster_rg_w_beat_count_23_ULT_fl_ETC___d150 &&
	  !flash_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_flash_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !flash_axi4_deburster_rg_w_beat_count_23_ULT_fl_ETC___d150 &&
	  !flash_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write("AXI4_Wr_Data { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_flash_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !flash_axi4_deburster_rg_w_beat_count_23_ULT_fl_ETC___d150 &&
	  !flash_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write("'h%h",
	       flash_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[72:9]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_flash_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !flash_axi4_deburster_rg_w_beat_count_23_ULT_fl_ETC___d150 &&
	  !flash_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_flash_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !flash_axi4_deburster_rg_w_beat_count_23_ULT_fl_ETC___d150 &&
	  !flash_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write("'h%h",
	       flash_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[8:1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_flash_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !flash_axi4_deburster_rg_w_beat_count_23_ULT_fl_ETC___d150 &&
	  !flash_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_flash_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !flash_axi4_deburster_rg_w_beat_count_23_ULT_fl_ETC___d150 &&
	  !flash_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_flash_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !flash_axi4_deburster_rg_w_beat_count_23_ULT_fl_ETC___d150 &&
	  !flash_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_flash_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !flash_axi4_deburster_rg_w_beat_count_23_ULT_fl_ETC___d150 &&
	  !flash_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_flash_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !flash_axi4_deburster_rg_w_beat_count_23_ULT_fl_ETC___d150 &&
	  !flash_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (flash_axi4_deburster_rg_reset)
	begin
	  v__h9632 = $stime;
	  #0;
	end
    v__h9626 = v__h9632 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (flash_axi4_deburster_rg_reset)
	$display("%0d: %m::AXI4_Deburster.rl_reset", v__h9626);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !mem0_controller_axi4_deburster_rg_w_beat_count_ETC___d261 &&
	  !mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	begin
	  v__h14944 = $stime;
	  #0;
	end
    v__h14938 = v__h14944 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !mem0_controller_axi4_deburster_rg_w_beat_count_ETC___d261 &&
	  !mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$display("%0d: ERROR: %m::AXI4_Deburster.rl_wr_xaction_master_to_slave: m -> s",
		 v__h14938);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !mem0_controller_axi4_deburster_rg_w_beat_count_ETC___d261 &&
	  !mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$display("    WLAST not set on last data beat (awlen = %0d)",
		 mem0_controller_axi4_deburster_xactor_from_master_f_wr_addr$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !mem0_controller_axi4_deburster_rg_w_beat_count_ETC___d261 &&
	  !mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !mem0_controller_axi4_deburster_rg_w_beat_count_ETC___d261 &&
	  !mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write("AXI4_Wr_Data { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !mem0_controller_axi4_deburster_rg_w_beat_count_ETC___d261 &&
	  !mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write("'h%h",
	       mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[72:9]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !mem0_controller_axi4_deburster_rg_w_beat_count_ETC___d261 &&
	  !mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !mem0_controller_axi4_deburster_rg_w_beat_count_ETC___d261 &&
	  !mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write("'h%h",
	       mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[8:1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !mem0_controller_axi4_deburster_rg_w_beat_count_ETC___d261 &&
	  !mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !mem0_controller_axi4_deburster_rg_w_beat_count_ETC___d261 &&
	  !mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !mem0_controller_axi4_deburster_rg_w_beat_count_ETC___d261 &&
	  !mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !mem0_controller_axi4_deburster_rg_w_beat_count_ETC___d261 &&
	  !mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mem0_controller_axi4_deburster_rl_wr_xaction_master_to_slave &&
	  !mem0_controller_axi4_deburster_rg_w_beat_count_ETC___d261 &&
	  !mem0_controller_axi4_deburster_xactor_from_master_f_wr_data$D_OUT[0])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (mem0_controller_axi4_deburster_rg_reset)
	begin
	  v__h13971 = $stime;
	  #0;
	end
    v__h13965 = v__h13971 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (mem0_controller_axi4_deburster_rg_reset)
	$display("%0d: %m::AXI4_Deburster.rl_reset", v__h13965);
  end
  // synopsys translate_on
endmodule  // mkSoC_Top

