//
// Generated by Bluespec Compiler, version 2017.07.A (build e1df8052c, 2017-07-21)
//
//
//
//
// Ports:
// Name                         I/O  size props
// pcie_in_m_axis_cc_tvalid       O     1 reg
// pcie_in_m_axis_cc_tdata        O    64
// pcie_in_m_axis_cc_tkeep        O     2
// pcie_in_m_axis_cc_tlast        O     1
// pcie_in_m_axis_cc_tuser        O    33 const
// pcie_in_m_axis_rq_tvalid       O     1 reg
// pcie_in_m_axis_rq_tdata        O    64
// pcie_in_m_axis_rq_tkeep        O     2
// pcie_in_m_axis_rq_tlast        O     1
// pcie_in_m_axis_rq_tuser        O    62
// pcie_in_s_axis_cq_tready       O     1
// pcie_in_s_axis_rc_tready       O     1
// pcie_in_pcie4_cfg_mgmt_addr    O    10 const
// pcie_in_pcie4_cfg_mgmt_byte_enable  O     4 const
// pcie_in_pcie4_cfg_mgmt_debug_access  O     1 const
// pcie_in_pcie4_cfg_mgmt_function_number  O     8 const
// pcie_in_pcie4_cfg_mgmt_read    O     1 const
// pcie_in_pcie4_cfg_mgmt_write_data  O    32 const
// pcie_in_pcie4_cfg_mgmt_write   O     1 const
// pcie_in_pcie4_cfg_pm_aspm_l1_entry_reject  O     1 const
// pcie_in_pcie4_cfg_pm_aspm_tx_10s_entry_disable  O     1 const
// pcie_in_pcie4_cfg_external_msix_msix_address  O    64 const
// pcie_in_pcie4_cfg_external_msix_msix_data  O    32 const
// pcie_in_pcie4_cfg_external_msix_msix_intrpt  O     1 const
// pcie_in_pcie4_cfg_external_msix_msix_vec_pending  O     2 const
// pcie_in_pcie4_cfg_external_msix_msi_function_number  O     8 const
// pcie_in_pcie4_cfg_interrupt_intrpt  O     4 const
// pcie_in_pcie4_cfg_interrupt_pending  O     4 const
// pcie_in_pcie4_cfg_control_config_space_enable  O     1 const
// pcie_in_pcie4_cfg_control_ds_bus_number  O     8 const
// pcie_in_pcie4_cfg_control_ds_device_number  O     5 const
// pcie_in_pcie4_cfg_control_ds_port_number  O     8 const
// pcie_in_pcie4_cfg_control_dsn  O    64 const
// pcie_in_pcie4_cfg_control_err_cor_in  O     1 const
// pcie_in_pcie4_cfg_control_err_uncor_in  O     1 const
// pcie_in_pcie4_cfg_control_flr_done  O     4 const
// pcie_in_pcie4_cfg_control_hot_reset_in  O     1 const
// pcie_in_pcie4_cfg_control_link_training_enable  O     1 const
// pcie_in_pcie4_cfg_control_power_state_change_ack  O     1 const
// pcie_in_pcie4_cfg_control_req_pm_transition_l23_ready  O     1 const
// pcie_in_pcie4_cfg_control_vf_flr_done  O     1 const
// pcie_in_pcie4_cfg_control_vf_flr_func_num  O     8 const
// pcie_in_pcie4_cfg_fc_sel       O     3 const
// pcie_in_pcie4_cfg_mesg_tx_transmit  O     1 const
// pcie_in_pcie4_cfg_mesg_tx_transmit_data  O    32 const
// pcie_in_pcie4_cfg_mesg_tx_transmit_type  O     3 const
// pcie_in_pcie4_cfg_status_pcie_cq_np_req  O     2 const
// cq_recv_get                    O    76
// RDY_cq_recv_get                O     1
// RDY_cc_xmit_put                O     1 reg
// RDY_rq_xmit_put                O     1 reg
// rc_recv_get                    O    76
// RDY_rc_recv_get                O     1
// status_lnk_up                  O     1
// status_max_payload             O     2
// status_max_read_req            O     3
// status_rcb_status              O     4
// status_function_status         O    16
// cfg_interrupt_msix_enabled     O     4
// cfg_interrupt_msix_mask        O     4
// CLK                            I     1 clock
// RST_N                          I     1 reset
// pcie_in_m_axis_cc_tready       I     1
// pcie_in_m_axis_rq_tready       I     1
// pcie_in_s_axis_cq_tvalid       I     1
// pcie_in_s_axis_cq_tdata        I    64
// pcie_in_s_axis_cq_tkeep        I     2
// pcie_in_s_axis_cq_tlast        I     1
// pcie_in_s_axis_cq_tuser        I    88
// pcie_in_s_axis_rc_tvalid       I     1
// pcie_in_s_axis_rc_tdata        I    64
// pcie_in_s_axis_rc_tkeep        I     2
// pcie_in_s_axis_rc_tlast        I     1
// pcie_in_s_axis_rc_tuser        I    75
// pcie_in_pcie4_cfg_mgmt_read_data  I    32 unused
// pcie_in_pcie4_cfg_mgmt_read_write_done  I     1 unused
// pcie_in_pcie4_cfg_external_msix_msix_msix_enable  I     4
// pcie_in_pcie4_cfg_external_msix_msix_msix_mask  I     4
// pcie_in_pcie4_cfg_external_msix_msix_vec_pending_status  I     1 unused
// pcie_in_pcie4_cfg_external_msix_msix_vf_enable  I   252 unused
// pcie_in_pcie4_cfg_external_msix_msix_vf_mask  I   252 unused
// pcie_in_pcie4_cfg_external_msix_msi_fail  I     1 unused
// pcie_in_pcie4_cfg_external_msix_msi_sent  I     1 unused
// pcie_in_pcie4_cfg_interrupt_sent  I     1 unused
// pcie_in_pcie4_cfg_control_bus_number  I     8 unused
// pcie_in_pcie4_cfg_control_flr_in_process  I     1 unused
// pcie_in_pcie4_cfg_control_hot_reset_out  I     1 unused
// pcie_in_pcie4_cfg_control_power_state_change_interrupt  I     1 unused
// pcie_in_pcie4_cfg_control_vf_flr_in_process  I   252 unused
// pcie_in_pcie4_cfg_fc_cpld      I    12 unused
// pcie_in_pcie4_cfg_fc_cplh      I     8 unused
// pcie_in_pcie4_cfg_fc_npd       I    12 unused
// pcie_in_pcie4_cfg_fc_nph       I     8 unused
// pcie_in_pcie4_cfg_fc_pd        I    12 unused
// pcie_in_pcie4_cfg_fc_ph        I     8 unused
// pcie_in_pcie4_cfg_mesg_tx_transmit_done  I     1 unused
// pcie_in_pcie4_cfg_mesg_rcvd_received  I     1 unused
// pcie_in_pcie4_cfg_mesg_rcvd_received_data  I     8 unused
// pcie_in_pcie4_cfg_mesg_rcvd_received_type  I     5 unused
// pcie_in_pcie4_cfg_status_pcie_cq_np_req_count  I     6 unused
// pcie_in_pcie4_cfg_status_current_speed  I     2 unused
// pcie_in_pcie4_cfg_status_err_cor_out  I     1 unused
// pcie_in_pcie4_cfg_status_err_fatal_out  I     1 unused
// pcie_in_pcie4_cfg_status_err_nonfatal_out  I     1 unused
// pcie_in_pcie4_cfg_status_funstion_power_state  I    12 unused
// pcie_in_pcie4_cfg_status_function_status  I    16
// pcie_in_pcie4_cfg_status_link_power_state  I     2 unused
// pcie_in_pcie4_cfg_status_local_error_out  I     5 unused
// pcie_in_pcie4_cfg_status_local_error_valid  I     1 unused
// pcie_in_pcie4_cfg_status_ltssm_state  I     6 unused
// pcie_in_pcie4_cfg_status_max_payload  I     2
// pcie_in_pcie4_cfg_status_max_read_req  I     3
// pcie_in_pcie4_cfg_status_negotiated_width  I     3 unused
// pcie_in_pcie4_cfg_status_obff_enable  I     2 unused
// pcie_in_pcie4_cfg_status_phy_link_down  I     1 unused
// pcie_in_pcie4_cfg_status_phy_link_status  I     2 unused
// pcie_in_pcie4_cfg_status_pl_status_change  I     1 unused
// pcie_in_pcie4_cfg_status_rcb_status  I     4
// pcie_in_pcie4_cfg_status_rq_seq_num0  I     6 unused
// pcie_in_pcie4_cfg_status_rq_seq_num1  I     6 unused
// pcie_in_pcie4_cfg_status_rq_seq_num_vld0  I     1 unused
// pcie_in_pcie4_cfg_status_rq_seq_num_vld1  I     1 unused
// pcie_in_pcie4_cfg_status_rq_tag0  I     8 unused
// pcie_in_pcie4_cfg_status_rq_tag1  I     8 unused
// pcie_in_pcie4_cfg_status_rq_tag_av  I     4 unused
// pcie_in_pcie4_cfg_status_rq_tag_vld0  I     1 unused
// pcie_in_pcie4_cfg_status_rq_tag_vld1  I     1 unused
// pcie_in_pcie4_cfg_status_rx_pm_state  I     2 unused
// pcie_in_pcie4_cfg_status_tfc_npd_av  I     4 unused
// pcie_in_pcie4_cfg_status_tfc_nph_av  I     4 unused
// pcie_in_pcie4_cfg_status_tph_requester_enable  I     4 unused
// pcie_in_pcie4_cfg_status_tph_st_mode  I    12 unused
// pcie_in_pcie4_cfg_status_tx_pm_state  I     2 unused
// pcie_in_pcie4_cfg_status_vf_power_state  I   756 unused
// pcie_in_pcie4_cfg_status_vf_status  I   504 unused
// pcie_in_pcie4_cfg_status_vf_tph_requester_enable  I   252 unused
// pcie_in_pcie4_cfg_status_vf_tph_st_mode  I   756 unused
// pcie_in_pcie4_user_link_up     I     1
// pcie_in_pcie4_phy_rdy_out      I     1 unused
// cc_xmit_put                    I    67 reg
// rq_xmit_put                    I    75 reg
// EN_cc_xmit_put                 I     1
// EN_rq_xmit_put                 I     1
// EN_cq_recv_get                 I     1
// EN_rc_recv_get                 I     1
//
// Combinational paths from inputs to outputs:
//   (pcie_in_s_axis_cq_tvalid,
//    pcie_in_s_axis_cq_tdata,
//    pcie_in_s_axis_cq_tkeep,
//    pcie_in_s_axis_cq_tlast,
//    pcie_in_s_axis_cq_tuser) -> RDY_cq_recv_get
//   (pcie_in_s_axis_cq_tvalid,
//    pcie_in_s_axis_cq_tdata,
//    pcie_in_s_axis_cq_tkeep,
//    pcie_in_s_axis_cq_tlast,
//    pcie_in_s_axis_cq_tuser) -> cq_recv_get
//   (pcie_in_s_axis_rc_tvalid,
//    pcie_in_s_axis_rc_tdata,
//    pcie_in_s_axis_rc_tkeep,
//    pcie_in_s_axis_rc_tlast,
//    pcie_in_s_axis_rc_tuser) -> RDY_rc_recv_get
//   (pcie_in_s_axis_rc_tvalid,
//    pcie_in_s_axis_rc_tdata,
//    pcie_in_s_axis_rc_tkeep,
//    pcie_in_s_axis_rc_tlast,
//    pcie_in_s_axis_rc_tuser) -> rc_recv_get
//   pcie_in_pcie4_cfg_external_msix_msix_msix_enable -> cfg_interrupt_msix_enabled
//   pcie_in_pcie4_cfg_external_msix_msix_msix_mask -> cfg_interrupt_msix_mask
//   pcie_in_pcie4_cfg_status_function_status -> status_function_status
//   pcie_in_pcie4_cfg_status_max_payload -> status_max_payload
//   pcie_in_pcie4_cfg_status_max_read_req -> status_max_read_req
//   pcie_in_pcie4_cfg_status_rcb_status -> status_rcb_status
//   pcie_in_pcie4_user_link_up -> status_lnk_up
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkSVF_PCIE(CLK,
		  RST_N,

		  pcie_in_m_axis_cc_tvalid,

		  pcie_in_m_axis_cc_tdata,

		  pcie_in_m_axis_cc_tkeep,

		  pcie_in_m_axis_cc_tlast,

		  pcie_in_m_axis_cc_tuser,

		  pcie_in_m_axis_cc_tready,

		  pcie_in_m_axis_rq_tvalid,

		  pcie_in_m_axis_rq_tdata,

		  pcie_in_m_axis_rq_tkeep,

		  pcie_in_m_axis_rq_tlast,

		  pcie_in_m_axis_rq_tuser,

		  pcie_in_m_axis_rq_tready,

		  pcie_in_s_axis_cq_tvalid,
		  pcie_in_s_axis_cq_tdata,
		  pcie_in_s_axis_cq_tkeep,
		  pcie_in_s_axis_cq_tlast,
		  pcie_in_s_axis_cq_tuser,

		  pcie_in_s_axis_cq_tready,

		  pcie_in_s_axis_rc_tvalid,
		  pcie_in_s_axis_rc_tdata,
		  pcie_in_s_axis_rc_tkeep,
		  pcie_in_s_axis_rc_tlast,
		  pcie_in_s_axis_rc_tuser,

		  pcie_in_s_axis_rc_tready,

		  pcie_in_pcie4_cfg_mgmt_addr,

		  pcie_in_pcie4_cfg_mgmt_byte_enable,

		  pcie_in_pcie4_cfg_mgmt_debug_access,

		  pcie_in_pcie4_cfg_mgmt_function_number,

		  pcie_in_pcie4_cfg_mgmt_read_data,

		  pcie_in_pcie4_cfg_mgmt_read,

		  pcie_in_pcie4_cfg_mgmt_read_write_done,

		  pcie_in_pcie4_cfg_mgmt_write_data,

		  pcie_in_pcie4_cfg_mgmt_write,

		  pcie_in_pcie4_cfg_pm_aspm_l1_entry_reject,

		  pcie_in_pcie4_cfg_pm_aspm_tx_10s_entry_disable,

		  pcie_in_pcie4_cfg_external_msix_msix_address,

		  pcie_in_pcie4_cfg_external_msix_msix_data,

		  pcie_in_pcie4_cfg_external_msix_msix_msix_enable,

		  pcie_in_pcie4_cfg_external_msix_msix_intrpt,

		  pcie_in_pcie4_cfg_external_msix_msix_msix_mask,

		  pcie_in_pcie4_cfg_external_msix_msix_vec_pending,

		  pcie_in_pcie4_cfg_external_msix_msix_vec_pending_status,

		  pcie_in_pcie4_cfg_external_msix_msix_vf_enable,

		  pcie_in_pcie4_cfg_external_msix_msix_vf_mask,

		  pcie_in_pcie4_cfg_external_msix_msi_fail,

		  pcie_in_pcie4_cfg_external_msix_msi_function_number,

		  pcie_in_pcie4_cfg_external_msix_msi_sent,

		  pcie_in_pcie4_cfg_interrupt_intrpt,

		  pcie_in_pcie4_cfg_interrupt_pending,

		  pcie_in_pcie4_cfg_interrupt_sent,

		  pcie_in_pcie4_cfg_control_bus_number,

		  pcie_in_pcie4_cfg_control_config_space_enable,

		  pcie_in_pcie4_cfg_control_ds_bus_number,

		  pcie_in_pcie4_cfg_control_ds_device_number,

		  pcie_in_pcie4_cfg_control_ds_port_number,

		  pcie_in_pcie4_cfg_control_dsn,

		  pcie_in_pcie4_cfg_control_err_cor_in,

		  pcie_in_pcie4_cfg_control_err_uncor_in,

		  pcie_in_pcie4_cfg_control_flr_done,

		  pcie_in_pcie4_cfg_control_flr_in_process,

		  pcie_in_pcie4_cfg_control_hot_reset_in,

		  pcie_in_pcie4_cfg_control_hot_reset_out,

		  pcie_in_pcie4_cfg_control_link_training_enable,

		  pcie_in_pcie4_cfg_control_power_state_change_ack,

		  pcie_in_pcie4_cfg_control_power_state_change_interrupt,

		  pcie_in_pcie4_cfg_control_req_pm_transition_l23_ready,

		  pcie_in_pcie4_cfg_control_vf_flr_done,

		  pcie_in_pcie4_cfg_control_vf_flr_func_num,

		  pcie_in_pcie4_cfg_control_vf_flr_in_process,

		  pcie_in_pcie4_cfg_fc_cpld,

		  pcie_in_pcie4_cfg_fc_cplh,

		  pcie_in_pcie4_cfg_fc_npd,

		  pcie_in_pcie4_cfg_fc_nph,

		  pcie_in_pcie4_cfg_fc_pd,

		  pcie_in_pcie4_cfg_fc_ph,

		  pcie_in_pcie4_cfg_fc_sel,

		  pcie_in_pcie4_cfg_mesg_tx_transmit,

		  pcie_in_pcie4_cfg_mesg_tx_transmit_data,

		  pcie_in_pcie4_cfg_mesg_tx_transmit_done,

		  pcie_in_pcie4_cfg_mesg_tx_transmit_type,

		  pcie_in_pcie4_cfg_mesg_rcvd_received,

		  pcie_in_pcie4_cfg_mesg_rcvd_received_data,

		  pcie_in_pcie4_cfg_mesg_rcvd_received_type,

		  pcie_in_pcie4_cfg_status_pcie_cq_np_req,

		  pcie_in_pcie4_cfg_status_pcie_cq_np_req_count,

		  pcie_in_pcie4_cfg_status_current_speed,

		  pcie_in_pcie4_cfg_status_err_cor_out,

		  pcie_in_pcie4_cfg_status_err_fatal_out,

		  pcie_in_pcie4_cfg_status_err_nonfatal_out,

		  pcie_in_pcie4_cfg_status_funstion_power_state,

		  pcie_in_pcie4_cfg_status_function_status,

		  pcie_in_pcie4_cfg_status_link_power_state,

		  pcie_in_pcie4_cfg_status_local_error_out,

		  pcie_in_pcie4_cfg_status_local_error_valid,

		  pcie_in_pcie4_cfg_status_ltssm_state,

		  pcie_in_pcie4_cfg_status_max_payload,

		  pcie_in_pcie4_cfg_status_max_read_req,

		  pcie_in_pcie4_cfg_status_negotiated_width,

		  pcie_in_pcie4_cfg_status_obff_enable,

		  pcie_in_pcie4_cfg_status_phy_link_down,

		  pcie_in_pcie4_cfg_status_phy_link_status,

		  pcie_in_pcie4_cfg_status_pl_status_change,

		  pcie_in_pcie4_cfg_status_rcb_status,

		  pcie_in_pcie4_cfg_status_rq_seq_num0,

		  pcie_in_pcie4_cfg_status_rq_seq_num1,

		  pcie_in_pcie4_cfg_status_rq_seq_num_vld0,

		  pcie_in_pcie4_cfg_status_rq_seq_num_vld1,

		  pcie_in_pcie4_cfg_status_rq_tag0,

		  pcie_in_pcie4_cfg_status_rq_tag1,

		  pcie_in_pcie4_cfg_status_rq_tag_av,

		  pcie_in_pcie4_cfg_status_rq_tag_vld0,

		  pcie_in_pcie4_cfg_status_rq_tag_vld1,

		  pcie_in_pcie4_cfg_status_rx_pm_state,

		  pcie_in_pcie4_cfg_status_tfc_npd_av,

		  pcie_in_pcie4_cfg_status_tfc_nph_av,

		  pcie_in_pcie4_cfg_status_tph_requester_enable,

		  pcie_in_pcie4_cfg_status_tph_st_mode,

		  pcie_in_pcie4_cfg_status_tx_pm_state,

		  pcie_in_pcie4_cfg_status_vf_power_state,

		  pcie_in_pcie4_cfg_status_vf_status,

		  pcie_in_pcie4_cfg_status_vf_tph_requester_enable,

		  pcie_in_pcie4_cfg_status_vf_tph_st_mode,

		  pcie_in_pcie4_user_link_up,

		  pcie_in_pcie4_phy_rdy_out,

		  EN_cq_recv_get,
		  cq_recv_get,
		  RDY_cq_recv_get,

		  cc_xmit_put,
		  EN_cc_xmit_put,
		  RDY_cc_xmit_put,

		  rq_xmit_put,
		  EN_rq_xmit_put,
		  RDY_rq_xmit_put,

		  EN_rc_recv_get,
		  rc_recv_get,
		  RDY_rc_recv_get,

		  status_lnk_up,

		  status_max_payload,

		  status_max_read_req,

		  status_rcb_status,

		  status_function_status,

		  cfg_interrupt_msix_enabled,

		  cfg_interrupt_msix_mask);
  input  CLK;
  input  RST_N;

  // value method pcie_in_m_axis_cc_m_tvalid
  output pcie_in_m_axis_cc_tvalid;

  // value method pcie_in_m_axis_cc_m_tdata
  output [63 : 0] pcie_in_m_axis_cc_tdata;

  // value method pcie_in_m_axis_cc_m_tkeep
  output [1 : 0] pcie_in_m_axis_cc_tkeep;

  // value method pcie_in_m_axis_cc_m_tlast
  output pcie_in_m_axis_cc_tlast;

  // value method pcie_in_m_axis_cc_m_tuser
  output [32 : 0] pcie_in_m_axis_cc_tuser;

  // action method pcie_in_m_axis_cc_m_tready
  input  pcie_in_m_axis_cc_tready;

  // value method pcie_in_m_axis_rq_m_tvalid
  output pcie_in_m_axis_rq_tvalid;

  // value method pcie_in_m_axis_rq_m_tdata
  output [63 : 0] pcie_in_m_axis_rq_tdata;

  // value method pcie_in_m_axis_rq_m_tkeep
  output [1 : 0] pcie_in_m_axis_rq_tkeep;

  // value method pcie_in_m_axis_rq_m_tlast
  output pcie_in_m_axis_rq_tlast;

  // value method pcie_in_m_axis_rq_m_tuser
  output [61 : 0] pcie_in_m_axis_rq_tuser;

  // action method pcie_in_m_axis_rq_m_tready
  input  pcie_in_m_axis_rq_tready;

  // action method pcie_in_s_axis_cq_m_tvalid
  input  pcie_in_s_axis_cq_tvalid;
  input  [63 : 0] pcie_in_s_axis_cq_tdata;
  input  [1 : 0] pcie_in_s_axis_cq_tkeep;
  input  pcie_in_s_axis_cq_tlast;
  input  [87 : 0] pcie_in_s_axis_cq_tuser;

  // value method pcie_in_s_axis_cq_m_tready
  output pcie_in_s_axis_cq_tready;

  // action method pcie_in_s_axis_rc_m_tvalid
  input  pcie_in_s_axis_rc_tvalid;
  input  [63 : 0] pcie_in_s_axis_rc_tdata;
  input  [1 : 0] pcie_in_s_axis_rc_tkeep;
  input  pcie_in_s_axis_rc_tlast;
  input  [74 : 0] pcie_in_s_axis_rc_tuser;

  // value method pcie_in_s_axis_rc_m_tready
  output pcie_in_s_axis_rc_tready;

  // value method pcie_in_pcie4_cfg_mgmt_addr
  output [9 : 0] pcie_in_pcie4_cfg_mgmt_addr;

  // value method pcie_in_pcie4_cfg_mgmt_byte_enable
  output [3 : 0] pcie_in_pcie4_cfg_mgmt_byte_enable;

  // value method pcie_in_pcie4_cfg_mgmt_debug_access
  output pcie_in_pcie4_cfg_mgmt_debug_access;

  // value method pcie_in_pcie4_cfg_mgmt_function_number
  output [7 : 0] pcie_in_pcie4_cfg_mgmt_function_number;

  // action method pcie_in_pcie4_cfg_mgmt_read_data
  input  [31 : 0] pcie_in_pcie4_cfg_mgmt_read_data;

  // value method pcie_in_pcie4_cfg_mgmt_read
  output pcie_in_pcie4_cfg_mgmt_read;

  // action method pcie_in_pcie4_cfg_mgmt_read_write_done
  input  pcie_in_pcie4_cfg_mgmt_read_write_done;

  // value method pcie_in_pcie4_cfg_mgmt_write_data
  output [31 : 0] pcie_in_pcie4_cfg_mgmt_write_data;

  // value method pcie_in_pcie4_cfg_mgmt_write
  output pcie_in_pcie4_cfg_mgmt_write;

  // value method pcie_in_pcie4_cfg_pm_aspm_l1_entry_reject
  output pcie_in_pcie4_cfg_pm_aspm_l1_entry_reject;

  // value method pcie_in_pcie4_cfg_pm_aspm_tx_10s_entry_disable
  output pcie_in_pcie4_cfg_pm_aspm_tx_10s_entry_disable;

  // value method pcie_in_pcie4_cfg_external_msix_msix_address
  output [63 : 0] pcie_in_pcie4_cfg_external_msix_msix_address;

  // value method pcie_in_pcie4_cfg_external_msix_msix_data
  output [31 : 0] pcie_in_pcie4_cfg_external_msix_msix_data;

  // action method pcie_in_pcie4_cfg_external_msix_msix_msix_enable
  input  [3 : 0] pcie_in_pcie4_cfg_external_msix_msix_msix_enable;

  // value method pcie_in_pcie4_cfg_external_msix_msix_intrpt
  output pcie_in_pcie4_cfg_external_msix_msix_intrpt;

  // action method pcie_in_pcie4_cfg_external_msix_msix_msix_mask
  input  [3 : 0] pcie_in_pcie4_cfg_external_msix_msix_msix_mask;

  // value method pcie_in_pcie4_cfg_external_msix_msix_vec_pending
  output [1 : 0] pcie_in_pcie4_cfg_external_msix_msix_vec_pending;

  // action method pcie_in_pcie4_cfg_external_msix_msix_vec_pending_status
  input  pcie_in_pcie4_cfg_external_msix_msix_vec_pending_status;

  // action method pcie_in_pcie4_cfg_external_msix_msix_vf_enable
  input  [251 : 0] pcie_in_pcie4_cfg_external_msix_msix_vf_enable;

  // action method pcie_in_pcie4_cfg_external_msix_msix_vf_mask
  input  [251 : 0] pcie_in_pcie4_cfg_external_msix_msix_vf_mask;

  // action method pcie_in_pcie4_cfg_external_msix_msi_fail
  input  pcie_in_pcie4_cfg_external_msix_msi_fail;

  // value method pcie_in_pcie4_cfg_external_msix_msi_function_number
  output [7 : 0] pcie_in_pcie4_cfg_external_msix_msi_function_number;

  // action method pcie_in_pcie4_cfg_external_msix_msi_sent
  input  pcie_in_pcie4_cfg_external_msix_msi_sent;

  // value method pcie_in_pcie4_cfg_interrupt_intrpt
  output [3 : 0] pcie_in_pcie4_cfg_interrupt_intrpt;

  // value method pcie_in_pcie4_cfg_interrupt_pending
  output [3 : 0] pcie_in_pcie4_cfg_interrupt_pending;

  // action method pcie_in_pcie4_cfg_interrupt_sent
  input  pcie_in_pcie4_cfg_interrupt_sent;

  // action method pcie_in_pcie4_cfg_control_bus_number
  input  [7 : 0] pcie_in_pcie4_cfg_control_bus_number;

  // value method pcie_in_pcie4_cfg_control_config_space_enable
  output pcie_in_pcie4_cfg_control_config_space_enable;

  // value method pcie_in_pcie4_cfg_control_ds_bus_number
  output [7 : 0] pcie_in_pcie4_cfg_control_ds_bus_number;

  // value method pcie_in_pcie4_cfg_control_ds_device_number
  output [4 : 0] pcie_in_pcie4_cfg_control_ds_device_number;

  // value method pcie_in_pcie4_cfg_control_ds_port_number
  output [7 : 0] pcie_in_pcie4_cfg_control_ds_port_number;

  // value method pcie_in_pcie4_cfg_control_dsn
  output [63 : 0] pcie_in_pcie4_cfg_control_dsn;

  // value method pcie_in_pcie4_cfg_control_err_cor_in
  output pcie_in_pcie4_cfg_control_err_cor_in;

  // value method pcie_in_pcie4_cfg_control_err_uncor_in
  output pcie_in_pcie4_cfg_control_err_uncor_in;

  // value method pcie_in_pcie4_cfg_control_flr_done
  output [3 : 0] pcie_in_pcie4_cfg_control_flr_done;

  // action method pcie_in_pcie4_cfg_control_flr_in_process
  input  pcie_in_pcie4_cfg_control_flr_in_process;

  // value method pcie_in_pcie4_cfg_control_hot_reset_in
  output pcie_in_pcie4_cfg_control_hot_reset_in;

  // action method pcie_in_pcie4_cfg_control_hot_reset_out
  input  pcie_in_pcie4_cfg_control_hot_reset_out;

  // value method pcie_in_pcie4_cfg_control_link_training_enable
  output pcie_in_pcie4_cfg_control_link_training_enable;

  // value method pcie_in_pcie4_cfg_control_power_state_change_ack
  output pcie_in_pcie4_cfg_control_power_state_change_ack;

  // action method pcie_in_pcie4_cfg_control_power_state_change_interrupt
  input  pcie_in_pcie4_cfg_control_power_state_change_interrupt;

  // value method pcie_in_pcie4_cfg_control_req_pm_transition_l23_ready
  output pcie_in_pcie4_cfg_control_req_pm_transition_l23_ready;

  // value method pcie_in_pcie4_cfg_control_vf_flr_done
  output pcie_in_pcie4_cfg_control_vf_flr_done;

  // value method pcie_in_pcie4_cfg_control_vf_flr_func_num
  output [7 : 0] pcie_in_pcie4_cfg_control_vf_flr_func_num;

  // action method pcie_in_pcie4_cfg_control_vf_flr_in_process
  input  [251 : 0] pcie_in_pcie4_cfg_control_vf_flr_in_process;

  // action method pcie_in_pcie4_cfg_fc_cpld
  input  [11 : 0] pcie_in_pcie4_cfg_fc_cpld;

  // action method pcie_in_pcie4_cfg_fc_cplh
  input  [7 : 0] pcie_in_pcie4_cfg_fc_cplh;

  // action method pcie_in_pcie4_cfg_fc_npd
  input  [11 : 0] pcie_in_pcie4_cfg_fc_npd;

  // action method pcie_in_pcie4_cfg_fc_nph
  input  [7 : 0] pcie_in_pcie4_cfg_fc_nph;

  // action method pcie_in_pcie4_cfg_fc_pd
  input  [11 : 0] pcie_in_pcie4_cfg_fc_pd;

  // action method pcie_in_pcie4_cfg_fc_ph
  input  [7 : 0] pcie_in_pcie4_cfg_fc_ph;

  // value method pcie_in_pcie4_cfg_fc_sel
  output [2 : 0] pcie_in_pcie4_cfg_fc_sel;

  // value method pcie_in_pcie4_cfg_mesg_tx_transmit
  output pcie_in_pcie4_cfg_mesg_tx_transmit;

  // value method pcie_in_pcie4_cfg_mesg_tx_transmit_data
  output [31 : 0] pcie_in_pcie4_cfg_mesg_tx_transmit_data;

  // action method pcie_in_pcie4_cfg_mesg_tx_transmit_done
  input  pcie_in_pcie4_cfg_mesg_tx_transmit_done;

  // value method pcie_in_pcie4_cfg_mesg_tx_transmit_type
  output [2 : 0] pcie_in_pcie4_cfg_mesg_tx_transmit_type;

  // action method pcie_in_pcie4_cfg_mesg_rcvd_received
  input  pcie_in_pcie4_cfg_mesg_rcvd_received;

  // action method pcie_in_pcie4_cfg_mesg_rcvd_received_data
  input  [7 : 0] pcie_in_pcie4_cfg_mesg_rcvd_received_data;

  // action method pcie_in_pcie4_cfg_mesg_rcvd_received_type
  input  [4 : 0] pcie_in_pcie4_cfg_mesg_rcvd_received_type;

  // value method pcie_in_pcie4_cfg_status_pcie_cq_np_req
  output [1 : 0] pcie_in_pcie4_cfg_status_pcie_cq_np_req;

  // action method pcie_in_pcie4_cfg_status_pcie_cq_np_req_count
  input  [5 : 0] pcie_in_pcie4_cfg_status_pcie_cq_np_req_count;

  // action method pcie_in_pcie4_cfg_status_current_speed
  input  [1 : 0] pcie_in_pcie4_cfg_status_current_speed;

  // action method pcie_in_pcie4_cfg_status_err_cor_out
  input  pcie_in_pcie4_cfg_status_err_cor_out;

  // action method pcie_in_pcie4_cfg_status_err_fatal_out
  input  pcie_in_pcie4_cfg_status_err_fatal_out;

  // action method pcie_in_pcie4_cfg_status_err_nonfatal_out
  input  pcie_in_pcie4_cfg_status_err_nonfatal_out;

  // action method pcie_in_pcie4_cfg_status_funstion_power_state
  input  [11 : 0] pcie_in_pcie4_cfg_status_funstion_power_state;

  // action method pcie_in_pcie4_cfg_status_function_status
  input  [15 : 0] pcie_in_pcie4_cfg_status_function_status;

  // action method pcie_in_pcie4_cfg_status_link_power_state
  input  [1 : 0] pcie_in_pcie4_cfg_status_link_power_state;

  // action method pcie_in_pcie4_cfg_status_local_error_out
  input  [4 : 0] pcie_in_pcie4_cfg_status_local_error_out;

  // action method pcie_in_pcie4_cfg_status_local_error_valid
  input  pcie_in_pcie4_cfg_status_local_error_valid;

  // action method pcie_in_pcie4_cfg_status_ltssm_state
  input  [5 : 0] pcie_in_pcie4_cfg_status_ltssm_state;

  // action method pcie_in_pcie4_cfg_status_max_payload
  input  [1 : 0] pcie_in_pcie4_cfg_status_max_payload;

  // action method pcie_in_pcie4_cfg_status_max_read_req
  input  [2 : 0] pcie_in_pcie4_cfg_status_max_read_req;

  // action method pcie_in_pcie4_cfg_status_negotiated_width
  input  [2 : 0] pcie_in_pcie4_cfg_status_negotiated_width;

  // action method pcie_in_pcie4_cfg_status_obff_enable
  input  [1 : 0] pcie_in_pcie4_cfg_status_obff_enable;

  // action method pcie_in_pcie4_cfg_status_phy_link_down
  input  pcie_in_pcie4_cfg_status_phy_link_down;

  // action method pcie_in_pcie4_cfg_status_phy_link_status
  input  [1 : 0] pcie_in_pcie4_cfg_status_phy_link_status;

  // action method pcie_in_pcie4_cfg_status_pl_status_change
  input  pcie_in_pcie4_cfg_status_pl_status_change;

  // action method pcie_in_pcie4_cfg_status_rcb_status
  input  [3 : 0] pcie_in_pcie4_cfg_status_rcb_status;

  // action method pcie_in_pcie4_cfg_status_rq_seq_num0
  input  [5 : 0] pcie_in_pcie4_cfg_status_rq_seq_num0;

  // action method pcie_in_pcie4_cfg_status_rq_seq_num1
  input  [5 : 0] pcie_in_pcie4_cfg_status_rq_seq_num1;

  // action method pcie_in_pcie4_cfg_status_rq_seq_num_vld0
  input  pcie_in_pcie4_cfg_status_rq_seq_num_vld0;

  // action method pcie_in_pcie4_cfg_status_rq_seq_num_vld1
  input  pcie_in_pcie4_cfg_status_rq_seq_num_vld1;

  // action method pcie_in_pcie4_cfg_status_rq_tag0
  input  [7 : 0] pcie_in_pcie4_cfg_status_rq_tag0;

  // action method pcie_in_pcie4_cfg_status_rq_tag1
  input  [7 : 0] pcie_in_pcie4_cfg_status_rq_tag1;

  // action method pcie_in_pcie4_cfg_status_rq_tag_av
  input  [3 : 0] pcie_in_pcie4_cfg_status_rq_tag_av;

  // action method pcie_in_pcie4_cfg_status_rq_tag_vld0
  input  pcie_in_pcie4_cfg_status_rq_tag_vld0;

  // action method pcie_in_pcie4_cfg_status_rq_tag_vld1
  input  pcie_in_pcie4_cfg_status_rq_tag_vld1;

  // action method pcie_in_pcie4_cfg_status_rx_pm_state
  input  [1 : 0] pcie_in_pcie4_cfg_status_rx_pm_state;

  // action method pcie_in_pcie4_cfg_status_tfc_npd_av
  input  [3 : 0] pcie_in_pcie4_cfg_status_tfc_npd_av;

  // action method pcie_in_pcie4_cfg_status_tfc_nph_av
  input  [3 : 0] pcie_in_pcie4_cfg_status_tfc_nph_av;

  // action method pcie_in_pcie4_cfg_status_tph_requester_enable
  input  [3 : 0] pcie_in_pcie4_cfg_status_tph_requester_enable;

  // action method pcie_in_pcie4_cfg_status_tph_st_mode
  input  [11 : 0] pcie_in_pcie4_cfg_status_tph_st_mode;

  // action method pcie_in_pcie4_cfg_status_tx_pm_state
  input  [1 : 0] pcie_in_pcie4_cfg_status_tx_pm_state;

  // action method pcie_in_pcie4_cfg_status_vf_power_state
  input  [755 : 0] pcie_in_pcie4_cfg_status_vf_power_state;

  // action method pcie_in_pcie4_cfg_status_vf_status
  input  [503 : 0] pcie_in_pcie4_cfg_status_vf_status;

  // action method pcie_in_pcie4_cfg_status_vf_tph_requester_enable
  input  [251 : 0] pcie_in_pcie4_cfg_status_vf_tph_requester_enable;

  // action method pcie_in_pcie4_cfg_status_vf_tph_st_mode
  input  [755 : 0] pcie_in_pcie4_cfg_status_vf_tph_st_mode;

  // action method pcie_in_pcie4_user_link_up
  input  pcie_in_pcie4_user_link_up;

  // action method pcie_in_pcie4_phy_rdy_out
  input  pcie_in_pcie4_phy_rdy_out;

  // actionvalue method cq_recv_get
  input  EN_cq_recv_get;
  output [75 : 0] cq_recv_get;
  output RDY_cq_recv_get;

  // action method cc_xmit_put
  input  [66 : 0] cc_xmit_put;
  input  EN_cc_xmit_put;
  output RDY_cc_xmit_put;

  // action method rq_xmit_put
  input  [74 : 0] rq_xmit_put;
  input  EN_rq_xmit_put;
  output RDY_rq_xmit_put;

  // actionvalue method rc_recv_get
  input  EN_rc_recv_get;
  output [75 : 0] rc_recv_get;
  output RDY_rc_recv_get;

  // value method status_lnk_up
  output status_lnk_up;

  // value method status_max_payload
  output [1 : 0] status_max_payload;

  // value method status_max_read_req
  output [2 : 0] status_max_read_req;

  // value method status_rcb_status
  output [3 : 0] status_rcb_status;

  // value method status_function_status
  output [15 : 0] status_function_status;

  // value method cfg_interrupt_msix_enabled
  output [3 : 0] cfg_interrupt_msix_enabled;

  // value method cfg_interrupt_msix_mask
  output [3 : 0] cfg_interrupt_msix_mask;

  // signals for module outputs
  wire [75 : 0] cq_recv_get, rc_recv_get;
  wire [63 : 0] pcie_in_m_axis_cc_tdata,
		pcie_in_m_axis_rq_tdata,
		pcie_in_pcie4_cfg_control_dsn,
		pcie_in_pcie4_cfg_external_msix_msix_address;
  wire [61 : 0] pcie_in_m_axis_rq_tuser;
  wire [32 : 0] pcie_in_m_axis_cc_tuser;
  wire [31 : 0] pcie_in_pcie4_cfg_external_msix_msix_data,
		pcie_in_pcie4_cfg_mesg_tx_transmit_data,
		pcie_in_pcie4_cfg_mgmt_write_data;
  wire [15 : 0] status_function_status;
  wire [9 : 0] pcie_in_pcie4_cfg_mgmt_addr;
  wire [7 : 0] pcie_in_pcie4_cfg_control_ds_bus_number,
	       pcie_in_pcie4_cfg_control_ds_port_number,
	       pcie_in_pcie4_cfg_control_vf_flr_func_num,
	       pcie_in_pcie4_cfg_external_msix_msi_function_number,
	       pcie_in_pcie4_cfg_mgmt_function_number;
  wire [4 : 0] pcie_in_pcie4_cfg_control_ds_device_number;
  wire [3 : 0] cfg_interrupt_msix_enabled,
	       cfg_interrupt_msix_mask,
	       pcie_in_pcie4_cfg_control_flr_done,
	       pcie_in_pcie4_cfg_interrupt_intrpt,
	       pcie_in_pcie4_cfg_interrupt_pending,
	       pcie_in_pcie4_cfg_mgmt_byte_enable,
	       status_rcb_status;
  wire [2 : 0] pcie_in_pcie4_cfg_fc_sel,
	       pcie_in_pcie4_cfg_mesg_tx_transmit_type,
	       status_max_read_req;
  wire [1 : 0] pcie_in_m_axis_cc_tkeep,
	       pcie_in_m_axis_rq_tkeep,
	       pcie_in_pcie4_cfg_external_msix_msix_vec_pending,
	       pcie_in_pcie4_cfg_status_pcie_cq_np_req,
	       status_max_payload;
  wire RDY_cc_xmit_put,
       RDY_cq_recv_get,
       RDY_rc_recv_get,
       RDY_rq_xmit_put,
       pcie_in_m_axis_cc_tlast,
       pcie_in_m_axis_cc_tvalid,
       pcie_in_m_axis_rq_tlast,
       pcie_in_m_axis_rq_tvalid,
       pcie_in_pcie4_cfg_control_config_space_enable,
       pcie_in_pcie4_cfg_control_err_cor_in,
       pcie_in_pcie4_cfg_control_err_uncor_in,
       pcie_in_pcie4_cfg_control_hot_reset_in,
       pcie_in_pcie4_cfg_control_link_training_enable,
       pcie_in_pcie4_cfg_control_power_state_change_ack,
       pcie_in_pcie4_cfg_control_req_pm_transition_l23_ready,
       pcie_in_pcie4_cfg_control_vf_flr_done,
       pcie_in_pcie4_cfg_external_msix_msix_intrpt,
       pcie_in_pcie4_cfg_mesg_tx_transmit,
       pcie_in_pcie4_cfg_mgmt_debug_access,
       pcie_in_pcie4_cfg_mgmt_read,
       pcie_in_pcie4_cfg_mgmt_write,
       pcie_in_pcie4_cfg_pm_aspm_l1_entry_reject,
       pcie_in_pcie4_cfg_pm_aspm_tx_10s_entry_disable,
       pcie_in_s_axis_cq_tready,
       pcie_in_s_axis_rc_tready,
       status_lnk_up;

  // inlined wires
  wire [76 : 0] fAxiCq_rv$port0__write_1,
		fAxiCq_rv$port1__read,
		fAxiCq_rv$port2__read,
		fAxiRc_rv$port0__write_1,
		fAxiRc_rv$port1__read,
		fAxiRc_rv$port2__read;
  wire [74 : 0] fAxiRq_data_buf_wDataOut$wget;
  wire [66 : 0] fAxiCc_data_buf_wDataOut$wget;

  // register fAxiCc_data_buf_rCache
  reg [78 : 0] fAxiCc_data_buf_rCache;
  wire [78 : 0] fAxiCc_data_buf_rCache$D_IN;
  wire fAxiCc_data_buf_rCache$EN;

  // register fAxiCc_data_buf_rRdPtr
  reg [10 : 0] fAxiCc_data_buf_rRdPtr;
  wire [10 : 0] fAxiCc_data_buf_rRdPtr$D_IN;
  wire fAxiCc_data_buf_rRdPtr$EN;

  // register fAxiCc_data_buf_rWrPtr
  reg [10 : 0] fAxiCc_data_buf_rWrPtr;
  wire [10 : 0] fAxiCc_data_buf_rWrPtr$D_IN;
  wire fAxiCc_data_buf_rWrPtr$EN;

  // register fAxiCq_rv
  reg [76 : 0] fAxiCq_rv;
  wire [76 : 0] fAxiCq_rv$D_IN;
  wire fAxiCq_rv$EN;

  // register fAxiRc_rv
  reg [76 : 0] fAxiRc_rv;
  wire [76 : 0] fAxiRc_rv$D_IN;
  wire fAxiRc_rv$EN;

  // register fAxiRq_data_buf_rCache
  reg [84 : 0] fAxiRq_data_buf_rCache;
  wire [84 : 0] fAxiRq_data_buf_rCache$D_IN;
  wire fAxiRq_data_buf_rCache$EN;

  // register fAxiRq_data_buf_rRdPtr
  reg [8 : 0] fAxiRq_data_buf_rRdPtr;
  wire [8 : 0] fAxiRq_data_buf_rRdPtr$D_IN;
  wire fAxiRq_data_buf_rRdPtr$EN;

  // register fAxiRq_data_buf_rWrPtr
  reg [8 : 0] fAxiRq_data_buf_rWrPtr;
  wire [8 : 0] fAxiRq_data_buf_rWrPtr$D_IN;
  wire fAxiRq_data_buf_rWrPtr$EN;

  // ports of submodule fAxiCc_data_buf_memory
  wire [66 : 0] fAxiCc_data_buf_memory$DIA,
		fAxiCc_data_buf_memory$DIB,
		fAxiCc_data_buf_memory$DOB;
  wire [9 : 0] fAxiCc_data_buf_memory$ADDRA, fAxiCc_data_buf_memory$ADDRB;
  wire fAxiCc_data_buf_memory$ENA,
       fAxiCc_data_buf_memory$ENB,
       fAxiCc_data_buf_memory$WEA,
       fAxiCc_data_buf_memory$WEB;

  // ports of submodule fAxiCc_eof_buf
  wire fAxiCc_eof_buf$CLR,
       fAxiCc_eof_buf$DEQ,
       fAxiCc_eof_buf$EMPTY_N,
       fAxiCc_eof_buf$ENQ,
       fAxiCc_eof_buf$FULL_N;

  // ports of submodule fAxiCc_in_buf
  wire [66 : 0] fAxiCc_in_buf$D_IN, fAxiCc_in_buf$D_OUT;
  wire fAxiCc_in_buf$CLR,
       fAxiCc_in_buf$DEQ,
       fAxiCc_in_buf$EMPTY_N,
       fAxiCc_in_buf$ENQ,
       fAxiCc_in_buf$FULL_N;

  // ports of submodule fAxiCc_out_buf
  wire [66 : 0] fAxiCc_out_buf$D_IN, fAxiCc_out_buf$D_OUT;
  wire fAxiCc_out_buf$CLR,
       fAxiCc_out_buf$DEQ,
       fAxiCc_out_buf$EMPTY_N,
       fAxiCc_out_buf$ENQ,
       fAxiCc_out_buf$FULL_N;

  // ports of submodule fAxiRq_data_buf_memory
  wire [74 : 0] fAxiRq_data_buf_memory$DIA,
		fAxiRq_data_buf_memory$DIB,
		fAxiRq_data_buf_memory$DOB;
  wire [7 : 0] fAxiRq_data_buf_memory$ADDRA, fAxiRq_data_buf_memory$ADDRB;
  wire fAxiRq_data_buf_memory$ENA,
       fAxiRq_data_buf_memory$ENB,
       fAxiRq_data_buf_memory$WEA,
       fAxiRq_data_buf_memory$WEB;

  // ports of submodule fAxiRq_eof_buf
  wire fAxiRq_eof_buf$CLR,
       fAxiRq_eof_buf$DEQ,
       fAxiRq_eof_buf$EMPTY_N,
       fAxiRq_eof_buf$ENQ,
       fAxiRq_eof_buf$FULL_N;

  // ports of submodule fAxiRq_in_buf
  wire [74 : 0] fAxiRq_in_buf$D_IN, fAxiRq_in_buf$D_OUT;
  wire fAxiRq_in_buf$CLR,
       fAxiRq_in_buf$DEQ,
       fAxiRq_in_buf$EMPTY_N,
       fAxiRq_in_buf$ENQ,
       fAxiRq_in_buf$FULL_N;

  // ports of submodule fAxiRq_out_buf
  wire [74 : 0] fAxiRq_out_buf$D_IN, fAxiRq_out_buf$D_OUT;
  wire fAxiRq_out_buf$CLR,
       fAxiRq_out_buf$DEQ,
       fAxiRq_out_buf$EMPTY_N,
       fAxiRq_out_buf$ENQ,
       fAxiRq_out_buf$FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_drainCqWires,
       CAN_FIRE_RL_drainRcWires,
       CAN_FIRE_RL_driveCCWires,
       CAN_FIRE_RL_driveRQWires,
       CAN_FIRE_RL_fAxiCc_data_buf_portA,
       CAN_FIRE_RL_fAxiCc_data_buf_portB,
       CAN_FIRE_RL_fAxiCc_data_buf_portB_read_data,
       CAN_FIRE_RL_fAxiCc_moveIn,
       CAN_FIRE_RL_fAxiCc_moveOut,
       CAN_FIRE_RL_fAxiRq_data_buf_portA,
       CAN_FIRE_RL_fAxiRq_data_buf_portB,
       CAN_FIRE_RL_fAxiRq_data_buf_portB_read_data,
       CAN_FIRE_RL_fAxiRq_moveIn,
       CAN_FIRE_RL_fAxiRq_moveOut,
       CAN_FIRE_cc_xmit_put,
       CAN_FIRE_cq_recv_get,
       CAN_FIRE_pcie_in_m_axis_cc_m_tready,
       CAN_FIRE_pcie_in_m_axis_rq_m_tready,
       CAN_FIRE_pcie_in_pcie4_cfg_control_bus_number,
       CAN_FIRE_pcie_in_pcie4_cfg_control_flr_in_process,
       CAN_FIRE_pcie_in_pcie4_cfg_control_hot_reset_out,
       CAN_FIRE_pcie_in_pcie4_cfg_control_power_state_change_interrupt,
       CAN_FIRE_pcie_in_pcie4_cfg_control_vf_flr_in_process,
       CAN_FIRE_pcie_in_pcie4_cfg_external_msix_msi_fail,
       CAN_FIRE_pcie_in_pcie4_cfg_external_msix_msi_sent,
       CAN_FIRE_pcie_in_pcie4_cfg_external_msix_msix_msix_enable,
       CAN_FIRE_pcie_in_pcie4_cfg_external_msix_msix_msix_mask,
       CAN_FIRE_pcie_in_pcie4_cfg_external_msix_msix_vec_pending_status,
       CAN_FIRE_pcie_in_pcie4_cfg_external_msix_msix_vf_enable,
       CAN_FIRE_pcie_in_pcie4_cfg_external_msix_msix_vf_mask,
       CAN_FIRE_pcie_in_pcie4_cfg_fc_cpld,
       CAN_FIRE_pcie_in_pcie4_cfg_fc_cplh,
       CAN_FIRE_pcie_in_pcie4_cfg_fc_npd,
       CAN_FIRE_pcie_in_pcie4_cfg_fc_nph,
       CAN_FIRE_pcie_in_pcie4_cfg_fc_pd,
       CAN_FIRE_pcie_in_pcie4_cfg_fc_ph,
       CAN_FIRE_pcie_in_pcie4_cfg_interrupt_sent,
       CAN_FIRE_pcie_in_pcie4_cfg_mesg_rcvd_received,
       CAN_FIRE_pcie_in_pcie4_cfg_mesg_rcvd_received_data,
       CAN_FIRE_pcie_in_pcie4_cfg_mesg_rcvd_received_type,
       CAN_FIRE_pcie_in_pcie4_cfg_mesg_tx_transmit_done,
       CAN_FIRE_pcie_in_pcie4_cfg_mgmt_read_data,
       CAN_FIRE_pcie_in_pcie4_cfg_mgmt_read_write_done,
       CAN_FIRE_pcie_in_pcie4_cfg_status_current_speed,
       CAN_FIRE_pcie_in_pcie4_cfg_status_err_cor_out,
       CAN_FIRE_pcie_in_pcie4_cfg_status_err_fatal_out,
       CAN_FIRE_pcie_in_pcie4_cfg_status_err_nonfatal_out,
       CAN_FIRE_pcie_in_pcie4_cfg_status_function_status,
       CAN_FIRE_pcie_in_pcie4_cfg_status_funstion_power_state,
       CAN_FIRE_pcie_in_pcie4_cfg_status_link_power_state,
       CAN_FIRE_pcie_in_pcie4_cfg_status_local_error_out,
       CAN_FIRE_pcie_in_pcie4_cfg_status_local_error_valid,
       CAN_FIRE_pcie_in_pcie4_cfg_status_ltssm_state,
       CAN_FIRE_pcie_in_pcie4_cfg_status_max_payload,
       CAN_FIRE_pcie_in_pcie4_cfg_status_max_read_req,
       CAN_FIRE_pcie_in_pcie4_cfg_status_negotiated_width,
       CAN_FIRE_pcie_in_pcie4_cfg_status_obff_enable,
       CAN_FIRE_pcie_in_pcie4_cfg_status_pcie_cq_np_req_count,
       CAN_FIRE_pcie_in_pcie4_cfg_status_phy_link_down,
       CAN_FIRE_pcie_in_pcie4_cfg_status_phy_link_status,
       CAN_FIRE_pcie_in_pcie4_cfg_status_pl_status_change,
       CAN_FIRE_pcie_in_pcie4_cfg_status_rcb_status,
       CAN_FIRE_pcie_in_pcie4_cfg_status_rq_seq_num0,
       CAN_FIRE_pcie_in_pcie4_cfg_status_rq_seq_num1,
       CAN_FIRE_pcie_in_pcie4_cfg_status_rq_seq_num_vld0,
       CAN_FIRE_pcie_in_pcie4_cfg_status_rq_seq_num_vld1,
       CAN_FIRE_pcie_in_pcie4_cfg_status_rq_tag0,
       CAN_FIRE_pcie_in_pcie4_cfg_status_rq_tag1,
       CAN_FIRE_pcie_in_pcie4_cfg_status_rq_tag_av,
       CAN_FIRE_pcie_in_pcie4_cfg_status_rq_tag_vld0,
       CAN_FIRE_pcie_in_pcie4_cfg_status_rq_tag_vld1,
       CAN_FIRE_pcie_in_pcie4_cfg_status_rx_pm_state,
       CAN_FIRE_pcie_in_pcie4_cfg_status_tfc_npd_av,
       CAN_FIRE_pcie_in_pcie4_cfg_status_tfc_nph_av,
       CAN_FIRE_pcie_in_pcie4_cfg_status_tph_requester_enable,
       CAN_FIRE_pcie_in_pcie4_cfg_status_tph_st_mode,
       CAN_FIRE_pcie_in_pcie4_cfg_status_tx_pm_state,
       CAN_FIRE_pcie_in_pcie4_cfg_status_vf_power_state,
       CAN_FIRE_pcie_in_pcie4_cfg_status_vf_status,
       CAN_FIRE_pcie_in_pcie4_cfg_status_vf_tph_requester_enable,
       CAN_FIRE_pcie_in_pcie4_cfg_status_vf_tph_st_mode,
       CAN_FIRE_pcie_in_pcie4_phy_rdy_out,
       CAN_FIRE_pcie_in_pcie4_user_link_up,
       CAN_FIRE_pcie_in_s_axis_cq_m_tvalid,
       CAN_FIRE_pcie_in_s_axis_rc_m_tvalid,
       CAN_FIRE_rc_recv_get,
       CAN_FIRE_rq_xmit_put,
       WILL_FIRE_RL_drainCqWires,
       WILL_FIRE_RL_drainRcWires,
       WILL_FIRE_RL_driveCCWires,
       WILL_FIRE_RL_driveRQWires,
       WILL_FIRE_RL_fAxiCc_data_buf_portA,
       WILL_FIRE_RL_fAxiCc_data_buf_portB,
       WILL_FIRE_RL_fAxiCc_data_buf_portB_read_data,
       WILL_FIRE_RL_fAxiCc_moveIn,
       WILL_FIRE_RL_fAxiCc_moveOut,
       WILL_FIRE_RL_fAxiRq_data_buf_portA,
       WILL_FIRE_RL_fAxiRq_data_buf_portB,
       WILL_FIRE_RL_fAxiRq_data_buf_portB_read_data,
       WILL_FIRE_RL_fAxiRq_moveIn,
       WILL_FIRE_RL_fAxiRq_moveOut,
       WILL_FIRE_cc_xmit_put,
       WILL_FIRE_cq_recv_get,
       WILL_FIRE_pcie_in_m_axis_cc_m_tready,
       WILL_FIRE_pcie_in_m_axis_rq_m_tready,
       WILL_FIRE_pcie_in_pcie4_cfg_control_bus_number,
       WILL_FIRE_pcie_in_pcie4_cfg_control_flr_in_process,
       WILL_FIRE_pcie_in_pcie4_cfg_control_hot_reset_out,
       WILL_FIRE_pcie_in_pcie4_cfg_control_power_state_change_interrupt,
       WILL_FIRE_pcie_in_pcie4_cfg_control_vf_flr_in_process,
       WILL_FIRE_pcie_in_pcie4_cfg_external_msix_msi_fail,
       WILL_FIRE_pcie_in_pcie4_cfg_external_msix_msi_sent,
       WILL_FIRE_pcie_in_pcie4_cfg_external_msix_msix_msix_enable,
       WILL_FIRE_pcie_in_pcie4_cfg_external_msix_msix_msix_mask,
       WILL_FIRE_pcie_in_pcie4_cfg_external_msix_msix_vec_pending_status,
       WILL_FIRE_pcie_in_pcie4_cfg_external_msix_msix_vf_enable,
       WILL_FIRE_pcie_in_pcie4_cfg_external_msix_msix_vf_mask,
       WILL_FIRE_pcie_in_pcie4_cfg_fc_cpld,
       WILL_FIRE_pcie_in_pcie4_cfg_fc_cplh,
       WILL_FIRE_pcie_in_pcie4_cfg_fc_npd,
       WILL_FIRE_pcie_in_pcie4_cfg_fc_nph,
       WILL_FIRE_pcie_in_pcie4_cfg_fc_pd,
       WILL_FIRE_pcie_in_pcie4_cfg_fc_ph,
       WILL_FIRE_pcie_in_pcie4_cfg_interrupt_sent,
       WILL_FIRE_pcie_in_pcie4_cfg_mesg_rcvd_received,
       WILL_FIRE_pcie_in_pcie4_cfg_mesg_rcvd_received_data,
       WILL_FIRE_pcie_in_pcie4_cfg_mesg_rcvd_received_type,
       WILL_FIRE_pcie_in_pcie4_cfg_mesg_tx_transmit_done,
       WILL_FIRE_pcie_in_pcie4_cfg_mgmt_read_data,
       WILL_FIRE_pcie_in_pcie4_cfg_mgmt_read_write_done,
       WILL_FIRE_pcie_in_pcie4_cfg_status_current_speed,
       WILL_FIRE_pcie_in_pcie4_cfg_status_err_cor_out,
       WILL_FIRE_pcie_in_pcie4_cfg_status_err_fatal_out,
       WILL_FIRE_pcie_in_pcie4_cfg_status_err_nonfatal_out,
       WILL_FIRE_pcie_in_pcie4_cfg_status_function_status,
       WILL_FIRE_pcie_in_pcie4_cfg_status_funstion_power_state,
       WILL_FIRE_pcie_in_pcie4_cfg_status_link_power_state,
       WILL_FIRE_pcie_in_pcie4_cfg_status_local_error_out,
       WILL_FIRE_pcie_in_pcie4_cfg_status_local_error_valid,
       WILL_FIRE_pcie_in_pcie4_cfg_status_ltssm_state,
       WILL_FIRE_pcie_in_pcie4_cfg_status_max_payload,
       WILL_FIRE_pcie_in_pcie4_cfg_status_max_read_req,
       WILL_FIRE_pcie_in_pcie4_cfg_status_negotiated_width,
       WILL_FIRE_pcie_in_pcie4_cfg_status_obff_enable,
       WILL_FIRE_pcie_in_pcie4_cfg_status_pcie_cq_np_req_count,
       WILL_FIRE_pcie_in_pcie4_cfg_status_phy_link_down,
       WILL_FIRE_pcie_in_pcie4_cfg_status_phy_link_status,
       WILL_FIRE_pcie_in_pcie4_cfg_status_pl_status_change,
       WILL_FIRE_pcie_in_pcie4_cfg_status_rcb_status,
       WILL_FIRE_pcie_in_pcie4_cfg_status_rq_seq_num0,
       WILL_FIRE_pcie_in_pcie4_cfg_status_rq_seq_num1,
       WILL_FIRE_pcie_in_pcie4_cfg_status_rq_seq_num_vld0,
       WILL_FIRE_pcie_in_pcie4_cfg_status_rq_seq_num_vld1,
       WILL_FIRE_pcie_in_pcie4_cfg_status_rq_tag0,
       WILL_FIRE_pcie_in_pcie4_cfg_status_rq_tag1,
       WILL_FIRE_pcie_in_pcie4_cfg_status_rq_tag_av,
       WILL_FIRE_pcie_in_pcie4_cfg_status_rq_tag_vld0,
       WILL_FIRE_pcie_in_pcie4_cfg_status_rq_tag_vld1,
       WILL_FIRE_pcie_in_pcie4_cfg_status_rx_pm_state,
       WILL_FIRE_pcie_in_pcie4_cfg_status_tfc_npd_av,
       WILL_FIRE_pcie_in_pcie4_cfg_status_tfc_nph_av,
       WILL_FIRE_pcie_in_pcie4_cfg_status_tph_requester_enable,
       WILL_FIRE_pcie_in_pcie4_cfg_status_tph_st_mode,
       WILL_FIRE_pcie_in_pcie4_cfg_status_tx_pm_state,
       WILL_FIRE_pcie_in_pcie4_cfg_status_vf_power_state,
       WILL_FIRE_pcie_in_pcie4_cfg_status_vf_status,
       WILL_FIRE_pcie_in_pcie4_cfg_status_vf_tph_requester_enable,
       WILL_FIRE_pcie_in_pcie4_cfg_status_vf_tph_st_mode,
       WILL_FIRE_pcie_in_pcie4_phy_rdy_out,
       WILL_FIRE_pcie_in_pcie4_user_link_up,
       WILL_FIRE_pcie_in_s_axis_cq_m_tvalid,
       WILL_FIRE_pcie_in_s_axis_rc_m_tvalid,
       WILL_FIRE_rc_recv_get,
       WILL_FIRE_rq_xmit_put;

  // remaining internal signals
  wire [63 : 0] x__read_data__h1848, x__read_data__h3837;
  wire [61 : 0] x_wget__h5066;
  wire [10 : 0] x__h1914, x__h2037;
  wire [8 : 0] x__h3923, x__h4060;
  wire [1 : 0] x__read_keep__h1849;

  // value method pcie_in_m_axis_cc_m_tvalid
  assign pcie_in_m_axis_cc_tvalid = fAxiCc_out_buf$EMPTY_N ;

  // value method pcie_in_m_axis_cc_m_tdata
  assign pcie_in_m_axis_cc_tdata =
	     fAxiCc_out_buf$EMPTY_N ? fAxiCc_out_buf$D_OUT[66:3] : 64'd0 ;

  // value method pcie_in_m_axis_cc_m_tkeep
  assign pcie_in_m_axis_cc_tkeep =
	     fAxiCc_out_buf$EMPTY_N ? fAxiCc_out_buf$D_OUT[2:1] : 2'd0 ;

  // value method pcie_in_m_axis_cc_m_tlast
  assign pcie_in_m_axis_cc_tlast =
	     fAxiCc_out_buf$EMPTY_N && fAxiCc_out_buf$D_OUT[0] ;

  // value method pcie_in_m_axis_cc_m_tuser
  assign pcie_in_m_axis_cc_tuser = 33'd0 ;

  // action method pcie_in_m_axis_cc_m_tready
  assign CAN_FIRE_pcie_in_m_axis_cc_m_tready = 1'd1 ;
  assign WILL_FIRE_pcie_in_m_axis_cc_m_tready = 1'd1 ;

  // value method pcie_in_m_axis_rq_m_tvalid
  assign pcie_in_m_axis_rq_tvalid = fAxiRq_out_buf$EMPTY_N ;

  // value method pcie_in_m_axis_rq_m_tdata
  assign pcie_in_m_axis_rq_tdata =
	     fAxiRq_out_buf$EMPTY_N ? fAxiRq_out_buf$D_OUT[74:11] : 64'd0 ;

  // value method pcie_in_m_axis_rq_m_tkeep
  assign pcie_in_m_axis_rq_tkeep =
	     fAxiRq_out_buf$EMPTY_N ? fAxiRq_out_buf$D_OUT[9:8] : 2'd0 ;

  // value method pcie_in_m_axis_rq_m_tlast
  assign pcie_in_m_axis_rq_tlast =
	     fAxiRq_out_buf$EMPTY_N && fAxiRq_out_buf$D_OUT[10] ;

  // value method pcie_in_m_axis_rq_m_tuser
  assign pcie_in_m_axis_rq_tuser =
	     fAxiRq_out_buf$EMPTY_N ? x_wget__h5066 : 62'd0 ;

  // action method pcie_in_m_axis_rq_m_tready
  assign CAN_FIRE_pcie_in_m_axis_rq_m_tready = 1'd1 ;
  assign WILL_FIRE_pcie_in_m_axis_rq_m_tready = 1'd1 ;

  // action method pcie_in_s_axis_cq_m_tvalid
  assign CAN_FIRE_pcie_in_s_axis_cq_m_tvalid = 1'd1 ;
  assign WILL_FIRE_pcie_in_s_axis_cq_m_tvalid = 1'd1 ;

  // value method pcie_in_s_axis_cq_m_tready
  assign pcie_in_s_axis_cq_tready = !fAxiCq_rv[76] ;

  // action method pcie_in_s_axis_rc_m_tvalid
  assign CAN_FIRE_pcie_in_s_axis_rc_m_tvalid = 1'd1 ;
  assign WILL_FIRE_pcie_in_s_axis_rc_m_tvalid = 1'd1 ;

  // value method pcie_in_s_axis_rc_m_tready
  assign pcie_in_s_axis_rc_tready = !fAxiRc_rv[76] ;

  // value method pcie_in_pcie4_cfg_mgmt_addr
  assign pcie_in_pcie4_cfg_mgmt_addr = 10'd0 ;

  // value method pcie_in_pcie4_cfg_mgmt_byte_enable
  assign pcie_in_pcie4_cfg_mgmt_byte_enable = 4'd0 ;

  // value method pcie_in_pcie4_cfg_mgmt_debug_access
  assign pcie_in_pcie4_cfg_mgmt_debug_access = 1'd0 ;

  // value method pcie_in_pcie4_cfg_mgmt_function_number
  assign pcie_in_pcie4_cfg_mgmt_function_number = 8'd0 ;

  // action method pcie_in_pcie4_cfg_mgmt_read_data
  assign CAN_FIRE_pcie_in_pcie4_cfg_mgmt_read_data = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_mgmt_read_data = 1'd1 ;

  // value method pcie_in_pcie4_cfg_mgmt_read
  assign pcie_in_pcie4_cfg_mgmt_read = 1'd0 ;

  // action method pcie_in_pcie4_cfg_mgmt_read_write_done
  assign CAN_FIRE_pcie_in_pcie4_cfg_mgmt_read_write_done = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_mgmt_read_write_done = 1'd1 ;

  // value method pcie_in_pcie4_cfg_mgmt_write_data
  assign pcie_in_pcie4_cfg_mgmt_write_data = 32'd0 ;

  // value method pcie_in_pcie4_cfg_mgmt_write
  assign pcie_in_pcie4_cfg_mgmt_write = 1'd0 ;

  // value method pcie_in_pcie4_cfg_pm_aspm_l1_entry_reject
  assign pcie_in_pcie4_cfg_pm_aspm_l1_entry_reject = 1'd0 ;

  // value method pcie_in_pcie4_cfg_pm_aspm_tx_10s_entry_disable
  assign pcie_in_pcie4_cfg_pm_aspm_tx_10s_entry_disable = 1'd0 ;

  // value method pcie_in_pcie4_cfg_external_msix_msix_address
  assign pcie_in_pcie4_cfg_external_msix_msix_address = 64'd0 ;

  // value method pcie_in_pcie4_cfg_external_msix_msix_data
  assign pcie_in_pcie4_cfg_external_msix_msix_data = 32'd0 ;

  // action method pcie_in_pcie4_cfg_external_msix_msix_msix_enable
  assign CAN_FIRE_pcie_in_pcie4_cfg_external_msix_msix_msix_enable = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_external_msix_msix_msix_enable = 1'd1 ;

  // value method pcie_in_pcie4_cfg_external_msix_msix_intrpt
  assign pcie_in_pcie4_cfg_external_msix_msix_intrpt = 1'd0 ;

  // action method pcie_in_pcie4_cfg_external_msix_msix_msix_mask
  assign CAN_FIRE_pcie_in_pcie4_cfg_external_msix_msix_msix_mask = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_external_msix_msix_msix_mask = 1'd1 ;

  // value method pcie_in_pcie4_cfg_external_msix_msix_vec_pending
  assign pcie_in_pcie4_cfg_external_msix_msix_vec_pending = 2'd0 ;

  // action method pcie_in_pcie4_cfg_external_msix_msix_vec_pending_status
  assign CAN_FIRE_pcie_in_pcie4_cfg_external_msix_msix_vec_pending_status =
	     1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_external_msix_msix_vec_pending_status =
	     1'd1 ;

  // action method pcie_in_pcie4_cfg_external_msix_msix_vf_enable
  assign CAN_FIRE_pcie_in_pcie4_cfg_external_msix_msix_vf_enable = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_external_msix_msix_vf_enable = 1'd1 ;

  // action method pcie_in_pcie4_cfg_external_msix_msix_vf_mask
  assign CAN_FIRE_pcie_in_pcie4_cfg_external_msix_msix_vf_mask = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_external_msix_msix_vf_mask = 1'd1 ;

  // action method pcie_in_pcie4_cfg_external_msix_msi_fail
  assign CAN_FIRE_pcie_in_pcie4_cfg_external_msix_msi_fail = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_external_msix_msi_fail = 1'd1 ;

  // value method pcie_in_pcie4_cfg_external_msix_msi_function_number
  assign pcie_in_pcie4_cfg_external_msix_msi_function_number = 8'd0 ;

  // action method pcie_in_pcie4_cfg_external_msix_msi_sent
  assign CAN_FIRE_pcie_in_pcie4_cfg_external_msix_msi_sent = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_external_msix_msi_sent = 1'd1 ;

  // value method pcie_in_pcie4_cfg_interrupt_intrpt
  assign pcie_in_pcie4_cfg_interrupt_intrpt = 4'd0 ;

  // value method pcie_in_pcie4_cfg_interrupt_pending
  assign pcie_in_pcie4_cfg_interrupt_pending = 4'd0 ;

  // action method pcie_in_pcie4_cfg_interrupt_sent
  assign CAN_FIRE_pcie_in_pcie4_cfg_interrupt_sent = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_interrupt_sent = 1'd1 ;

  // action method pcie_in_pcie4_cfg_control_bus_number
  assign CAN_FIRE_pcie_in_pcie4_cfg_control_bus_number = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_control_bus_number = 1'd1 ;

  // value method pcie_in_pcie4_cfg_control_config_space_enable
  assign pcie_in_pcie4_cfg_control_config_space_enable = 1'd1 ;

  // value method pcie_in_pcie4_cfg_control_ds_bus_number
  assign pcie_in_pcie4_cfg_control_ds_bus_number = 8'd0 ;

  // value method pcie_in_pcie4_cfg_control_ds_device_number
  assign pcie_in_pcie4_cfg_control_ds_device_number = 5'd0 ;

  // value method pcie_in_pcie4_cfg_control_ds_port_number
  assign pcie_in_pcie4_cfg_control_ds_port_number = 8'd0 ;

  // value method pcie_in_pcie4_cfg_control_dsn
  assign pcie_in_pcie4_cfg_control_dsn = 64'd0 ;

  // value method pcie_in_pcie4_cfg_control_err_cor_in
  assign pcie_in_pcie4_cfg_control_err_cor_in = 1'd0 ;

  // value method pcie_in_pcie4_cfg_control_err_uncor_in
  assign pcie_in_pcie4_cfg_control_err_uncor_in = 1'd0 ;

  // value method pcie_in_pcie4_cfg_control_flr_done
  assign pcie_in_pcie4_cfg_control_flr_done = 4'd0 ;

  // action method pcie_in_pcie4_cfg_control_flr_in_process
  assign CAN_FIRE_pcie_in_pcie4_cfg_control_flr_in_process = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_control_flr_in_process = 1'd1 ;

  // value method pcie_in_pcie4_cfg_control_hot_reset_in
  assign pcie_in_pcie4_cfg_control_hot_reset_in = 1'd0 ;

  // action method pcie_in_pcie4_cfg_control_hot_reset_out
  assign CAN_FIRE_pcie_in_pcie4_cfg_control_hot_reset_out = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_control_hot_reset_out = 1'd1 ;

  // value method pcie_in_pcie4_cfg_control_link_training_enable
  assign pcie_in_pcie4_cfg_control_link_training_enable = 1'd1 ;

  // value method pcie_in_pcie4_cfg_control_power_state_change_ack
  assign pcie_in_pcie4_cfg_control_power_state_change_ack = 1'd0 ;

  // action method pcie_in_pcie4_cfg_control_power_state_change_interrupt
  assign CAN_FIRE_pcie_in_pcie4_cfg_control_power_state_change_interrupt =
	     1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_control_power_state_change_interrupt =
	     1'd1 ;

  // value method pcie_in_pcie4_cfg_control_req_pm_transition_l23_ready
  assign pcie_in_pcie4_cfg_control_req_pm_transition_l23_ready = 1'd0 ;

  // value method pcie_in_pcie4_cfg_control_vf_flr_done
  assign pcie_in_pcie4_cfg_control_vf_flr_done = 1'd0 ;

  // value method pcie_in_pcie4_cfg_control_vf_flr_func_num
  assign pcie_in_pcie4_cfg_control_vf_flr_func_num = 8'd0 ;

  // action method pcie_in_pcie4_cfg_control_vf_flr_in_process
  assign CAN_FIRE_pcie_in_pcie4_cfg_control_vf_flr_in_process = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_control_vf_flr_in_process = 1'd1 ;

  // action method pcie_in_pcie4_cfg_fc_cpld
  assign CAN_FIRE_pcie_in_pcie4_cfg_fc_cpld = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_fc_cpld = 1'd1 ;

  // action method pcie_in_pcie4_cfg_fc_cplh
  assign CAN_FIRE_pcie_in_pcie4_cfg_fc_cplh = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_fc_cplh = 1'd1 ;

  // action method pcie_in_pcie4_cfg_fc_npd
  assign CAN_FIRE_pcie_in_pcie4_cfg_fc_npd = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_fc_npd = 1'd1 ;

  // action method pcie_in_pcie4_cfg_fc_nph
  assign CAN_FIRE_pcie_in_pcie4_cfg_fc_nph = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_fc_nph = 1'd1 ;

  // action method pcie_in_pcie4_cfg_fc_pd
  assign CAN_FIRE_pcie_in_pcie4_cfg_fc_pd = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_fc_pd = 1'd1 ;

  // action method pcie_in_pcie4_cfg_fc_ph
  assign CAN_FIRE_pcie_in_pcie4_cfg_fc_ph = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_fc_ph = 1'd1 ;

  // value method pcie_in_pcie4_cfg_fc_sel
  assign pcie_in_pcie4_cfg_fc_sel = 3'd0 ;

  // value method pcie_in_pcie4_cfg_mesg_tx_transmit
  assign pcie_in_pcie4_cfg_mesg_tx_transmit = 1'd0 ;

  // value method pcie_in_pcie4_cfg_mesg_tx_transmit_data
  assign pcie_in_pcie4_cfg_mesg_tx_transmit_data = 32'd0 ;

  // action method pcie_in_pcie4_cfg_mesg_tx_transmit_done
  assign CAN_FIRE_pcie_in_pcie4_cfg_mesg_tx_transmit_done = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_mesg_tx_transmit_done = 1'd1 ;

  // value method pcie_in_pcie4_cfg_mesg_tx_transmit_type
  assign pcie_in_pcie4_cfg_mesg_tx_transmit_type = 3'd0 ;

  // action method pcie_in_pcie4_cfg_mesg_rcvd_received
  assign CAN_FIRE_pcie_in_pcie4_cfg_mesg_rcvd_received = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_mesg_rcvd_received = 1'd1 ;

  // action method pcie_in_pcie4_cfg_mesg_rcvd_received_data
  assign CAN_FIRE_pcie_in_pcie4_cfg_mesg_rcvd_received_data = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_mesg_rcvd_received_data = 1'd1 ;

  // action method pcie_in_pcie4_cfg_mesg_rcvd_received_type
  assign CAN_FIRE_pcie_in_pcie4_cfg_mesg_rcvd_received_type = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_mesg_rcvd_received_type = 1'd1 ;

  // value method pcie_in_pcie4_cfg_status_pcie_cq_np_req
  assign pcie_in_pcie4_cfg_status_pcie_cq_np_req = 2'd3 ;

  // action method pcie_in_pcie4_cfg_status_pcie_cq_np_req_count
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_pcie_cq_np_req_count = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_pcie_cq_np_req_count = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_current_speed
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_current_speed = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_current_speed = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_err_cor_out
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_err_cor_out = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_err_cor_out = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_err_fatal_out
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_err_fatal_out = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_err_fatal_out = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_err_nonfatal_out
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_err_nonfatal_out = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_err_nonfatal_out = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_funstion_power_state
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_funstion_power_state = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_funstion_power_state = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_function_status
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_function_status = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_function_status = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_link_power_state
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_link_power_state = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_link_power_state = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_local_error_out
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_local_error_out = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_local_error_out = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_local_error_valid
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_local_error_valid = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_local_error_valid = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_ltssm_state
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_ltssm_state = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_ltssm_state = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_max_payload
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_max_payload = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_max_payload = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_max_read_req
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_max_read_req = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_max_read_req = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_negotiated_width
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_negotiated_width = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_negotiated_width = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_obff_enable
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_obff_enable = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_obff_enable = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_phy_link_down
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_phy_link_down = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_phy_link_down = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_phy_link_status
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_phy_link_status = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_phy_link_status = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_pl_status_change
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_pl_status_change = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_pl_status_change = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_rcb_status
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_rcb_status = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_rcb_status = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_rq_seq_num0
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_rq_seq_num0 = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_rq_seq_num0 = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_rq_seq_num1
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_rq_seq_num1 = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_rq_seq_num1 = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_rq_seq_num_vld0
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_rq_seq_num_vld0 = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_rq_seq_num_vld0 = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_rq_seq_num_vld1
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_rq_seq_num_vld1 = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_rq_seq_num_vld1 = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_rq_tag0
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_rq_tag0 = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_rq_tag0 = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_rq_tag1
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_rq_tag1 = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_rq_tag1 = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_rq_tag_av
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_rq_tag_av = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_rq_tag_av = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_rq_tag_vld0
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_rq_tag_vld0 = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_rq_tag_vld0 = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_rq_tag_vld1
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_rq_tag_vld1 = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_rq_tag_vld1 = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_rx_pm_state
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_rx_pm_state = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_rx_pm_state = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_tfc_npd_av
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_tfc_npd_av = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_tfc_npd_av = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_tfc_nph_av
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_tfc_nph_av = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_tfc_nph_av = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_tph_requester_enable
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_tph_requester_enable = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_tph_requester_enable = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_tph_st_mode
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_tph_st_mode = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_tph_st_mode = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_tx_pm_state
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_tx_pm_state = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_tx_pm_state = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_vf_power_state
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_vf_power_state = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_vf_power_state = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_vf_status
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_vf_status = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_vf_status = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_vf_tph_requester_enable
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_vf_tph_requester_enable = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_vf_tph_requester_enable = 1'd1 ;

  // action method pcie_in_pcie4_cfg_status_vf_tph_st_mode
  assign CAN_FIRE_pcie_in_pcie4_cfg_status_vf_tph_st_mode = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_cfg_status_vf_tph_st_mode = 1'd1 ;

  // action method pcie_in_pcie4_user_link_up
  assign CAN_FIRE_pcie_in_pcie4_user_link_up = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_user_link_up = 1'd1 ;

  // action method pcie_in_pcie4_phy_rdy_out
  assign CAN_FIRE_pcie_in_pcie4_phy_rdy_out = 1'd1 ;
  assign WILL_FIRE_pcie_in_pcie4_phy_rdy_out = 1'd1 ;

  // actionvalue method cq_recv_get
  assign cq_recv_get = fAxiCq_rv$port1__read[75:0] ;
  assign RDY_cq_recv_get = fAxiCq_rv$port1__read[76] ;
  assign CAN_FIRE_cq_recv_get = fAxiCq_rv$port1__read[76] ;
  assign WILL_FIRE_cq_recv_get = EN_cq_recv_get ;

  // action method cc_xmit_put
  assign RDY_cc_xmit_put = fAxiCc_in_buf$FULL_N ;
  assign CAN_FIRE_cc_xmit_put = fAxiCc_in_buf$FULL_N ;
  assign WILL_FIRE_cc_xmit_put = EN_cc_xmit_put ;

  // action method rq_xmit_put
  assign RDY_rq_xmit_put = fAxiRq_in_buf$FULL_N ;
  assign CAN_FIRE_rq_xmit_put = fAxiRq_in_buf$FULL_N ;
  assign WILL_FIRE_rq_xmit_put = EN_rq_xmit_put ;

  // actionvalue method rc_recv_get
  assign rc_recv_get = fAxiRc_rv$port1__read[75:0] ;
  assign RDY_rc_recv_get = fAxiRc_rv$port1__read[76] ;
  assign CAN_FIRE_rc_recv_get = fAxiRc_rv$port1__read[76] ;
  assign WILL_FIRE_rc_recv_get = EN_rc_recv_get ;

  // value method status_lnk_up
  assign status_lnk_up = pcie_in_pcie4_user_link_up ;

  // value method status_max_payload
  assign status_max_payload = pcie_in_pcie4_cfg_status_max_payload ;

  // value method status_max_read_req
  assign status_max_read_req = pcie_in_pcie4_cfg_status_max_read_req ;

  // value method status_rcb_status
  assign status_rcb_status = pcie_in_pcie4_cfg_status_rcb_status ;

  // value method status_function_status
  assign status_function_status = pcie_in_pcie4_cfg_status_function_status ;

  // value method cfg_interrupt_msix_enabled
  assign cfg_interrupt_msix_enabled =
	     pcie_in_pcie4_cfg_external_msix_msix_msix_enable ;

  // value method cfg_interrupt_msix_mask
  assign cfg_interrupt_msix_mask =
	     pcie_in_pcie4_cfg_external_msix_msix_msix_mask ;

  // submodule fAxiCc_data_buf_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd10),
	  .DATA_WIDTH(32'd67),
	  .MEMSIZE(11'd1024)) fAxiCc_data_buf_memory(.CLKA(CLK),
						     .CLKB(CLK),
						     .ADDRA(fAxiCc_data_buf_memory$ADDRA),
						     .ADDRB(fAxiCc_data_buf_memory$ADDRB),
						     .DIA(fAxiCc_data_buf_memory$DIA),
						     .DIB(fAxiCc_data_buf_memory$DIB),
						     .WEA(fAxiCc_data_buf_memory$WEA),
						     .WEB(fAxiCc_data_buf_memory$WEB),
						     .ENA(fAxiCc_data_buf_memory$ENA),
						     .ENB(fAxiCc_data_buf_memory$ENB),
						     .DOA(),
						     .DOB(fAxiCc_data_buf_memory$DOB));

  // submodule fAxiCc_eof_buf
  SizedFIFO0 #(.p1depth(32'd4),
	       .p2cntr_width(32'd3),
	       .guarded(32'd1)) fAxiCc_eof_buf(.RST(RST_N),
					       .CLK(CLK),
					       .ENQ(fAxiCc_eof_buf$ENQ),
					       .DEQ(fAxiCc_eof_buf$DEQ),
					       .CLR(fAxiCc_eof_buf$CLR),
					       .FULL_N(fAxiCc_eof_buf$FULL_N),
					       .EMPTY_N(fAxiCc_eof_buf$EMPTY_N));

  // submodule fAxiCc_in_buf
  FIFO2 #(.width(32'd67), .guarded(32'd1)) fAxiCc_in_buf(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(fAxiCc_in_buf$D_IN),
							 .ENQ(fAxiCc_in_buf$ENQ),
							 .DEQ(fAxiCc_in_buf$DEQ),
							 .CLR(fAxiCc_in_buf$CLR),
							 .D_OUT(fAxiCc_in_buf$D_OUT),
							 .FULL_N(fAxiCc_in_buf$FULL_N),
							 .EMPTY_N(fAxiCc_in_buf$EMPTY_N));

  // submodule fAxiCc_out_buf
  FIFO2 #(.width(32'd67), .guarded(32'd1)) fAxiCc_out_buf(.RST(RST_N),
							  .CLK(CLK),
							  .D_IN(fAxiCc_out_buf$D_IN),
							  .ENQ(fAxiCc_out_buf$ENQ),
							  .DEQ(fAxiCc_out_buf$DEQ),
							  .CLR(fAxiCc_out_buf$CLR),
							  .D_OUT(fAxiCc_out_buf$D_OUT),
							  .FULL_N(fAxiCc_out_buf$FULL_N),
							  .EMPTY_N(fAxiCc_out_buf$EMPTY_N));

  // submodule fAxiRq_data_buf_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd75),
	  .MEMSIZE(9'd256)) fAxiRq_data_buf_memory(.CLKA(CLK),
						   .CLKB(CLK),
						   .ADDRA(fAxiRq_data_buf_memory$ADDRA),
						   .ADDRB(fAxiRq_data_buf_memory$ADDRB),
						   .DIA(fAxiRq_data_buf_memory$DIA),
						   .DIB(fAxiRq_data_buf_memory$DIB),
						   .WEA(fAxiRq_data_buf_memory$WEA),
						   .WEB(fAxiRq_data_buf_memory$WEB),
						   .ENA(fAxiRq_data_buf_memory$ENA),
						   .ENB(fAxiRq_data_buf_memory$ENB),
						   .DOA(),
						   .DOB(fAxiRq_data_buf_memory$DOB));

  // submodule fAxiRq_eof_buf
  SizedFIFO0 #(.p1depth(32'd4),
	       .p2cntr_width(32'd3),
	       .guarded(32'd1)) fAxiRq_eof_buf(.RST(RST_N),
					       .CLK(CLK),
					       .ENQ(fAxiRq_eof_buf$ENQ),
					       .DEQ(fAxiRq_eof_buf$DEQ),
					       .CLR(fAxiRq_eof_buf$CLR),
					       .FULL_N(fAxiRq_eof_buf$FULL_N),
					       .EMPTY_N(fAxiRq_eof_buf$EMPTY_N));

  // submodule fAxiRq_in_buf
  FIFO2 #(.width(32'd75), .guarded(32'd1)) fAxiRq_in_buf(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(fAxiRq_in_buf$D_IN),
							 .ENQ(fAxiRq_in_buf$ENQ),
							 .DEQ(fAxiRq_in_buf$DEQ),
							 .CLR(fAxiRq_in_buf$CLR),
							 .D_OUT(fAxiRq_in_buf$D_OUT),
							 .FULL_N(fAxiRq_in_buf$FULL_N),
							 .EMPTY_N(fAxiRq_in_buf$EMPTY_N));

  // submodule fAxiRq_out_buf
  FIFO2 #(.width(32'd75), .guarded(32'd1)) fAxiRq_out_buf(.RST(RST_N),
							  .CLK(CLK),
							  .D_IN(fAxiRq_out_buf$D_IN),
							  .ENQ(fAxiRq_out_buf$ENQ),
							  .DEQ(fAxiRq_out_buf$DEQ),
							  .CLR(fAxiRq_out_buf$CLR),
							  .D_OUT(fAxiRq_out_buf$D_OUT),
							  .FULL_N(fAxiRq_out_buf$FULL_N),
							  .EMPTY_N(fAxiRq_out_buf$EMPTY_N));

  // rule RL_drainCqWires
  assign CAN_FIRE_RL_drainCqWires =
	     !fAxiCq_rv[76] && pcie_in_s_axis_cq_tvalid ;
  assign WILL_FIRE_RL_drainCqWires = CAN_FIRE_RL_drainCqWires ;

  // rule RL_drainRcWires
  assign CAN_FIRE_RL_drainRcWires =
	     !fAxiRc_rv[76] && pcie_in_s_axis_rc_tvalid ;
  assign WILL_FIRE_RL_drainRcWires = CAN_FIRE_RL_drainRcWires ;

  // rule RL_driveCCWires
  assign CAN_FIRE_RL_driveCCWires = fAxiCc_out_buf$EMPTY_N ;
  assign WILL_FIRE_RL_driveCCWires = fAxiCc_out_buf$EMPTY_N ;

  // rule RL_driveRQWires
  assign CAN_FIRE_RL_driveRQWires = fAxiRq_out_buf$EMPTY_N ;
  assign WILL_FIRE_RL_driveRQWires = fAxiRq_out_buf$EMPTY_N ;

  // rule RL_fAxiCc_data_buf_portB_read_data
  assign CAN_FIRE_RL_fAxiCc_data_buf_portB_read_data = 1'd1 ;
  assign WILL_FIRE_RL_fAxiCc_data_buf_portB_read_data = 1'd1 ;

  // rule RL_fAxiCc_moveOut
  assign CAN_FIRE_RL_fAxiCc_moveOut =
	     fAxiCc_data_buf_rRdPtr != fAxiCc_data_buf_rWrPtr &&
	     fAxiCc_out_buf$FULL_N &&
	     fAxiCc_eof_buf$EMPTY_N ;
  assign WILL_FIRE_RL_fAxiCc_moveOut = CAN_FIRE_RL_fAxiCc_moveOut ;

  // rule RL_fAxiCc_moveIn
  assign CAN_FIRE_RL_fAxiCc_moveIn =
	     fAxiCc_data_buf_rRdPtr + 11'd516 != fAxiCc_data_buf_rWrPtr &&
	     fAxiCc_in_buf$EMPTY_N &&
	     (!fAxiCc_in_buf$D_OUT[0] || fAxiCc_eof_buf$FULL_N) ;
  assign WILL_FIRE_RL_fAxiCc_moveIn = CAN_FIRE_RL_fAxiCc_moveIn ;

  // rule RL_fAxiCc_data_buf_portA
  assign CAN_FIRE_RL_fAxiCc_data_buf_portA = 1'd1 ;
  assign WILL_FIRE_RL_fAxiCc_data_buf_portA = 1'd1 ;

  // rule RL_fAxiCc_data_buf_portB
  assign CAN_FIRE_RL_fAxiCc_data_buf_portB = 1'd1 ;
  assign WILL_FIRE_RL_fAxiCc_data_buf_portB = 1'd1 ;

  // rule RL_fAxiRq_data_buf_portB_read_data
  assign CAN_FIRE_RL_fAxiRq_data_buf_portB_read_data = 1'd1 ;
  assign WILL_FIRE_RL_fAxiRq_data_buf_portB_read_data = 1'd1 ;

  // rule RL_fAxiRq_moveOut
  assign CAN_FIRE_RL_fAxiRq_moveOut =
	     fAxiRq_data_buf_rRdPtr != fAxiRq_data_buf_rWrPtr &&
	     fAxiRq_out_buf$FULL_N &&
	     fAxiRq_eof_buf$EMPTY_N ;
  assign WILL_FIRE_RL_fAxiRq_moveOut = CAN_FIRE_RL_fAxiRq_moveOut ;

  // rule RL_fAxiRq_moveIn
  assign CAN_FIRE_RL_fAxiRq_moveIn =
	     fAxiRq_data_buf_rRdPtr + 9'd132 != fAxiRq_data_buf_rWrPtr &&
	     fAxiRq_in_buf$EMPTY_N &&
	     (!fAxiRq_in_buf$D_OUT[10] || fAxiRq_eof_buf$FULL_N) ;
  assign WILL_FIRE_RL_fAxiRq_moveIn = CAN_FIRE_RL_fAxiRq_moveIn ;

  // rule RL_fAxiRq_data_buf_portA
  assign CAN_FIRE_RL_fAxiRq_data_buf_portA = 1'd1 ;
  assign WILL_FIRE_RL_fAxiRq_data_buf_portA = 1'd1 ;

  // rule RL_fAxiRq_data_buf_portB
  assign CAN_FIRE_RL_fAxiRq_data_buf_portB = 1'd1 ;
  assign WILL_FIRE_RL_fAxiRq_data_buf_portB = 1'd1 ;

  // inlined wires
  assign fAxiCc_data_buf_wDataOut$wget =
	     (fAxiCc_data_buf_rCache[78] &&
	      fAxiCc_data_buf_rCache[77:67] == fAxiCc_data_buf_rRdPtr) ?
	       fAxiCc_data_buf_rCache[66:0] :
	       fAxiCc_data_buf_memory$DOB ;
  assign fAxiRq_data_buf_wDataOut$wget =
	     (fAxiRq_data_buf_rCache[84] &&
	      fAxiRq_data_buf_rCache[83:75] == fAxiRq_data_buf_rRdPtr) ?
	       fAxiRq_data_buf_rCache[74:0] :
	       fAxiRq_data_buf_memory$DOB ;
  assign fAxiCq_rv$port0__write_1 =
	     { 1'd1,
	       pcie_in_s_axis_cq_tdata,
	       pcie_in_s_axis_cq_tuser[40],
	       pcie_in_s_axis_cq_tlast,
	       pcie_in_s_axis_cq_tkeep,
	       pcie_in_s_axis_cq_tuser[3:0],
	       pcie_in_s_axis_cq_tuser[7:4] } ;
  assign fAxiCq_rv$port1__read =
	     CAN_FIRE_RL_drainCqWires ? fAxiCq_rv$port0__write_1 : fAxiCq_rv ;
  assign fAxiCq_rv$port2__read =
	     EN_cq_recv_get ?
	       77'h0AAAAAAAAAAAAAAAAAAA :
	       fAxiCq_rv$port1__read ;
  assign fAxiRc_rv$port0__write_1 =
	     { 1'd1,
	       pcie_in_s_axis_rc_tdata,
	       pcie_in_s_axis_rc_tuser[32],
	       pcie_in_s_axis_rc_tlast,
	       pcie_in_s_axis_rc_tkeep,
	       pcie_in_s_axis_rc_tuser[7:0] } ;
  assign fAxiRc_rv$port1__read =
	     CAN_FIRE_RL_drainRcWires ? fAxiRc_rv$port0__write_1 : fAxiRc_rv ;
  assign fAxiRc_rv$port2__read =
	     EN_rc_recv_get ?
	       77'h0AAAAAAAAAAAAAAAAAAA :
	       fAxiRc_rv$port1__read ;

  // register fAxiCc_data_buf_rCache
  assign fAxiCc_data_buf_rCache$D_IN =
	     { 1'd1,
	       fAxiCc_data_buf_rWrPtr,
	       x__read_data__h1848,
	       x__read_keep__h1849,
	       CAN_FIRE_RL_fAxiCc_moveIn && fAxiCc_in_buf$D_OUT[0] } ;
  assign fAxiCc_data_buf_rCache$EN = CAN_FIRE_RL_fAxiCc_moveIn ;

  // register fAxiCc_data_buf_rRdPtr
  assign fAxiCc_data_buf_rRdPtr$D_IN = x__h2037 ;
  assign fAxiCc_data_buf_rRdPtr$EN = CAN_FIRE_RL_fAxiCc_moveOut ;

  // register fAxiCc_data_buf_rWrPtr
  assign fAxiCc_data_buf_rWrPtr$D_IN = x__h1914 ;
  assign fAxiCc_data_buf_rWrPtr$EN = CAN_FIRE_RL_fAxiCc_moveIn ;

  // register fAxiCq_rv
  assign fAxiCq_rv$D_IN = fAxiCq_rv$port2__read ;
  assign fAxiCq_rv$EN = 1'b1 ;

  // register fAxiRc_rv
  assign fAxiRc_rv$D_IN = fAxiRc_rv$port2__read ;
  assign fAxiRc_rv$EN = 1'b1 ;

  // register fAxiRq_data_buf_rCache
  assign fAxiRq_data_buf_rCache$D_IN =
	     { 1'd1,
	       fAxiRq_data_buf_rWrPtr,
	       x__read_data__h3837,
	       CAN_FIRE_RL_fAxiRq_moveIn && fAxiRq_in_buf$D_OUT[10],
	       CAN_FIRE_RL_fAxiRq_moveIn ?
		 fAxiRq_in_buf$D_OUT[9:0] :
		 10'd0 } ;
  assign fAxiRq_data_buf_rCache$EN = CAN_FIRE_RL_fAxiRq_moveIn ;

  // register fAxiRq_data_buf_rRdPtr
  assign fAxiRq_data_buf_rRdPtr$D_IN = x__h4060 ;
  assign fAxiRq_data_buf_rRdPtr$EN = CAN_FIRE_RL_fAxiRq_moveOut ;

  // register fAxiRq_data_buf_rWrPtr
  assign fAxiRq_data_buf_rWrPtr$D_IN = x__h3923 ;
  assign fAxiRq_data_buf_rWrPtr$EN = CAN_FIRE_RL_fAxiRq_moveIn ;

  // submodule fAxiCc_data_buf_memory
  assign fAxiCc_data_buf_memory$ADDRA = fAxiCc_data_buf_rWrPtr[9:0] ;
  assign fAxiCc_data_buf_memory$ADDRB =
	     CAN_FIRE_RL_fAxiCc_moveOut ?
	       x__h2037[9:0] :
	       fAxiCc_data_buf_rRdPtr[9:0] ;
  assign fAxiCc_data_buf_memory$DIA =
	     { x__read_data__h1848,
	       x__read_keep__h1849,
	       CAN_FIRE_RL_fAxiCc_moveIn && fAxiCc_in_buf$D_OUT[0] } ;
  assign fAxiCc_data_buf_memory$DIB =
	     67'h2AAAAAAAAAAAAAAAA /* unspecified value */  ;
  assign fAxiCc_data_buf_memory$WEA = CAN_FIRE_RL_fAxiCc_moveIn ;
  assign fAxiCc_data_buf_memory$WEB = 1'd0 ;
  assign fAxiCc_data_buf_memory$ENA = 1'b1 ;
  assign fAxiCc_data_buf_memory$ENB = 1'b1 ;

  // submodule fAxiCc_eof_buf
  assign fAxiCc_eof_buf$ENQ =
	     WILL_FIRE_RL_fAxiCc_moveIn && fAxiCc_in_buf$D_OUT[0] ;
  assign fAxiCc_eof_buf$DEQ =
	     WILL_FIRE_RL_fAxiCc_moveOut && fAxiCc_data_buf_wDataOut$wget[0] ;
  assign fAxiCc_eof_buf$CLR = 1'b0 ;

  // submodule fAxiCc_in_buf
  assign fAxiCc_in_buf$D_IN = cc_xmit_put ;
  assign fAxiCc_in_buf$ENQ = EN_cc_xmit_put ;
  assign fAxiCc_in_buf$DEQ = CAN_FIRE_RL_fAxiCc_moveIn ;
  assign fAxiCc_in_buf$CLR = 1'b0 ;

  // submodule fAxiCc_out_buf
  assign fAxiCc_out_buf$D_IN = fAxiCc_data_buf_wDataOut$wget ;
  assign fAxiCc_out_buf$ENQ = CAN_FIRE_RL_fAxiCc_moveOut ;
  assign fAxiCc_out_buf$DEQ =
	     fAxiCc_out_buf$EMPTY_N && pcie_in_m_axis_cc_tready ;
  assign fAxiCc_out_buf$CLR = 1'b0 ;

  // submodule fAxiRq_data_buf_memory
  assign fAxiRq_data_buf_memory$ADDRA = fAxiRq_data_buf_rWrPtr[7:0] ;
  assign fAxiRq_data_buf_memory$ADDRB =
	     CAN_FIRE_RL_fAxiRq_moveOut ?
	       x__h4060[7:0] :
	       fAxiRq_data_buf_rRdPtr[7:0] ;
  assign fAxiRq_data_buf_memory$DIA =
	     { x__read_data__h3837,
	       CAN_FIRE_RL_fAxiRq_moveIn && fAxiRq_in_buf$D_OUT[10],
	       CAN_FIRE_RL_fAxiRq_moveIn ?
		 fAxiRq_in_buf$D_OUT[9:0] :
		 10'd0 } ;
  assign fAxiRq_data_buf_memory$DIB =
	     75'h2AAAAAAAAAAAAAAAAAA /* unspecified value */  ;
  assign fAxiRq_data_buf_memory$WEA = CAN_FIRE_RL_fAxiRq_moveIn ;
  assign fAxiRq_data_buf_memory$WEB = 1'd0 ;
  assign fAxiRq_data_buf_memory$ENA = 1'b1 ;
  assign fAxiRq_data_buf_memory$ENB = 1'b1 ;

  // submodule fAxiRq_eof_buf
  assign fAxiRq_eof_buf$ENQ =
	     WILL_FIRE_RL_fAxiRq_moveIn && fAxiRq_in_buf$D_OUT[10] ;
  assign fAxiRq_eof_buf$DEQ =
	     WILL_FIRE_RL_fAxiRq_moveOut &&
	     fAxiRq_data_buf_wDataOut$wget[10] ;
  assign fAxiRq_eof_buf$CLR = 1'b0 ;

  // submodule fAxiRq_in_buf
  assign fAxiRq_in_buf$D_IN = rq_xmit_put ;
  assign fAxiRq_in_buf$ENQ = EN_rq_xmit_put ;
  assign fAxiRq_in_buf$DEQ = CAN_FIRE_RL_fAxiRq_moveIn ;
  assign fAxiRq_in_buf$CLR = 1'b0 ;

  // submodule fAxiRq_out_buf
  assign fAxiRq_out_buf$D_IN = fAxiRq_data_buf_wDataOut$wget ;
  assign fAxiRq_out_buf$ENQ = CAN_FIRE_RL_fAxiRq_moveOut ;
  assign fAxiRq_out_buf$DEQ =
	     fAxiRq_out_buf$EMPTY_N && pcie_in_m_axis_rq_tready ;
  assign fAxiRq_out_buf$CLR = 1'b0 ;

  // remaining internal signals
  assign x__h1914 = fAxiCc_data_buf_rWrPtr + 11'd1 ;
  assign x__h2037 = fAxiCc_data_buf_rRdPtr + 11'd1 ;
  assign x__h3923 = fAxiRq_data_buf_rWrPtr + 9'd1 ;
  assign x__h4060 = fAxiRq_data_buf_rRdPtr + 9'd1 ;
  assign x__read_data__h1848 =
	     CAN_FIRE_RL_fAxiCc_moveIn ? fAxiCc_in_buf$D_OUT[66:3] : 64'd0 ;
  assign x__read_data__h3837 =
	     CAN_FIRE_RL_fAxiRq_moveIn ? fAxiRq_in_buf$D_OUT[74:11] : 64'd0 ;
  assign x__read_keep__h1849 =
	     CAN_FIRE_RL_fAxiCc_moveIn ? fAxiCc_in_buf$D_OUT[2:1] : 2'd0 ;
  assign x_wget__h5066 =
	     { 54'd0, fAxiRq_out_buf$D_OUT[3:0], fAxiRq_out_buf$D_OUT[7:4] } ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        fAxiCc_data_buf_rCache <= `BSV_ASSIGNMENT_DELAY
	    79'h2AAAAAAAAAAAAAAAAAAA;
	fAxiCc_data_buf_rRdPtr <= `BSV_ASSIGNMENT_DELAY 11'd0;
	fAxiCc_data_buf_rWrPtr <= `BSV_ASSIGNMENT_DELAY 11'd0;
	fAxiCq_rv <= `BSV_ASSIGNMENT_DELAY 77'h0AAAAAAAAAAAAAAAAAAA;
	fAxiRc_rv <= `BSV_ASSIGNMENT_DELAY 77'h0AAAAAAAAAAAAAAAAAAA;
	fAxiRq_data_buf_rCache <= `BSV_ASSIGNMENT_DELAY
	    85'h0AAAAAAAAAAAAAAAAAAAAA;
	fAxiRq_data_buf_rRdPtr <= `BSV_ASSIGNMENT_DELAY 9'd0;
	fAxiRq_data_buf_rWrPtr <= `BSV_ASSIGNMENT_DELAY 9'd0;
      end
    else
      begin
        if (fAxiCc_data_buf_rCache$EN)
	  fAxiCc_data_buf_rCache <= `BSV_ASSIGNMENT_DELAY
	      fAxiCc_data_buf_rCache$D_IN;
	if (fAxiCc_data_buf_rRdPtr$EN)
	  fAxiCc_data_buf_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      fAxiCc_data_buf_rRdPtr$D_IN;
	if (fAxiCc_data_buf_rWrPtr$EN)
	  fAxiCc_data_buf_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      fAxiCc_data_buf_rWrPtr$D_IN;
	if (fAxiCq_rv$EN) fAxiCq_rv <= `BSV_ASSIGNMENT_DELAY fAxiCq_rv$D_IN;
	if (fAxiRc_rv$EN) fAxiRc_rv <= `BSV_ASSIGNMENT_DELAY fAxiRc_rv$D_IN;
	if (fAxiRq_data_buf_rCache$EN)
	  fAxiRq_data_buf_rCache <= `BSV_ASSIGNMENT_DELAY
	      fAxiRq_data_buf_rCache$D_IN;
	if (fAxiRq_data_buf_rRdPtr$EN)
	  fAxiRq_data_buf_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      fAxiRq_data_buf_rRdPtr$D_IN;
	if (fAxiRq_data_buf_rWrPtr$EN)
	  fAxiRq_data_buf_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      fAxiRq_data_buf_rWrPtr$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    fAxiCc_data_buf_rCache = 79'h2AAAAAAAAAAAAAAAAAAA;
    fAxiCc_data_buf_rRdPtr = 11'h2AA;
    fAxiCc_data_buf_rWrPtr = 11'h2AA;
    fAxiCq_rv = 77'h0AAAAAAAAAAAAAAAAAAA;
    fAxiRc_rv = 77'h0AAAAAAAAAAAAAAAAAAA;
    fAxiRq_data_buf_rCache = 85'h0AAAAAAAAAAAAAAAAAAAAA;
    fAxiRq_data_buf_rRdPtr = 9'h0AA;
    fAxiRq_data_buf_rWrPtr = 9'h0AA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkSVF_PCIE

